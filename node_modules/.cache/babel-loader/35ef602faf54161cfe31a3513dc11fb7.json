{"ast":null,"code":"/*!\n * utility - lib/utility.js\n *\n * Copyright(c) 2012 - 2013 fengmk2 <fengmk2@gmail.com>\n * MIT Licensed\n */\n\"use strict\";\n/**\n * Module dependencies.\n */\n\nvar crypto = require('crypto');\n\nvar address = require('address');\n/**\n * A empty function.\n *\n * @return {Function}\n * @public\n */\n\n\nexports.noop = function () {};\n\nfunction sortObject(o) {\n  if (!o || Array.isArray(o) || typeof o !== 'object') {\n    return o;\n  }\n\n  var keys = Object.keys(o);\n  keys.sort();\n  var values = [];\n\n  for (var i = 0; i < keys.length; i++) {\n    var k = keys[i];\n    values.push([k, sortObject(o[k])]);\n  }\n\n  return values;\n}\n/**\n * hash\n *\n * @param {String} method hash method, e.g.: 'md5', 'sha1'\n * @param {String|Buffer} s\n * @param {String} [format] output string format, could be 'hex' or 'base64'. default is 'hex'.\n * @return {String} md5 hash string\n * @public\n */\n\n\nexports.hash = function hash(method, s, format) {\n  var sum = crypto.createHash(method);\n  var isBuffer = Buffer.isBuffer(s);\n\n  if (!isBuffer && typeof s === 'object') {\n    s = JSON.stringify(sortObject(s));\n  }\n\n  sum.update(s, isBuffer ? 'binary' : 'utf8');\n  return sum.digest(format || 'hex');\n};\n/**\n * md5 hash\n *\n * @param {String|Buffer} s\n * @param {String} [format] output string format, could be 'hex' or 'base64'. default is 'hex'.\n * @return {String} md5 hash string\n * @public\n */\n\n\nexports.md5 = function (s, format) {\n  return exports.hash('md5', s, format);\n};\n/**\n * sha1 hash\n *\n * @param {String|Buffer} s\n * @param {String} [format] output string format, could be 'hex' or 'base64'. default is 'hex'.\n * @return {String} sha1 hash string\n * @public\n */\n\n\nexports.sha1 = function (s, format) {\n  return exports.hash('sha1', s, format);\n};\n/**\n * HMAC algorithm.\n *\n * Equal bash:\n *\n * ```bash\n * $ echo -n \"$data\" | openssl dgst -binary -$algorithm -hmac \"$key\" | openssl $encoding\n * ```\n *\n * @param {String} algorithm, dependent on the available algorithms supported by the version of OpenSSL on the platform.\n *   Examples are 'sha1', 'md5', 'sha256', 'sha512', etc.\n *   On recent releases, `openssl list-message-digest-algorithms` will display the available digest algorithms.\n * @param {String} key, the hmac key to be used.\n * @param {String|Buffer} data, content string.\n * @param {String} [encoding='base64']\n * @return {String} digest string.\n */\n\n\nexports.hmac = function (algorithm, key, data, encoding) {\n  encoding = encoding || 'base64';\n  var hmac = crypto.createHmac(algorithm, key);\n  hmac.update(data, Buffer.isBuffer(data) ? 'binary' : 'utf8');\n  return hmac.digest(encoding);\n};\n/**\n * Base64 encode string.\n *\n * @param {String|Buffer} s\n * @param {Boolean} [urlsafe=false] Encode string s using a URL-safe alphabet,\n *   which substitutes - instead of + and _ instead of / in the standard Base64 alphabet.\n * @return {String} base64 encode format string.\n */\n\n\nexports.base64encode = function (s, urlsafe) {\n  if (!Buffer.isBuffer(s)) {\n    s = new Buffer(s);\n  }\n\n  var encode = s.toString('base64');\n\n  if (urlsafe) {\n    encode = encode.replace(/\\+/g, '-').replace(/\\//g, '_');\n  }\n\n  return encode;\n};\n/**\n * Base64 string decode.\n *\n * @param {String} encode, base64 encoding string.\n * @param {Boolean} [urlsafe=false] Decode string s using a URL-safe alphabet,\n *   which substitutes - instead of + and _ instead of / in the standard Base64 alphabet.\n * @return {String} plain text.\n */\n\n\nexports.base64decode = function (encode, urlsafe) {\n  if (urlsafe) {\n    encode = encode.replace(/\\-/g, '+').replace(/_/g, '/');\n  }\n\n  encode = new Buffer(encode, 'base64');\n  return encode.toString();\n};\n/**\n * Escape the given string of `html`.\n *\n * @param {String} html\n * @return {String}\n * @public\n */\n\n\nexports.escape = function (html) {\n  return String(html).replace(/&(?!\\w+;)/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;');\n};\n/**\n * Array random slice with items count.\n * @param {Array} arr\n * @param {Number} num, number of sub items.\n * @return {Array}\n */\n\n\nexports.randomSlice = function (arr, num) {\n  if (!num || num >= arr.length) {\n    return arr.slice();\n  }\n\n  var index = Math.floor(Math.random() * arr.length);\n  var a = [];\n\n  for (var i = 0, j = index; i < num; i++) {\n    a.push(arr[j++]);\n\n    if (j === arr.length) {\n      j = 0;\n    }\n  }\n\n  return a;\n};\n/**\n * Safe encodeURIComponent, won't throw any error.\n * If `encodeURIComponent` error happen, just return the original value.\n *\n * @param {String} text\n * @return {String} URL encode string.\n */\n\n\nexports.encodeURIComponent = function (text) {\n  try {\n    return encodeURIComponent(text);\n  } catch (e) {\n    return text;\n  }\n};\n/**\n * Safe decodeURIComponent, won't throw any error.\n * If `decodeURIComponent` error happen, just return the original value.\n *\n * @param {String} encodeText\n * @return {String} URL decode original string.\n */\n\n\nexports.decodeURIComponent = function (encodeText) {\n  try {\n    return decodeURIComponent(encodeText);\n  } catch (e) {\n    return encodeText;\n  }\n};\n\nvar MONTHS = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']; // only set once.\n\nvar TIMEZONE = ' ';\n\nvar _hourOffset = parseInt(-new Date().getTimezoneOffset() / 60, 10);\n\nif (_hourOffset >= 0) {\n  TIMEZONE += '+';\n} else {\n  TIMEZONE += '-';\n}\n\n_hourOffset = Math.abs(_hourOffset);\n\nif (_hourOffset < 10) {\n  _hourOffset = '0' + _hourOffset;\n}\n\nTIMEZONE += _hourOffset + '00';\n/**\n * Access log format date. format: `moment().format('DD/MMM/YYYY:HH:mm:ss ZZ')`\n *\n * @return {String}\n */\n\nexports.accessLogDate = function (d) {\n  // 16/Apr/2013:16:40:09 +0800\n  d = d || new Date();\n  var date = d.getDate();\n\n  if (date < 10) {\n    date = '0' + date;\n  }\n\n  var hours = d.getHours();\n\n  if (hours < 10) {\n    hours = '0' + hours;\n  }\n\n  var mintues = d.getMinutes();\n\n  if (mintues < 10) {\n    mintues = '0' + mintues;\n  }\n\n  var seconds = d.getSeconds();\n\n  if (seconds < 10) {\n    seconds = '0' + seconds;\n  }\n\n  return date + '/' + MONTHS[d.getMonth()] + '/' + d.getFullYear() + ':' + hours + ':' + mintues + ':' + seconds + TIMEZONE;\n};\n/**\n * Normal log format date. format: `moment().format('YYYY-MM-DD HH:mm:ss.SSS')`\n *\n * @return {String}\n */\n\n\nexports.logDate = exports.YYYYMMDDHHmmssSSS = function (d) {\n  d = d || new Date();\n  var date = d.getDate();\n\n  if (date < 10) {\n    date = '0' + date;\n  }\n\n  var month = d.getMonth() + 1;\n\n  if (month < 10) {\n    month = '0' + month;\n  }\n\n  var hours = d.getHours();\n\n  if (hours < 10) {\n    hours = '0' + hours;\n  }\n\n  var mintues = d.getMinutes();\n\n  if (mintues < 10) {\n    mintues = '0' + mintues;\n  }\n\n  var seconds = d.getSeconds();\n\n  if (seconds < 10) {\n    seconds = '0' + seconds;\n  }\n\n  var milliseconds = d.getMilliseconds();\n\n  if (milliseconds < 10) {\n    milliseconds = '00' + milliseconds;\n  } else if (milliseconds < 100) {\n    milliseconds = '0' + milliseconds;\n  }\n\n  return d.getFullYear() + '-' + month + '-' + date + ' ' + hours + ':' + mintues + ':' + seconds + '.' + milliseconds;\n};\n/**\n * `moment().format('YYYY-MM-DD HH:mm:ss')` format date string.\n *\n * @return {String}\n */\n\n\nexports.YYYYMMDDHHmmss = function (d) {\n  d = d || new Date();\n  var date = d.getDate();\n\n  if (date < 10) {\n    date = '0' + date;\n  }\n\n  var month = d.getMonth() + 1;\n\n  if (month < 10) {\n    month = '0' + month;\n  }\n\n  var hours = d.getHours();\n\n  if (hours < 10) {\n    hours = '0' + hours;\n  }\n\n  var mintues = d.getMinutes();\n\n  if (mintues < 10) {\n    mintues = '0' + mintues;\n  }\n\n  var seconds = d.getSeconds();\n\n  if (seconds < 10) {\n    seconds = '0' + seconds;\n  }\n\n  return d.getFullYear() + '-' + month + '-' + date + ' ' + hours + ':' + mintues + ':' + seconds;\n};\n/**\n * `moment().format('YYYY-MM-DD')` format date string.\n *\n * @return {String}\n */\n\n\nexports.YYYYMMDD = function YYYYMMDD(d) {\n  d = d || new Date();\n  var date = d.getDate();\n\n  if (date < 10) {\n    date = '0' + date;\n  }\n\n  var month = d.getMonth() + 1;\n\n  if (month < 10) {\n    month = '0' + month;\n  }\n\n  return d.getFullYear() + '-' + month + '-' + date;\n};\n/**\n * return datetime struct.\n *\n * @return {Object} date\n *  - {Number} YYYYMMDD, 20130401\n *  - {Number} H, 0, 1, 9, 12, 23\n */\n\n\nexports.datestruct = function (now) {\n  now = now || new Date();\n  return {\n    YYYYMMDD: now.getFullYear() * 10000 + (now.getMonth() + 1) * 100 + now.getDate(),\n    H: now.getHours()\n  };\n};\n\nvar _showWarnning = false;\n/**\n * Get current machine IPv4\n *\n * @param {String} [interfaceName] interface name, default is 'eth' on linux, 'en' on mac os.\n * @return {String} IP address\n */\n\nexports.getIP = exports.getIPv4 = function (interfaceName) {\n  if (!_showWarnning) {\n    _showWarnning = true;\n    console.warn('[WARNNING] getIP() remove, PLEASE use `https://github.com/fengmk2/address` module instead');\n  }\n\n  return address.ip(interfaceName);\n};\n/**\n * Get current machine IPv6\n *\n * @param {String} [interfaceName] interface name, default is 'eth' on linux, 'en' on mac os.\n * @return {String} IP address\n */\n\n\nexports.getIPv6 = function (interfaceName) {\n  return address.ipv6(interfaceName);\n};\n/**\n * Get a function parameter's names.\n *\n * @param {Function} func\n * @param {Boolean} [useCache], default is true\n * @return {Array} names\n */\n\n\nexports.getParamNames = function (func, cache) {\n  cache = cache !== false;\n\n  if (cache && func.__cache_names) {\n    return func.__cache_names;\n  }\n\n  var str = func.toString();\n  var names = str.slice(str.indexOf('(') + 1, str.indexOf(')')).match(/([^\\s,]+)/g) || [];\n  func.__cache_names = names;\n  return names;\n}; // http://www.2ality.com/2013/10/safe-integers.html\n\n\nexports.MAX_SAFE_INTEGER = Math.pow(2, 53) - 1;\nexports.MIN_SAFE_INTEGER = -exports.MAX_SAFE_INTEGER;\nvar MAX_SAFE_INTEGER_STR = exports.MAX_SAFE_INTEGER_STR = String(exports.MAX_SAFE_INTEGER);\nvar MAX_SAFE_INTEGER_STR_LENGTH = MAX_SAFE_INTEGER_STR.length;\n/**\n * Detect a number string can safe convert to Javascript Number.\n *\n * @param {String} s number format string, like `\"123\"`, `\"-1000123123123123123123\"`\n * @return {Boolean}\n */\n\nexports.isSafeNumberString = function (s) {\n  if (s[0] === '-') {\n    s = s.substring(1);\n  }\n\n  if (s.length < MAX_SAFE_INTEGER_STR_LENGTH || s.length === MAX_SAFE_INTEGER_STR_LENGTH && s <= MAX_SAFE_INTEGER_STR) {\n    return true;\n  }\n\n  return false;\n};\n/**\n * Convert string to Number if string in safe Number scope.\n *\n * @param {String} s number format string.\n * @return {Number|String} success will return Number, otherise return the original string.\n */\n\n\nexports.toSafeNumber = function (s) {\n  if (typeof s === 'number') {\n    return s;\n  }\n\n  return exports.isSafeNumberString(s) ? Number(s) : s;\n};\n/**\n * Get Unix's timestamp in seconds.\n * @return {Number}\n */\n\n\nexports.timestamp = function (t) {\n  if (t) {\n    var v = t;\n\n    if (typeof v === 'string') {\n      v = Number(v);\n    }\n\n    if (String(t).length === 10) {\n      v *= 1000;\n    }\n\n    return new Date(v);\n  }\n\n  return Math.round(Date.now() / 1000);\n};\n\nvar _setImmediate = typeof setImmediate === 'function' ? setImmediate : process.nextTick;\n\nexports.setImmediate = function (callback) {\n  _setImmediate(callback);\n};\n\nexports.randomString = function (length, charSet) {\n  var result = [];\n  length = length || 16;\n  charSet = charSet || 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n  while (length--) {\n    result.push(charSet[Math.floor(Math.random() * charSet.length)]);\n  }\n\n  return result.join('');\n};\n\nexports.has = function (obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n};","map":{"version":3,"names":["crypto","require","address","exports","noop","sortObject","o","Array","isArray","keys","Object","sort","values","i","length","k","push","hash","method","s","format","sum","createHash","isBuffer","Buffer","JSON","stringify","update","digest","md5","sha1","hmac","algorithm","key","data","encoding","createHmac","base64encode","urlsafe","encode","toString","replace","base64decode","escape","html","String","randomSlice","arr","num","slice","index","Math","floor","random","a","j","encodeURIComponent","text","e","decodeURIComponent","encodeText","MONTHS","TIMEZONE","_hourOffset","parseInt","Date","getTimezoneOffset","abs","accessLogDate","d","date","getDate","hours","getHours","mintues","getMinutes","seconds","getSeconds","getMonth","getFullYear","logDate","YYYYMMDDHHmmssSSS","month","milliseconds","getMilliseconds","YYYYMMDDHHmmss","YYYYMMDD","datestruct","now","H","_showWarnning","getIP","getIPv4","interfaceName","console","warn","ip","getIPv6","ipv6","getParamNames","func","cache","__cache_names","str","names","indexOf","match","MAX_SAFE_INTEGER","pow","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER_STR","MAX_SAFE_INTEGER_STR_LENGTH","isSafeNumberString","substring","toSafeNumber","Number","timestamp","t","v","round","_setImmediate","setImmediate","process","nextTick","callback","randomString","charSet","result","join","has","obj","prop","prototype","hasOwnProperty","call"],"sources":["C:/Users/bryan/Desktop/myrepresentatives/frontend/node_modules/digest-header/node_modules/utility/lib/utility.js"],"sourcesContent":["/*!\n * utility - lib/utility.js\n *\n * Copyright(c) 2012 - 2013 fengmk2 <fengmk2@gmail.com>\n * MIT Licensed\n */\n\n\"use strict\";\n\n/**\n * Module dependencies.\n */\n\nvar crypto = require('crypto');\nvar address = require('address');\n\n/**\n * A empty function.\n *\n * @return {Function}\n * @public\n */\nexports.noop = function () {};\n\nfunction sortObject(o) {\n  if (!o || Array.isArray(o) || typeof o !== 'object') {\n    return o;\n  }\n  var keys = Object.keys(o);\n  keys.sort();\n  var values = [];\n  for (var i = 0; i < keys.length; i++) {\n    var k = keys[i];\n    values.push([k, sortObject(o[k])]);\n  }\n  return values;\n}\n\n/**\n * hash\n *\n * @param {String} method hash method, e.g.: 'md5', 'sha1'\n * @param {String|Buffer} s\n * @param {String} [format] output string format, could be 'hex' or 'base64'. default is 'hex'.\n * @return {String} md5 hash string\n * @public\n */\nexports.hash = function hash(method, s, format) {\n  var sum = crypto.createHash(method);\n  var isBuffer = Buffer.isBuffer(s);\n  if (!isBuffer && typeof s === 'object') {\n    s = JSON.stringify(sortObject(s));\n  }\n  sum.update(s, isBuffer ? 'binary' : 'utf8');\n  return sum.digest(format || 'hex');\n};\n\n/**\n * md5 hash\n *\n * @param {String|Buffer} s\n * @param {String} [format] output string format, could be 'hex' or 'base64'. default is 'hex'.\n * @return {String} md5 hash string\n * @public\n */\nexports.md5 = function (s, format) {\n  return exports.hash('md5', s, format);\n};\n\n/**\n * sha1 hash\n *\n * @param {String|Buffer} s\n * @param {String} [format] output string format, could be 'hex' or 'base64'. default is 'hex'.\n * @return {String} sha1 hash string\n * @public\n */\nexports.sha1 = function (s, format) {\n  return exports.hash('sha1', s, format);\n};\n\n/**\n * HMAC algorithm.\n *\n * Equal bash:\n *\n * ```bash\n * $ echo -n \"$data\" | openssl dgst -binary -$algorithm -hmac \"$key\" | openssl $encoding\n * ```\n *\n * @param {String} algorithm, dependent on the available algorithms supported by the version of OpenSSL on the platform.\n *   Examples are 'sha1', 'md5', 'sha256', 'sha512', etc.\n *   On recent releases, `openssl list-message-digest-algorithms` will display the available digest algorithms.\n * @param {String} key, the hmac key to be used.\n * @param {String|Buffer} data, content string.\n * @param {String} [encoding='base64']\n * @return {String} digest string.\n */\nexports.hmac = function (algorithm, key, data, encoding) {\n  encoding = encoding || 'base64';\n  var hmac = crypto.createHmac(algorithm, key);\n  hmac.update(data, Buffer.isBuffer(data) ? 'binary' : 'utf8');\n  return hmac.digest(encoding);\n};\n\n/**\n * Base64 encode string.\n *\n * @param {String|Buffer} s\n * @param {Boolean} [urlsafe=false] Encode string s using a URL-safe alphabet,\n *   which substitutes - instead of + and _ instead of / in the standard Base64 alphabet.\n * @return {String} base64 encode format string.\n */\nexports.base64encode = function (s, urlsafe) {\n  if (!Buffer.isBuffer(s)) {\n    s = new Buffer(s);\n  }\n  var encode = s.toString('base64');\n  if (urlsafe) {\n    encode = encode.replace(/\\+/g, '-').replace(/\\//g, '_');\n  }\n  return encode;\n};\n\n/**\n * Base64 string decode.\n *\n * @param {String} encode, base64 encoding string.\n * @param {Boolean} [urlsafe=false] Decode string s using a URL-safe alphabet,\n *   which substitutes - instead of + and _ instead of / in the standard Base64 alphabet.\n * @return {String} plain text.\n */\nexports.base64decode = function (encode, urlsafe) {\n  if (urlsafe) {\n    encode = encode.replace(/\\-/g, '+').replace(/_/g, '/');\n  }\n  encode = new Buffer(encode, 'base64');\n  return encode.toString();\n};\n\n/**\n * Escape the given string of `html`.\n *\n * @param {String} html\n * @return {String}\n * @public\n */\nexports.escape = function (html) {\n  return String(html)\n    .replace(/&(?!\\w+;)/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;');\n};\n\n/**\n * Array random slice with items count.\n * @param {Array} arr\n * @param {Number} num, number of sub items.\n * @return {Array}\n */\nexports.randomSlice = function (arr, num) {\n  if (!num || num >= arr.length) {\n    return arr.slice();\n  }\n  var index = Math.floor(Math.random() * arr.length);\n  var a = [];\n  for (var i = 0, j = index; i < num; i++) {\n    a.push(arr[j++]);\n    if (j === arr.length) {\n      j = 0;\n    }\n  }\n  return a;\n};\n\n/**\n * Safe encodeURIComponent, won't throw any error.\n * If `encodeURIComponent` error happen, just return the original value.\n *\n * @param {String} text\n * @return {String} URL encode string.\n */\nexports.encodeURIComponent = function (text) {\n  try {\n    return encodeURIComponent(text);\n  } catch (e) {\n    return text;\n  }\n};\n\n/**\n * Safe decodeURIComponent, won't throw any error.\n * If `decodeURIComponent` error happen, just return the original value.\n *\n * @param {String} encodeText\n * @return {String} URL decode original string.\n */\nexports.decodeURIComponent = function (encodeText) {\n  try {\n    return decodeURIComponent(encodeText);\n  } catch (e) {\n    return encodeText;\n  }\n};\n\nvar MONTHS = [\n  'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'\n];\n\n// only set once.\nvar TIMEZONE = ' ';\nvar _hourOffset = parseInt(-(new Date().getTimezoneOffset()) / 60, 10);\nif (_hourOffset >= 0) {\n  TIMEZONE += '+';\n} else {\n  TIMEZONE += '-';\n}\n_hourOffset = Math.abs(_hourOffset);\nif (_hourOffset < 10) {\n  _hourOffset = '0' + _hourOffset;\n}\nTIMEZONE += _hourOffset + '00';\n\n/**\n * Access log format date. format: `moment().format('DD/MMM/YYYY:HH:mm:ss ZZ')`\n *\n * @return {String}\n */\nexports.accessLogDate = function (d) {\n  // 16/Apr/2013:16:40:09 +0800\n  d = d || new Date();\n  var date = d.getDate();\n  if (date < 10) {\n    date = '0' + date;\n  }\n  var hours = d.getHours();\n  if (hours < 10) {\n    hours = '0' + hours;\n  }\n  var mintues = d.getMinutes();\n  if (mintues < 10) {\n    mintues = '0' + mintues;\n  }\n  var seconds = d.getSeconds();\n  if (seconds < 10) {\n    seconds = '0' + seconds;\n  }\n  return date + '/' + MONTHS[d.getMonth()] + '/' + d.getFullYear() +\n    ':' + hours + ':' + mintues + ':' + seconds + TIMEZONE;\n};\n\n/**\n * Normal log format date. format: `moment().format('YYYY-MM-DD HH:mm:ss.SSS')`\n *\n * @return {String}\n */\nexports.logDate = exports.YYYYMMDDHHmmssSSS = function (d) {\n  d = d || new Date();\n  var date = d.getDate();\n  if (date < 10) {\n    date = '0' + date;\n  }\n  var month = d.getMonth() + 1;\n  if (month < 10) {\n    month = '0' + month;\n  }\n  var hours = d.getHours();\n  if (hours < 10) {\n    hours = '0' + hours;\n  }\n  var mintues = d.getMinutes();\n  if (mintues < 10) {\n    mintues = '0' + mintues;\n  }\n  var seconds = d.getSeconds();\n  if (seconds < 10) {\n    seconds = '0' + seconds;\n  }\n  var milliseconds = d.getMilliseconds();\n  if (milliseconds < 10) {\n    milliseconds = '00' + milliseconds;\n  } else if (milliseconds < 100) {\n    milliseconds = '0' + milliseconds;\n  }\n  return d.getFullYear() + '-' + month + '-' + date + ' ' +\n    hours + ':' + mintues + ':' + seconds + '.' + milliseconds;\n};\n\n/**\n * `moment().format('YYYY-MM-DD HH:mm:ss')` format date string.\n *\n * @return {String}\n */\nexports.YYYYMMDDHHmmss = function (d) {\n  d = d || new Date();\n  var date = d.getDate();\n  if (date < 10) {\n    date = '0' + date;\n  }\n  var month = d.getMonth() + 1;\n  if (month < 10) {\n    month = '0' + month;\n  }\n  var hours = d.getHours();\n  if (hours < 10) {\n    hours = '0' + hours;\n  }\n  var mintues = d.getMinutes();\n  if (mintues < 10) {\n    mintues = '0' + mintues;\n  }\n  var seconds = d.getSeconds();\n  if (seconds < 10) {\n    seconds = '0' + seconds;\n  }\n  return d.getFullYear() + '-' + month + '-' + date + ' ' +\n    hours + ':' + mintues + ':' + seconds;\n};\n\n/**\n * `moment().format('YYYY-MM-DD')` format date string.\n *\n * @return {String}\n */\nexports.YYYYMMDD = function YYYYMMDD(d) {\n  d = d || new Date();\n  var date = d.getDate();\n  if (date < 10) {\n    date = '0' + date;\n  }\n  var month = d.getMonth() + 1;\n  if (month < 10) {\n    month = '0' + month;\n  }\n  return d.getFullYear() + '-' + month + '-' + date;\n};\n\n/**\n * return datetime struct.\n *\n * @return {Object} date\n *  - {Number} YYYYMMDD, 20130401\n *  - {Number} H, 0, 1, 9, 12, 23\n */\nexports.datestruct = function (now) {\n  now = now || new Date();\n  return {\n    YYYYMMDD: now.getFullYear() * 10000 + (now.getMonth() + 1) * 100 + now.getDate(),\n    H: now.getHours()\n  };\n};\n\nvar _showWarnning = false;\n\n/**\n * Get current machine IPv4\n *\n * @param {String} [interfaceName] interface name, default is 'eth' on linux, 'en' on mac os.\n * @return {String} IP address\n */\nexports.getIP = exports.getIPv4 = function (interfaceName) {\n  if (!_showWarnning) {\n    _showWarnning = true;\n    console.warn('[WARNNING] getIP() remove, PLEASE use `https://github.com/fengmk2/address` module instead');\n  }\n  return address.ip(interfaceName);\n};\n\n/**\n * Get current machine IPv6\n *\n * @param {String} [interfaceName] interface name, default is 'eth' on linux, 'en' on mac os.\n * @return {String} IP address\n */\nexports.getIPv6 = function (interfaceName) {\n  return address.ipv6(interfaceName);\n};\n\n/**\n * Get a function parameter's names.\n *\n * @param {Function} func\n * @param {Boolean} [useCache], default is true\n * @return {Array} names\n */\nexports.getParamNames = function (func, cache) {\n  cache = cache !== false;\n  if (cache && func.__cache_names) {\n    return func.__cache_names;\n  }\n  var str = func.toString();\n  var names = str.slice(str.indexOf('(') + 1, str.indexOf(')')).match(/([^\\s,]+)/g) || [];\n  func.__cache_names = names;\n  return names;\n};\n\n// http://www.2ality.com/2013/10/safe-integers.html\nexports.MAX_SAFE_INTEGER = Math.pow(2, 53) - 1;\nexports.MIN_SAFE_INTEGER = -exports.MAX_SAFE_INTEGER;\nvar MAX_SAFE_INTEGER_STR = exports.MAX_SAFE_INTEGER_STR = String(exports.MAX_SAFE_INTEGER);\nvar MAX_SAFE_INTEGER_STR_LENGTH = MAX_SAFE_INTEGER_STR.length;\n\n/**\n * Detect a number string can safe convert to Javascript Number.\n *\n * @param {String} s number format string, like `\"123\"`, `\"-1000123123123123123123\"`\n * @return {Boolean}\n */\nexports.isSafeNumberString = function (s) {\n  if (s[0] === '-') {\n    s = s.substring(1);\n  }\n  if (s.length < MAX_SAFE_INTEGER_STR_LENGTH || (s.length === MAX_SAFE_INTEGER_STR_LENGTH && s <= MAX_SAFE_INTEGER_STR)) {\n    return true;\n  }\n  return false;\n};\n\n/**\n * Convert string to Number if string in safe Number scope.\n *\n * @param {String} s number format string.\n * @return {Number|String} success will return Number, otherise return the original string.\n */\nexports.toSafeNumber = function (s) {\n  if (typeof s === 'number') {\n    return s;\n  }\n\n  return exports.isSafeNumberString(s) ? Number(s) : s;\n};\n\n/**\n * Get Unix's timestamp in seconds.\n * @return {Number}\n */\nexports.timestamp = function (t) {\n  if (t) {\n    var v = t;\n    if (typeof v === 'string') {\n      v = Number(v);\n    }\n    if (String(t).length === 10) {\n      v *= 1000;\n    }\n    return new Date(v);\n  }\n  return Math.round(Date.now() / 1000);\n};\n\nvar _setImmediate = typeof setImmediate === 'function' ? setImmediate : process.nextTick;\n\nexports.setImmediate = function (callback) {\n  _setImmediate(callback);\n};\n\nexports.randomString = function (length, charSet) {\n  var result = [];\n  length = length || 16;\n  charSet = charSet || 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n  while (length--) {\n    result.push(charSet[Math.floor(Math.random() * charSet.length)]);\n  }\n  return result.join('');\n};\n\nexports.has = function (obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}