{"ast":null,"code":"import _slicedToArray from\"C:/Users/bryan/Desktop/my-representatives/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _asyncToGenerator from\"C:/Users/bryan/Desktop/my-representatives/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\bryan\\\\Desktop\\\\my-representatives\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React,{useState,useEffect,useRef}from\"react\";import logo from'../images/logo.png';import\"./styles/Startup.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var autoComplete;var loadScript=function loadScript(url,callback){var script=document.createElement(\"script\");script.type=\"text/javascript\";if(script.readyState){script.onreadystatechange=function(){if(script.readyState===\"loaded\"||script.readyState===\"complete\"){script.onreadystatechange=null;callback();}};}else{script.onload=function(){return callback();};}script.src=url;document.getElementsByTagName(\"head\")[0].appendChild(script);};function handleScriptLoad(updateQuery,autoCompleteRef){autoComplete=new window.google.maps.places.Autocomplete(autoCompleteRef.current,{types:['address'],componentRestrictions:{country:\"us\"}});autoComplete.setFields([\"address_components\",\"formatted_address\"]);autoComplete.addListener(\"place_changed\",function(){return handlePlaceSelect(updateQuery);});}function handlePlaceSelect(_x){return _handlePlaceSelect.apply(this,arguments);}function _handlePlaceSelect(){_handlePlaceSelect=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(updateQuery){var addressObject,query;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:addressObject=autoComplete.getPlace();query=addressObject.formatted_address;updateQuery(query);console.log(addressObject);case 4:case\"end\":return _context.stop();}}},_callee);}));return _handlePlaceSelect.apply(this,arguments);}function Startup(_ref){var setConstituent=_ref.setConstituent;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),query=_useState2[0],setQuery=_useState2[1];var autoCompleteRef=useRef(null);function handleSubmit(){console.log(query);setConstituent(query);}useEffect(function(){loadScript(\"https://maps.googleapis.com/maps/api/js?key=AIzaSyDRZuEFP9Y9rUvs0gJsqB7KDmaHPnv8rTo&libraries=places\",function(){return handleScriptLoad(setQuery,autoCompleteRef);});},[]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"img\",{src:logo}),/*#__PURE__*/_jsxs(\"div\",{className:\"search-location-input\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"input\",ref:autoCompleteRef,onChange:function onChange(event){return setQuery(event.target.value);},placeholder:\"Enter a City\",value:query}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSubmit,children:\"Search\"})]})]});}export default Startup;","map":{"version":3,"names":["React","useState","useEffect","useRef","logo","autoComplete","loadScript","url","callback","script","document","createElement","type","readyState","onreadystatechange","onload","src","getElementsByTagName","appendChild","handleScriptLoad","updateQuery","autoCompleteRef","window","google","maps","places","Autocomplete","current","types","componentRestrictions","country","setFields","addListener","handlePlaceSelect","addressObject","getPlace","query","formatted_address","console","log","Startup","setConstituent","setQuery","handleSubmit","event","target","value"],"sources":["C:/Users/bryan/Desktop/my-representatives/src/components/Startup.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport logo from '../images/logo.png'\r\nimport \"./styles/Startup.css\";\r\n\r\nlet autoComplete;\r\n\r\nconst loadScript = (url, callback) => {\r\n  let script = document.createElement(\"script\");\r\n  script.type = \"text/javascript\";\r\n\r\n  if (script.readyState) {\r\n    script.onreadystatechange = function() {\r\n      if (script.readyState === \"loaded\" || script.readyState === \"complete\") {\r\n        script.onreadystatechange = null;\r\n        callback();\r\n      }\r\n    };\r\n  } else {\r\n    script.onload = () => callback();\r\n  }\r\n\r\n  script.src = url;\r\n  document.getElementsByTagName(\"head\")[0].appendChild(script);\r\n};\r\n\r\nfunction handleScriptLoad(updateQuery, autoCompleteRef) {\r\n  autoComplete = new window.google.maps.places.Autocomplete(\r\n    autoCompleteRef.current,\r\n    { types: ['address'], componentRestrictions: { country: \"us\" } }\r\n  );\r\n  autoComplete.setFields([\"address_components\", \"formatted_address\"]);\r\n  autoComplete.addListener(\"place_changed\", () =>\r\n    handlePlaceSelect(updateQuery)\r\n  );\r\n}\r\n\r\nasync function handlePlaceSelect(updateQuery) {\r\n  const addressObject = autoComplete.getPlace();\r\n  const query = addressObject.formatted_address;\r\n  updateQuery(query);\r\n  console.log(addressObject);\r\n}\r\n\r\n\r\nfunction Startup({setConstituent}) {\r\n  const [query, setQuery] = useState(\"\");\r\n  const autoCompleteRef = useRef(null);\r\n\r\n  function handleSubmit()\r\n  {\r\n    console.log(query)\r\n    setConstituent(query);\r\n  }\r\n  useEffect(() => {\r\n    loadScript(\r\n      `https://maps.googleapis.com/maps/api/js?key=AIzaSyDRZuEFP9Y9rUvs0gJsqB7KDmaHPnv8rTo&libraries=places`,\r\n      () => handleScriptLoad(setQuery, autoCompleteRef)\r\n    );\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div>\r\n      <img src ={logo}/>\r\n      <div className=\"search-location-input\">\r\n      \r\n        <input className =\"input\"\r\n          ref={autoCompleteRef}\r\n          onChange={event => setQuery(event.target.value)}\r\n          placeholder=\"Enter a City\"\r\n          value={query}\r\n        />\r\n       <button onClick={handleSubmit}>\r\n        Search\r\n      </button>\r\n         \r\n      </div>\r\n     \r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Startup;"],"mappings":"yYAAA,MAAOA,MAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,MAArC,KAAmD,OAAnD,CACA,MAAOC,KAAP,KAAiB,oBAAjB,CACA,MAAO,sBAAP,C,wFAEA,GAAIC,aAAJ,CAEA,GAAMC,WAAU,CAAG,QAAbA,WAAa,CAACC,GAAD,CAAMC,QAAN,CAAmB,CACpC,GAAIC,OAAM,CAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAb,CACAF,MAAM,CAACG,IAAP,CAAc,iBAAd,CAEA,GAAIH,MAAM,CAACI,UAAX,CAAuB,CACrBJ,MAAM,CAACK,kBAAP,CAA4B,UAAW,CACrC,GAAIL,MAAM,CAACI,UAAP,GAAsB,QAAtB,EAAkCJ,MAAM,CAACI,UAAP,GAAsB,UAA5D,CAAwE,CACtEJ,MAAM,CAACK,kBAAP,CAA4B,IAA5B,CACAN,QAAQ,GACT,CACF,CALD,CAMD,CAPD,IAOO,CACLC,MAAM,CAACM,MAAP,CAAgB,iBAAMP,SAAQ,EAAd,EAAhB,CACD,CAEDC,MAAM,CAACO,GAAP,CAAaT,GAAb,CACAG,QAAQ,CAACO,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,EAAyCC,WAAzC,CAAqDT,MAArD,EACD,CAjBD,CAmBA,QAASU,iBAAT,CAA0BC,WAA1B,CAAuCC,eAAvC,CAAwD,CACtDhB,YAAY,CAAG,GAAIiB,OAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBC,MAAnB,CAA0BC,YAA9B,CACbL,eAAe,CAACM,OADH,CAEb,CAAEC,KAAK,CAAE,CAAC,SAAD,CAAT,CAAsBC,qBAAqB,CAAE,CAAEC,OAAO,CAAE,IAAX,CAA7C,CAFa,CAAf,CAIAzB,YAAY,CAAC0B,SAAb,CAAuB,CAAC,oBAAD,CAAuB,mBAAvB,CAAvB,EACA1B,YAAY,CAAC2B,WAAb,CAAyB,eAAzB,CAA0C,iBACxCC,kBAAiB,CAACb,WAAD,CADuB,EAA1C,EAGD,C,QAEca,kB,+JAAf,iBAAiCb,WAAjC,0IACQc,aADR,CACwB7B,YAAY,CAAC8B,QAAb,EADxB,CAEQC,KAFR,CAEgBF,aAAa,CAACG,iBAF9B,CAGEjB,WAAW,CAACgB,KAAD,CAAX,CACAE,OAAO,CAACC,GAAR,CAAYL,aAAZ,EAJF,sD,oDAQA,QAASM,QAAT,MAAmC,IAAjBC,eAAiB,MAAjBA,cAAiB,CACjC,cAA0BxC,QAAQ,CAAC,EAAD,CAAlC,wCAAOmC,KAAP,eAAcM,QAAd,eACA,GAAMrB,gBAAe,CAAGlB,MAAM,CAAC,IAAD,CAA9B,CAEA,QAASwC,aAAT,EACA,CACEL,OAAO,CAACC,GAAR,CAAYH,KAAZ,EACAK,cAAc,CAACL,KAAD,CAAd,CACD,CACDlC,SAAS,CAAC,UAAM,CACdI,UAAU,wGAER,iBAAMa,iBAAgB,CAACuB,QAAD,CAAWrB,eAAX,CAAtB,EAFQ,CAAV,CAID,CALQ,CAKN,EALM,CAAT,CAQA,mBACE,oCACE,YAAK,GAAG,CAAGjB,IAAX,EADF,cAEE,aAAK,SAAS,CAAC,uBAAf,wBAEE,cAAO,SAAS,CAAE,OAAlB,CACE,GAAG,CAAEiB,eADP,CAEE,QAAQ,CAAE,kBAAAuB,KAAK,QAAIF,SAAQ,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAZ,EAFjB,CAGE,WAAW,CAAC,cAHd,CAIE,KAAK,CAAEV,KAJT,EAFF,cAQC,eAAQ,OAAO,CAAEO,YAAjB,oBARD,GAFF,GADF,CAoBD,CAED,cAAeH,QAAf"},"metadata":{},"sourceType":"module"}