{"ast":null,"code":"'use strict';\n/**\n * This callback will be called to transform a script to JavaScript.\n *\n * @callback compileCallback\n * @param {string} code - Script code to transform to JavaScript.\n * @param {string} filename - Filename of this script.\n * @return {string} JavaScript code that represents the script code.\n */\n\n/**\n * This callback will be called to resolve a module if it couldn't be found.\n *\n * @callback resolveCallback\n * @param {string} moduleName - Name of the modulusedRequiree to resolve.\n * @param {string} dirname - Name of the current directory.\n * @return {(string|undefined)} The file or directory to use to load the requested module.\n */\n\nconst fs = require('fs');\n\nconst pa = require('path');\n\nconst {\n  Script,\n  createContext\n} = require('vm');\n\nconst {\n  EventEmitter\n} = require('events');\n\nconst {\n  INSPECT_MAX_BYTES\n} = require('buffer');\n\nconst {\n  createBridge,\n  VMError\n} = require('./bridge');\n\nconst {\n  transformer,\n  INTERNAL_STATE_NAME\n} = require('./transformer');\n\nconst {\n  lookupCompiler\n} = require('./compiler');\n\nconst {\n  VMScript\n} = require('./script');\n\nconst objectDefineProperties = Object.defineProperties;\n/**\n * Host objects\n *\n * @private\n */\n\nconst HOST = Object.freeze({\n  Buffer,\n  Function,\n  Object,\n  transformAndCheck,\n  INSPECT_MAX_BYTES,\n  INTERNAL_STATE_NAME\n});\n/**\n * Compile a script.\n *\n * @private\n * @param {string} filename - Filename of the script.\n * @param {string} script - Script.\n * @return {vm.Script} The compiled script.\n */\n\nfunction compileScript(filename, script) {\n  return new Script(script, {\n    __proto__: null,\n    filename,\n    displayErrors: false\n  });\n}\n/**\n * Default run options for vm.Script.runInContext\n *\n * @private\n */\n\n\nconst DEFAULT_RUN_OPTIONS = Object.freeze({\n  __proto__: null,\n  displayErrors: false\n});\n\nfunction checkAsync(allow) {\n  if (!allow) throw new VMError('Async not available');\n}\n\nfunction transformAndCheck(args, code, isAsync, isGenerator, allowAsync) {\n  const ret = transformer(args, code, isAsync, isGenerator, undefined);\n  checkAsync(allowAsync || !ret.hasAsync);\n  return ret.code;\n}\n/**\n *\n * This callback will be called and has a specific time to finish.<br>\n * No parameters will be supplied.<br>\n * If parameters are required, use a closure.\n *\n * @private\n * @callback runWithTimeout\n * @return {*}\n *\n */\n\n\nlet cacheTimeoutContext = null;\nlet cacheTimeoutScript = null;\n/**\n * Run a function with a specific timeout.\n *\n * @private\n * @param {runWithTimeout} fn - Function to run with the specific timeout.\n * @param {number} timeout - The amount of time to give the function to finish.\n * @return {*} The value returned by the function.\n * @throws {Error} If the function took to long.\n */\n\nfunction doWithTimeout(fn, timeout) {\n  if (!cacheTimeoutContext) {\n    cacheTimeoutContext = createContext();\n    cacheTimeoutScript = new Script('fn()', {\n      __proto__: null,\n      filename: 'timeout_bridge.js',\n      displayErrors: false\n    });\n  }\n\n  cacheTimeoutContext.fn = fn;\n\n  try {\n    return cacheTimeoutScript.runInContext(cacheTimeoutContext, {\n      __proto__: null,\n      displayErrors: false,\n      timeout\n    });\n  } finally {\n    cacheTimeoutContext.fn = null;\n  }\n}\n\nconst bridgeScript = compileScript(`${__dirname}/bridge.js`, `(function(global) {\"use strict\"; const exports = {};${fs.readFileSync(`${__dirname}/bridge.js`, 'utf8')}\\nreturn exports;})`);\nconst setupSandboxScript = compileScript(`${__dirname}/setup-sandbox.js`, `(function(global, host, bridge, data, context) { ${fs.readFileSync(`${__dirname}/setup-sandbox.js`, 'utf8')}\\n})`);\nconst getGlobalScript = compileScript('get_global.js', 'this');\nlet getGeneratorFunctionScript = null;\nlet getAsyncFunctionScript = null;\nlet getAsyncGeneratorFunctionScript = null;\n\ntry {\n  getGeneratorFunctionScript = compileScript('get_generator_function.js', '(function*(){}).constructor');\n} catch (ex) {}\n\ntry {\n  getAsyncFunctionScript = compileScript('get_async_function.js', '(async function(){}).constructor');\n} catch (ex) {}\n\ntry {\n  getAsyncGeneratorFunctionScript = compileScript('get_async_generator_function.js', '(async function*(){}).constructor');\n} catch (ex) {}\n/**\n * Class VM.\n *\n * @public\n */\n\n\nclass VM extends EventEmitter {\n  /**\n   * The timeout for {@link VM#run} calls.\n   *\n   * @public\n   * @since v3.9.0\n   * @member {number} timeout\n   * @memberOf VM#\n   */\n\n  /**\n   * Get the global sandbox object.\n   *\n   * @public\n   * @readonly\n   * @since v3.9.0\n   * @member {Object} sandbox\n   * @memberOf VM#\n   */\n\n  /**\n   * The compiler to use to get the JavaScript code.\n   *\n   * @public\n   * @readonly\n   * @since v3.9.0\n   * @member {(string|compileCallback)} compiler\n   * @memberOf VM#\n   */\n\n  /**\n   * The resolved compiler to use to get the JavaScript code.\n   *\n   * @private\n   * @readonly\n   * @member {compileCallback} _compiler\n   * @memberOf VM#\n   */\n\n  /**\n   * Create a new VM instance.\n   *\n   * @public\n   * @param {Object} [options] - VM options.\n   * @param {number} [options.timeout] - The amount of time until a call to {@link VM#run} will timeout.\n   * @param {Object} [options.sandbox] - Objects that will be copied into the global object of the sandbox.\n   * @param {(string|compileCallback)} [options.compiler=\"javascript\"] - The compiler to use.\n   * @param {boolean} [options.eval=true] - Allow the dynamic evaluation of code via eval(code) or Function(code)().<br>\n   * Only available for node v10+.\n   * @param {boolean} [options.wasm=true] - Allow to run wasm code.<br>\n   * Only available for node v10+.\n   * @param {boolean} [options.allowAsync=true] - Allows for async functions.\n   * @throws {VMError} If the compiler is unknown.\n   */\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super(); // Read all options\n\n    const {\n      timeout,\n      sandbox,\n      compiler = 'javascript',\n      allowAsync: optAllowAsync = true\n    } = options;\n    const allowEval = options.eval !== false;\n    const allowWasm = options.wasm !== false;\n    const allowAsync = optAllowAsync && !options.fixAsync; // Early error if sandbox is not an object.\n\n    if (sandbox && 'object' !== typeof sandbox) {\n      throw new VMError('Sandbox must be object.');\n    } // Early error if compiler can't be found.\n\n\n    const resolvedCompiler = lookupCompiler(compiler); // Create a new context for this vm.\n\n    const _context = createContext(undefined, {\n      __proto__: null,\n      codeGeneration: {\n        __proto__: null,\n        strings: allowEval,\n        wasm: allowWasm\n      }\n    });\n\n    const sandboxGlobal = getGlobalScript.runInContext(_context, DEFAULT_RUN_OPTIONS); // Initialize the sandbox bridge\n\n    const {\n      createBridge: sandboxCreateBridge\n    } = bridgeScript.runInContext(_context, DEFAULT_RUN_OPTIONS)(sandboxGlobal); // Initialize the bridge\n\n    const bridge = createBridge(sandboxCreateBridge, () => {});\n    const data = {\n      __proto__: null,\n      allowAsync\n    };\n\n    if (getGeneratorFunctionScript) {\n      data.GeneratorFunction = getGeneratorFunctionScript.runInContext(_context, DEFAULT_RUN_OPTIONS);\n    }\n\n    if (getAsyncFunctionScript) {\n      data.AsyncFunction = getAsyncFunctionScript.runInContext(_context, DEFAULT_RUN_OPTIONS);\n    }\n\n    if (getAsyncGeneratorFunctionScript) {\n      data.AsyncGeneratorFunction = getAsyncGeneratorFunctionScript.runInContext(_context, DEFAULT_RUN_OPTIONS);\n    } // Create the bridge between the host and the sandbox.\n\n\n    const internal = setupSandboxScript.runInContext(_context, DEFAULT_RUN_OPTIONS)(sandboxGlobal, HOST, bridge.other, data, _context);\n\n    const runScript = script => {\n      // This closure is intentional to hide _context and bridge since the allow to access the sandbox directly which is unsafe.\n      let ret;\n\n      try {\n        ret = script.runInContext(_context, DEFAULT_RUN_OPTIONS);\n      } catch (e) {\n        throw bridge.from(e);\n      }\n\n      return bridge.from(ret);\n    };\n\n    const makeReadonly = (value, mock) => {\n      try {\n        internal.readonly(value, mock);\n      } catch (e) {\n        throw bridge.from(e);\n      }\n\n      return value;\n    };\n\n    const makeProtected = value => {\n      const sandboxBridge = bridge.other;\n\n      try {\n        sandboxBridge.fromWithFactory(sandboxBridge.protectedFactory, value);\n      } catch (e) {\n        throw bridge.from(e);\n      }\n\n      return value;\n    };\n\n    const addProtoMapping = (hostProto, sandboxProto) => {\n      const sandboxBridge = bridge.other;\n      let otherProto;\n\n      try {\n        otherProto = sandboxBridge.from(sandboxProto);\n        sandboxBridge.addProtoMapping(otherProto, hostProto);\n      } catch (e) {\n        throw bridge.from(e);\n      }\n\n      bridge.addProtoMapping(hostProto, otherProto);\n    };\n\n    const addProtoMappingFactory = (hostProto, sandboxProtoFactory) => {\n      const sandboxBridge = bridge.other;\n\n      const factory = () => {\n        const proto = sandboxProtoFactory(this);\n        bridge.addProtoMapping(hostProto, proto);\n        return proto;\n      };\n\n      try {\n        const otherProtoFactory = sandboxBridge.from(factory);\n        sandboxBridge.addProtoMappingFactory(otherProtoFactory, hostProto);\n      } catch (e) {\n        throw bridge.from(e);\n      }\n    }; // Define the properties of this object.\n    // Use Object.defineProperties here to be able to\n    // hide and set properties read-only.\n\n\n    objectDefineProperties(this, {\n      __proto__: null,\n      timeout: {\n        __proto__: null,\n        value: timeout,\n        writable: true,\n        enumerable: true\n      },\n      compiler: {\n        __proto__: null,\n        value: compiler,\n        enumerable: true\n      },\n      sandbox: {\n        __proto__: null,\n        value: bridge.from(sandboxGlobal),\n        enumerable: true\n      },\n      _runScript: {\n        __proto__: null,\n        value: runScript\n      },\n      _makeReadonly: {\n        __proto__: null,\n        value: makeReadonly\n      },\n      _makeProtected: {\n        __proto__: null,\n        value: makeProtected\n      },\n      _addProtoMapping: {\n        __proto__: null,\n        value: addProtoMapping\n      },\n      _addProtoMappingFactory: {\n        __proto__: null,\n        value: addProtoMappingFactory\n      },\n      _compiler: {\n        __proto__: null,\n        value: resolvedCompiler\n      },\n      _allowAsync: {\n        __proto__: null,\n        value: allowAsync\n      }\n    }); // prepare global sandbox\n\n    if (sandbox) {\n      this.setGlobals(sandbox);\n    }\n  }\n  /**\n   * Adds all the values to the globals.\n   *\n   * @public\n   * @since v3.9.0\n   * @param {Object} values - All values that will be added to the globals.\n   * @return {this} This for chaining.\n   * @throws {*} If the setter of a global throws an exception it is propagated. And the remaining globals will not be written.\n   */\n\n\n  setGlobals(values) {\n    for (const name in values) {\n      if (Object.prototype.hasOwnProperty.call(values, name)) {\n        this.sandbox[name] = values[name];\n      }\n    }\n\n    return this;\n  }\n  /**\n   * Set a global value.\n   *\n   * @public\n   * @since v3.9.0\n   * @param {string} name - The name of the global.\n   * @param {*} value - The value of the global.\n   * @return {this} This for chaining.\n   * @throws {*} If the setter of the global throws an exception it is propagated.\n   */\n\n\n  setGlobal(name, value) {\n    this.sandbox[name] = value;\n    return this;\n  }\n  /**\n   * Get a global value.\n   *\n   * @public\n   * @since v3.9.0\n   * @param {string} name - The name of the global.\n   * @return {*} The value of the global.\n   * @throws {*} If the getter of the global throws an exception it is propagated.\n   */\n\n\n  getGlobal(name) {\n    return this.sandbox[name];\n  }\n  /**\n   * Freezes the object inside VM making it read-only. Not available for primitive values.\n   *\n   * @public\n   * @param {*} value - Object to freeze.\n   * @param {string} [globalName] - Whether to add the object to global.\n   * @return {*} Object to freeze.\n   * @throws {*} If the setter of the global throws an exception it is propagated.\n   */\n\n\n  freeze(value, globalName) {\n    this.readonly(value);\n    if (globalName) this.sandbox[globalName] = value;\n    return value;\n  }\n  /**\n   * Freezes the object inside VM making it read-only. Not available for primitive values.\n   *\n   * @public\n   * @param {*} value - Object to freeze.\n   * @param {*} [mock] - When the object does not have a property the mock is used before prototype lookup.\n   * @return {*} Object to freeze.\n   */\n\n\n  readonly(value, mock) {\n    return this._makeReadonly(value, mock);\n  }\n  /**\n   * Protects the object inside VM making impossible to set functions as it's properties. Not available for primitive values.\n   *\n   * @public\n   * @param {*} value - Object to protect.\n   * @param {string} [globalName] - Whether to add the object to global.\n   * @return {*} Object to protect.\n   * @throws {*} If the setter of the global throws an exception it is propagated.\n   */\n\n\n  protect(value, globalName) {\n    this._makeProtected(value);\n\n    if (globalName) this.sandbox[globalName] = value;\n    return value;\n  }\n  /**\n   * Run the code in VM.\n   *\n   * @public\n   * @param {(string|VMScript)} code - Code to run.\n   * @param {(string|Object)} [options] - Options map or filename.\n   * @param {string} [options.filename=\"vm.js\"] - Filename that shows up in any stack traces produced from this script.<br>\n   * This is only used if code is a String.\n   * @return {*} Result of executed code.\n   * @throws {SyntaxError} If there is a syntax error in the script.\n   * @throws {Error} An error is thrown when the script took to long and there is a timeout.\n   * @throws {*} If the script execution terminated with an exception it is propagated.\n   */\n\n\n  run(code, options) {\n    let script;\n    let filename;\n\n    if (typeof options === 'object') {\n      filename = options.filename;\n    } else {\n      filename = options;\n    }\n\n    if (code instanceof VMScript) {\n      script = code._compileVM();\n      checkAsync(this._allowAsync || !code._hasAsync);\n    } else {\n      const useFileName = filename || 'vm.js';\n\n      let scriptCode = this._compiler(code, useFileName);\n\n      const ret = transformer(null, scriptCode, false, false, useFileName);\n      scriptCode = ret.code;\n      checkAsync(this._allowAsync || !ret.hasAsync); // Compile the script here so that we don't need to create a instance of VMScript.\n\n      script = new Script(scriptCode, {\n        __proto__: null,\n        filename: useFileName,\n        displayErrors: false\n      });\n    }\n\n    if (!this.timeout) {\n      return this._runScript(script);\n    }\n\n    return doWithTimeout(() => {\n      return this._runScript(script);\n    }, this.timeout);\n  }\n  /**\n   * Run the code in VM.\n   *\n   * @public\n   * @since v3.9.0\n   * @param {string} filename - Filename of file to load and execute in a NodeVM.\n   * @return {*} Result of executed code.\n   * @throws {Error} If filename is not a valid filename.\n   * @throws {SyntaxError} If there is a syntax error in the script.\n   * @throws {Error} An error is thrown when the script took to long and there is a timeout.\n   * @throws {*} If the script execution terminated with an exception it is propagated.\n   */\n\n\n  runFile(filename) {\n    const resolvedFilename = pa.resolve(filename);\n\n    if (!fs.existsSync(resolvedFilename)) {\n      throw new VMError(`Script '${filename}' not found.`);\n    }\n\n    if (fs.statSync(resolvedFilename).isDirectory()) {\n      throw new VMError('Script must be file, got directory.');\n    }\n\n    return this.run(fs.readFileSync(resolvedFilename, 'utf8'), resolvedFilename);\n  }\n\n}\n\nexports.VM = VM;","map":{"version":3,"names":["fs","require","pa","Script","createContext","EventEmitter","INSPECT_MAX_BYTES","createBridge","VMError","transformer","INTERNAL_STATE_NAME","lookupCompiler","VMScript","objectDefineProperties","Object","defineProperties","HOST","freeze","Buffer","Function","transformAndCheck","compileScript","filename","script","__proto__","displayErrors","DEFAULT_RUN_OPTIONS","checkAsync","allow","args","code","isAsync","isGenerator","allowAsync","ret","undefined","hasAsync","cacheTimeoutContext","cacheTimeoutScript","doWithTimeout","fn","timeout","runInContext","bridgeScript","__dirname","readFileSync","setupSandboxScript","getGlobalScript","getGeneratorFunctionScript","getAsyncFunctionScript","getAsyncGeneratorFunctionScript","ex","VM","constructor","options","sandbox","compiler","optAllowAsync","allowEval","eval","allowWasm","wasm","fixAsync","resolvedCompiler","_context","codeGeneration","strings","sandboxGlobal","sandboxCreateBridge","bridge","data","GeneratorFunction","AsyncFunction","AsyncGeneratorFunction","internal","other","runScript","e","from","makeReadonly","value","mock","readonly","makeProtected","sandboxBridge","fromWithFactory","protectedFactory","addProtoMapping","hostProto","sandboxProto","otherProto","addProtoMappingFactory","sandboxProtoFactory","factory","proto","otherProtoFactory","writable","enumerable","_runScript","_makeReadonly","_makeProtected","_addProtoMapping","_addProtoMappingFactory","_compiler","_allowAsync","setGlobals","values","name","prototype","hasOwnProperty","call","setGlobal","getGlobal","globalName","protect","run","_compileVM","_hasAsync","useFileName","scriptCode","runFile","resolvedFilename","resolve","existsSync","statSync","isDirectory","exports"],"sources":["C:/Users/bryan/Desktop/myrepresentatives/frontend/node_modules/vm2/lib/vm.js"],"sourcesContent":["'use strict';\n\n/**\n * This callback will be called to transform a script to JavaScript.\n *\n * @callback compileCallback\n * @param {string} code - Script code to transform to JavaScript.\n * @param {string} filename - Filename of this script.\n * @return {string} JavaScript code that represents the script code.\n */\n\n/**\n * This callback will be called to resolve a module if it couldn't be found.\n *\n * @callback resolveCallback\n * @param {string} moduleName - Name of the modulusedRequiree to resolve.\n * @param {string} dirname - Name of the current directory.\n * @return {(string|undefined)} The file or directory to use to load the requested module.\n */\n\nconst fs = require('fs');\nconst pa = require('path');\nconst {\n\tScript,\n\tcreateContext\n} = require('vm');\nconst {\n\tEventEmitter\n} = require('events');\nconst {\n\tINSPECT_MAX_BYTES\n} = require('buffer');\nconst {\n\tcreateBridge,\n\tVMError\n} = require('./bridge');\nconst {\n\ttransformer,\n\tINTERNAL_STATE_NAME\n} = require('./transformer');\nconst {\n\tlookupCompiler\n} = require('./compiler');\nconst {\n\tVMScript\n} = require('./script');\n\nconst objectDefineProperties = Object.defineProperties;\n\n/**\n * Host objects\n *\n * @private\n */\nconst HOST = Object.freeze({\n\tBuffer,\n\tFunction,\n\tObject,\n\ttransformAndCheck,\n\tINSPECT_MAX_BYTES,\n\tINTERNAL_STATE_NAME\n});\n\n/**\n * Compile a script.\n *\n * @private\n * @param {string} filename - Filename of the script.\n * @param {string} script - Script.\n * @return {vm.Script} The compiled script.\n */\nfunction compileScript(filename, script) {\n\treturn new Script(script, {\n\t\t__proto__: null,\n\t\tfilename,\n\t\tdisplayErrors: false\n\t});\n}\n\n/**\n * Default run options for vm.Script.runInContext\n *\n * @private\n */\nconst DEFAULT_RUN_OPTIONS = Object.freeze({__proto__: null, displayErrors: false});\n\nfunction checkAsync(allow) {\n\tif (!allow) throw new VMError('Async not available');\n}\n\nfunction transformAndCheck(args, code, isAsync, isGenerator, allowAsync) {\n\tconst ret = transformer(args, code, isAsync, isGenerator, undefined);\n\tcheckAsync(allowAsync || !ret.hasAsync);\n\treturn ret.code;\n}\n\n/**\n *\n * This callback will be called and has a specific time to finish.<br>\n * No parameters will be supplied.<br>\n * If parameters are required, use a closure.\n *\n * @private\n * @callback runWithTimeout\n * @return {*}\n *\n */\n\nlet cacheTimeoutContext = null;\nlet cacheTimeoutScript = null;\n\n/**\n * Run a function with a specific timeout.\n *\n * @private\n * @param {runWithTimeout} fn - Function to run with the specific timeout.\n * @param {number} timeout - The amount of time to give the function to finish.\n * @return {*} The value returned by the function.\n * @throws {Error} If the function took to long.\n */\nfunction doWithTimeout(fn, timeout) {\n\tif (!cacheTimeoutContext) {\n\t\tcacheTimeoutContext = createContext();\n\t\tcacheTimeoutScript = new Script('fn()', {\n\t\t\t__proto__: null,\n\t\t\tfilename: 'timeout_bridge.js',\n\t\t\tdisplayErrors: false\n\t\t});\n\t}\n\tcacheTimeoutContext.fn = fn;\n\ttry {\n\t\treturn cacheTimeoutScript.runInContext(cacheTimeoutContext, {\n\t\t\t__proto__: null,\n\t\t\tdisplayErrors: false,\n\t\t\ttimeout\n\t\t});\n\t} finally {\n\t\tcacheTimeoutContext.fn = null;\n\t}\n}\n\nconst bridgeScript = compileScript(`${__dirname}/bridge.js`,\n\t`(function(global) {\"use strict\"; const exports = {};${fs.readFileSync(`${__dirname}/bridge.js`, 'utf8')}\\nreturn exports;})`);\nconst setupSandboxScript = compileScript(`${__dirname}/setup-sandbox.js`,\n\t`(function(global, host, bridge, data, context) { ${fs.readFileSync(`${__dirname}/setup-sandbox.js`, 'utf8')}\\n})`);\nconst getGlobalScript = compileScript('get_global.js', 'this');\n\nlet getGeneratorFunctionScript = null;\nlet getAsyncFunctionScript = null;\nlet getAsyncGeneratorFunctionScript = null;\ntry {\n\tgetGeneratorFunctionScript = compileScript('get_generator_function.js', '(function*(){}).constructor');\n} catch (ex) {}\ntry {\n\tgetAsyncFunctionScript = compileScript('get_async_function.js', '(async function(){}).constructor');\n} catch (ex) {}\ntry {\n\tgetAsyncGeneratorFunctionScript = compileScript('get_async_generator_function.js', '(async function*(){}).constructor');\n} catch (ex) {}\n\n/**\n * Class VM.\n *\n * @public\n */\nclass VM extends EventEmitter {\n\n\t/**\n\t * The timeout for {@link VM#run} calls.\n\t *\n\t * @public\n\t * @since v3.9.0\n\t * @member {number} timeout\n\t * @memberOf VM#\n\t */\n\n\t/**\n\t * Get the global sandbox object.\n\t *\n\t * @public\n\t * @readonly\n\t * @since v3.9.0\n\t * @member {Object} sandbox\n\t * @memberOf VM#\n\t */\n\n\t/**\n\t * The compiler to use to get the JavaScript code.\n\t *\n\t * @public\n\t * @readonly\n\t * @since v3.9.0\n\t * @member {(string|compileCallback)} compiler\n\t * @memberOf VM#\n\t */\n\n\t/**\n\t * The resolved compiler to use to get the JavaScript code.\n\t *\n\t * @private\n\t * @readonly\n\t * @member {compileCallback} _compiler\n\t * @memberOf VM#\n\t */\n\n\t/**\n\t * Create a new VM instance.\n\t *\n\t * @public\n\t * @param {Object} [options] - VM options.\n\t * @param {number} [options.timeout] - The amount of time until a call to {@link VM#run} will timeout.\n\t * @param {Object} [options.sandbox] - Objects that will be copied into the global object of the sandbox.\n\t * @param {(string|compileCallback)} [options.compiler=\"javascript\"] - The compiler to use.\n\t * @param {boolean} [options.eval=true] - Allow the dynamic evaluation of code via eval(code) or Function(code)().<br>\n\t * Only available for node v10+.\n\t * @param {boolean} [options.wasm=true] - Allow to run wasm code.<br>\n\t * Only available for node v10+.\n\t * @param {boolean} [options.allowAsync=true] - Allows for async functions.\n\t * @throws {VMError} If the compiler is unknown.\n\t */\n\tconstructor(options = {}) {\n\t\tsuper();\n\n\t\t// Read all options\n\t\tconst {\n\t\t\ttimeout,\n\t\t\tsandbox,\n\t\t\tcompiler = 'javascript',\n\t\t\tallowAsync: optAllowAsync = true\n\t\t} = options;\n\t\tconst allowEval = options.eval !== false;\n\t\tconst allowWasm = options.wasm !== false;\n\t\tconst allowAsync = optAllowAsync && !options.fixAsync;\n\n\t\t// Early error if sandbox is not an object.\n\t\tif (sandbox && 'object' !== typeof sandbox) {\n\t\t\tthrow new VMError('Sandbox must be object.');\n\t\t}\n\n\t\t// Early error if compiler can't be found.\n\t\tconst resolvedCompiler = lookupCompiler(compiler);\n\n\t\t// Create a new context for this vm.\n\t\tconst _context = createContext(undefined, {\n\t\t\t__proto__: null,\n\t\t\tcodeGeneration: {\n\t\t\t\t__proto__: null,\n\t\t\t\tstrings: allowEval,\n\t\t\t\twasm: allowWasm\n\t\t\t}\n\t\t});\n\n\t\tconst sandboxGlobal = getGlobalScript.runInContext(_context, DEFAULT_RUN_OPTIONS);\n\n\t\t// Initialize the sandbox bridge\n\t\tconst {\n\t\t\tcreateBridge: sandboxCreateBridge\n\t\t} = bridgeScript.runInContext(_context, DEFAULT_RUN_OPTIONS)(sandboxGlobal);\n\n\t\t// Initialize the bridge\n\t\tconst bridge = createBridge(sandboxCreateBridge, () => {});\n\n\t\tconst data = {\n\t\t\t__proto__: null,\n\t\t\tallowAsync\n\t\t};\n\n\t\tif (getGeneratorFunctionScript) {\n\t\t\tdata.GeneratorFunction = getGeneratorFunctionScript.runInContext(_context, DEFAULT_RUN_OPTIONS);\n\t\t}\n\t\tif (getAsyncFunctionScript) {\n\t\t\tdata.AsyncFunction = getAsyncFunctionScript.runInContext(_context, DEFAULT_RUN_OPTIONS);\n\t\t}\n\t\tif (getAsyncGeneratorFunctionScript) {\n\t\t\tdata.AsyncGeneratorFunction = getAsyncGeneratorFunctionScript.runInContext(_context, DEFAULT_RUN_OPTIONS);\n\t\t}\n\n\t\t// Create the bridge between the host and the sandbox.\n\t\tconst internal = setupSandboxScript.runInContext(_context, DEFAULT_RUN_OPTIONS)(sandboxGlobal, HOST, bridge.other, data, _context);\n\n\t\tconst runScript = (script) => {\n\t\t\t// This closure is intentional to hide _context and bridge since the allow to access the sandbox directly which is unsafe.\n\t\t\tlet ret;\n\t\t\ttry {\n\t\t\t\tret = script.runInContext(_context, DEFAULT_RUN_OPTIONS);\n\t\t\t} catch (e) {\n\t\t\t\tthrow bridge.from(e);\n\t\t\t}\n\t\t\treturn bridge.from(ret);\n\t\t};\n\n\t\tconst makeReadonly = (value, mock) => {\n\t\t\ttry {\n\t\t\t\tinternal.readonly(value, mock);\n\t\t\t} catch (e) {\n\t\t\t\tthrow bridge.from(e);\n\t\t\t}\n\t\t\treturn value;\n\t\t};\n\n\t\tconst makeProtected = (value) => {\n\t\t\tconst sandboxBridge = bridge.other;\n\t\t\ttry {\n\t\t\t\tsandboxBridge.fromWithFactory(sandboxBridge.protectedFactory, value);\n\t\t\t} catch (e) {\n\t\t\t\tthrow bridge.from(e);\n\t\t\t}\n\t\t\treturn value;\n\t\t};\n\n\t\tconst addProtoMapping = (hostProto, sandboxProto) => {\n\t\t\tconst sandboxBridge = bridge.other;\n\t\t\tlet otherProto;\n\t\t\ttry {\n\t\t\t\totherProto = sandboxBridge.from(sandboxProto);\n\t\t\t\tsandboxBridge.addProtoMapping(otherProto, hostProto);\n\t\t\t} catch (e) {\n\t\t\t\tthrow bridge.from(e);\n\t\t\t}\n\t\t\tbridge.addProtoMapping(hostProto, otherProto);\n\t\t};\n\n\t\tconst addProtoMappingFactory = (hostProto, sandboxProtoFactory) => {\n\t\t\tconst sandboxBridge = bridge.other;\n\t\t\tconst factory = () => {\n\t\t\t\tconst proto = sandboxProtoFactory(this);\n\t\t\t\tbridge.addProtoMapping(hostProto, proto);\n\t\t\t\treturn proto;\n\t\t\t};\n\t\t\ttry {\n\t\t\t\tconst otherProtoFactory = sandboxBridge.from(factory);\n\t\t\t\tsandboxBridge.addProtoMappingFactory(otherProtoFactory, hostProto);\n\t\t\t} catch (e) {\n\t\t\t\tthrow bridge.from(e);\n\t\t\t}\n\t\t};\n\n\t\t// Define the properties of this object.\n\t\t// Use Object.defineProperties here to be able to\n\t\t// hide and set properties read-only.\n\t\tobjectDefineProperties(this, {\n\t\t\t__proto__: null,\n\t\t\ttimeout: {\n\t\t\t\t__proto__: null,\n\t\t\t\tvalue: timeout,\n\t\t\t\twritable: true,\n\t\t\t\tenumerable: true\n\t\t\t},\n\t\t\tcompiler: {\n\t\t\t\t__proto__: null,\n\t\t\t\tvalue: compiler,\n\t\t\t\tenumerable: true\n\t\t\t},\n\t\t\tsandbox: {\n\t\t\t\t__proto__: null,\n\t\t\t\tvalue: bridge.from(sandboxGlobal),\n\t\t\t\tenumerable: true\n\t\t\t},\n\t\t\t_runScript: {__proto__: null, value: runScript},\n\t\t\t_makeReadonly: {__proto__: null, value: makeReadonly},\n\t\t\t_makeProtected: {__proto__: null, value: makeProtected},\n\t\t\t_addProtoMapping: {__proto__: null, value: addProtoMapping},\n\t\t\t_addProtoMappingFactory: {__proto__: null, value: addProtoMappingFactory},\n\t\t\t_compiler: {__proto__: null, value: resolvedCompiler},\n\t\t\t_allowAsync: {__proto__: null, value: allowAsync}\n\t\t});\n\n\t\t// prepare global sandbox\n\t\tif (sandbox) {\n\t\t\tthis.setGlobals(sandbox);\n\t\t}\n\t}\n\n\t/**\n\t * Adds all the values to the globals.\n\t *\n\t * @public\n\t * @since v3.9.0\n\t * @param {Object} values - All values that will be added to the globals.\n\t * @return {this} This for chaining.\n\t * @throws {*} If the setter of a global throws an exception it is propagated. And the remaining globals will not be written.\n\t */\n\tsetGlobals(values) {\n\t\tfor (const name in values) {\n\t\t\tif (Object.prototype.hasOwnProperty.call(values, name)) {\n\t\t\t\tthis.sandbox[name] = values[name];\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set a global value.\n\t *\n\t * @public\n\t * @since v3.9.0\n\t * @param {string} name - The name of the global.\n\t * @param {*} value - The value of the global.\n\t * @return {this} This for chaining.\n\t * @throws {*} If the setter of the global throws an exception it is propagated.\n\t */\n\tsetGlobal(name, value) {\n\t\tthis.sandbox[name] = value;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Get a global value.\n\t *\n\t * @public\n\t * @since v3.9.0\n\t * @param {string} name - The name of the global.\n\t * @return {*} The value of the global.\n\t * @throws {*} If the getter of the global throws an exception it is propagated.\n\t */\n\tgetGlobal(name) {\n\t\treturn this.sandbox[name];\n\t}\n\n\t/**\n\t * Freezes the object inside VM making it read-only. Not available for primitive values.\n\t *\n\t * @public\n\t * @param {*} value - Object to freeze.\n\t * @param {string} [globalName] - Whether to add the object to global.\n\t * @return {*} Object to freeze.\n\t * @throws {*} If the setter of the global throws an exception it is propagated.\n\t */\n\tfreeze(value, globalName) {\n\t\tthis.readonly(value);\n\t\tif (globalName) this.sandbox[globalName] = value;\n\t\treturn value;\n\t}\n\n\t/**\n\t * Freezes the object inside VM making it read-only. Not available for primitive values.\n\t *\n\t * @public\n\t * @param {*} value - Object to freeze.\n\t * @param {*} [mock] - When the object does not have a property the mock is used before prototype lookup.\n\t * @return {*} Object to freeze.\n\t */\n\treadonly(value, mock) {\n\t\treturn this._makeReadonly(value, mock);\n\t}\n\n\t/**\n\t * Protects the object inside VM making impossible to set functions as it's properties. Not available for primitive values.\n\t *\n\t * @public\n\t * @param {*} value - Object to protect.\n\t * @param {string} [globalName] - Whether to add the object to global.\n\t * @return {*} Object to protect.\n\t * @throws {*} If the setter of the global throws an exception it is propagated.\n\t */\n\tprotect(value, globalName) {\n\t\tthis._makeProtected(value);\n\t\tif (globalName) this.sandbox[globalName] = value;\n\t\treturn value;\n\t}\n\n\t/**\n\t * Run the code in VM.\n\t *\n\t * @public\n\t * @param {(string|VMScript)} code - Code to run.\n\t * @param {(string|Object)} [options] - Options map or filename.\n\t * @param {string} [options.filename=\"vm.js\"] - Filename that shows up in any stack traces produced from this script.<br>\n\t * This is only used if code is a String.\n\t * @return {*} Result of executed code.\n\t * @throws {SyntaxError} If there is a syntax error in the script.\n\t * @throws {Error} An error is thrown when the script took to long and there is a timeout.\n\t * @throws {*} If the script execution terminated with an exception it is propagated.\n\t */\n\trun(code, options) {\n\t\tlet script;\n\t\tlet filename;\n\n\t\tif (typeof options === 'object') {\n\t\t\tfilename = options.filename;\n\t\t} else {\n\t\t\tfilename = options;\n\t\t}\n\n\t\tif (code instanceof VMScript) {\n\t\t\tscript = code._compileVM();\n\t\t\tcheckAsync(this._allowAsync || !code._hasAsync);\n\t\t} else {\n\t\t\tconst useFileName = filename || 'vm.js';\n\t\t\tlet scriptCode = this._compiler(code, useFileName);\n\t\t\tconst ret = transformer(null, scriptCode, false, false, useFileName);\n\t\t\tscriptCode = ret.code;\n\t\t\tcheckAsync(this._allowAsync || !ret.hasAsync);\n\t\t\t// Compile the script here so that we don't need to create a instance of VMScript.\n\t\t\tscript = new Script(scriptCode, {\n\t\t\t\t__proto__: null,\n\t\t\t\tfilename: useFileName,\n\t\t\t\tdisplayErrors: false\n\t\t\t});\n\t\t}\n\n\t\tif (!this.timeout) {\n\t\t\treturn this._runScript(script);\n\t\t}\n\n\t\treturn doWithTimeout(() => {\n\t\t\treturn this._runScript(script);\n\t\t}, this.timeout);\n\t}\n\n\t/**\n\t * Run the code in VM.\n\t *\n\t * @public\n\t * @since v3.9.0\n\t * @param {string} filename - Filename of file to load and execute in a NodeVM.\n\t * @return {*} Result of executed code.\n\t * @throws {Error} If filename is not a valid filename.\n\t * @throws {SyntaxError} If there is a syntax error in the script.\n\t * @throws {Error} An error is thrown when the script took to long and there is a timeout.\n\t * @throws {*} If the script execution terminated with an exception it is propagated.\n\t */\n\trunFile(filename) {\n\t\tconst resolvedFilename = pa.resolve(filename);\n\n\t\tif (!fs.existsSync(resolvedFilename)) {\n\t\t\tthrow new VMError(`Script '${filename}' not found.`);\n\t\t}\n\n\t\tif (fs.statSync(resolvedFilename).isDirectory()) {\n\t\t\tthrow new VMError('Script must be file, got directory.');\n\t\t}\n\n\t\treturn this.run(fs.readFileSync(resolvedFilename, 'utf8'), resolvedFilename);\n\t}\n\n}\n\nexports.VM = VM;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}