{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nconst debug_1 = __importDefault(require(\"debug\"));\n\nconst url_1 = require(\"url\"); // Built-in protocols\n\n\nconst data_1 = __importDefault(require(\"./data\"));\n\nconst file_1 = __importDefault(require(\"./file\"));\n\nconst ftp_1 = __importDefault(require(\"./ftp\"));\n\nconst http_1 = __importDefault(require(\"./http\"));\n\nconst https_1 = __importDefault(require(\"./https\"));\n\nconst debug = debug_1.default('get-uri');\n\nfunction getUri(uri, opts, fn) {\n  const p = new Promise((resolve, reject) => {\n    debug('getUri(%o)', uri);\n\n    if (typeof opts === 'function') {\n      fn = opts;\n      opts = undefined;\n    }\n\n    if (!uri) {\n      reject(new TypeError('Must pass in a URI to \"get\"'));\n      return;\n    }\n\n    const parsed = url_1.parse(uri); // Strip trailing `:`\n\n    const protocol = (parsed.protocol || '').replace(/:$/, '');\n\n    if (!protocol) {\n      reject(new TypeError(`URI does not contain a protocol: ${uri}`));\n      return;\n    }\n\n    const getter = getUri.protocols[protocol];\n\n    if (typeof getter !== 'function') {\n      throw new TypeError(`Unsupported protocol \"${protocol}\" specified in URI: ${uri}`);\n    }\n\n    resolve(getter(parsed, opts || {}));\n  });\n\n  if (typeof fn === 'function') {\n    p.then(rtn => fn(null, rtn), err => fn(err));\n  } else {\n    return p;\n  }\n}\n\n(function (getUri) {\n  getUri.protocols = {\n    data: data_1.default,\n    file: file_1.default,\n    ftp: ftp_1.default,\n    http: http_1.default,\n    https: https_1.default\n  };\n})(getUri || (getUri = {}));\n\nmodule.exports = getUri;","map":{"version":3,"mappings":";;;;;;;;AAAA;;AAEA,6B,CAEA;;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA,MAAMA,KAAK,GAAGC,gBAAY,SAAZ,CAAd;;AAyBA,SAASC,MAAT,CACCC,GADD,EAECC,IAFD,EAGCC,EAHD,EAG2B;EAE1B,MAAMC,CAAC,GAAG,IAAIC,OAAJ,CAAsB,CAACC,OAAD,EAAUC,MAAV,KAAoB;IACnDT,KAAK,CAAC,YAAD,EAAeG,GAAf,CAAL;;IAEA,IAAI,OAAOC,IAAP,KAAgB,UAApB,EAAgC;MAC/BC,EAAE,GAAGD,IAAL;MACAA,IAAI,GAAGM,SAAP;IACA;;IAED,IAAI,CAACP,GAAL,EAAU;MACTM,MAAM,CAAC,IAAIE,SAAJ,CAAc,6BAAd,CAAD,CAAN;MACA;IACA;;IAED,MAAMC,MAAM,GAAGC,YAAMV,GAAN,CAAf,CAbmD,CAenD;;IACA,MAAMW,QAAQ,GAAG,CAACF,MAAM,CAACE,QAAP,IAAmB,EAApB,EAAwBC,OAAxB,CAAgC,IAAhC,EAAsC,EAAtC,CAAjB;;IACA,IAAI,CAACD,QAAL,EAAe;MACdL,MAAM,CAAC,IAAIE,SAAJ,CAAc,oCAAoCR,GAAG,EAArD,CAAD,CAAN;MACA;IACA;;IAED,MAAMa,MAAM,GAAGd,MAAM,CAACe,SAAP,CAAiBH,QAAjB,CAAf;;IAEA,IAAI,OAAOE,MAAP,KAAkB,UAAtB,EAAkC;MACjC,MAAM,IAAIL,SAAJ,CACL,yBAAyBG,QAAQ,uBAAuBX,GAAG,EADtD,CAAN;IAGA;;IAEDK,OAAO,CAACQ,MAAM,CAACJ,MAAD,EAASR,IAAI,IAAI,EAAjB,CAAP,CAAP;EACA,CA/BS,CAAV;;EAiCA,IAAI,OAAOC,EAAP,KAAc,UAAlB,EAA8B;IAC7BC,CAAC,CAACY,IAAF,CAAOC,GAAG,IAAId,EAAG,CAAC,IAAD,EAAOc,GAAP,CAAjB,EAA8BC,GAAG,IAAIf,EAAG,CAACe,GAAD,CAAxC;EACA,CAFD,MAEO;IACN,OAAOd,CAAP;EACA;AACD;;AAED,WAAUJ,MAAV,EAAgB;EASFA,mBAAsD;IAClEmB,IAAI,EAAJC,cADkE;IAElEC,IAAI,EAAJC,cAFkE;IAGlEC,GAAG,EAAHC,aAHkE;IAIlEC,IAAI,EAAJC,cAJkE;IAKlEC,KAAK,EAALC;EALkE,CAAtD;AAOb,CAhBD,EAAU5B,MAAM,KAANA,MAAM,MAAhB;;AAkBA6B,iBAAS7B,MAAT","names":["debug","debug_1","getUri","uri","opts","fn","p","Promise","resolve","reject","undefined","TypeError","parsed","url_1","protocol","replace","getter","protocols","then","rtn","err","data","data_1","file","file_1","ftp","ftp_1","http","http_1","https","https_1","module"],"sources":["../src/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}