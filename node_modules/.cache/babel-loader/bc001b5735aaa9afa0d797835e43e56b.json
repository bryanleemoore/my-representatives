{"ast":null,"code":"'use strict';\n\nvar MONTHS = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']; // only set once.\n\nvar TIMEZONE = ' ';\n\nvar _hourOffset = parseInt(-new Date().getTimezoneOffset() / 60, 10);\n\nif (_hourOffset >= 0) {\n  TIMEZONE += '+';\n} else {\n  TIMEZONE += '-';\n}\n\n_hourOffset = Math.abs(_hourOffset);\n\nif (_hourOffset < 10) {\n  _hourOffset = '0' + _hourOffset;\n}\n\nTIMEZONE += _hourOffset + '00';\n/**\n * Access log format date. format: `moment().format('DD/MMM/YYYY:HH:mm:ss ZZ')`\n *\n * @return {String}\n */\n\nexports.accessLogDate = function (d) {\n  // 16/Apr/2013:16:40:09 +0800\n  d = d || new Date();\n  var date = d.getDate();\n\n  if (date < 10) {\n    date = '0' + date;\n  }\n\n  var hours = d.getHours();\n\n  if (hours < 10) {\n    hours = '0' + hours;\n  }\n\n  var mintues = d.getMinutes();\n\n  if (mintues < 10) {\n    mintues = '0' + mintues;\n  }\n\n  var seconds = d.getSeconds();\n\n  if (seconds < 10) {\n    seconds = '0' + seconds;\n  }\n\n  return date + '/' + MONTHS[d.getMonth()] + '/' + d.getFullYear() + ':' + hours + ':' + mintues + ':' + seconds + TIMEZONE;\n};\n/**\n * Normal log format date. format: `moment().format('YYYY-MM-DD HH:mm:ss.SSS')`\n *\n * @return {String}\n */\n\n\nexports.logDate = exports.YYYYMMDDHHmmssSSS = function (d, msSep) {\n  if (typeof d === 'string') {\n    // logDate(msSep)\n    msSep = d;\n    d = new Date();\n  } else {\n    // logDate(d, msSep)\n    d = d || new Date();\n  }\n\n  var date = d.getDate();\n\n  if (date < 10) {\n    date = '0' + date;\n  }\n\n  var month = d.getMonth() + 1;\n\n  if (month < 10) {\n    month = '0' + month;\n  }\n\n  var hours = d.getHours();\n\n  if (hours < 10) {\n    hours = '0' + hours;\n  }\n\n  var mintues = d.getMinutes();\n\n  if (mintues < 10) {\n    mintues = '0' + mintues;\n  }\n\n  var seconds = d.getSeconds();\n\n  if (seconds < 10) {\n    seconds = '0' + seconds;\n  }\n\n  var milliseconds = d.getMilliseconds();\n\n  if (milliseconds < 10) {\n    milliseconds = '00' + milliseconds;\n  } else if (milliseconds < 100) {\n    milliseconds = '0' + milliseconds;\n  }\n\n  return d.getFullYear() + '-' + month + '-' + date + ' ' + hours + ':' + mintues + ':' + seconds + (msSep || '.') + milliseconds;\n};\n/**\n * `moment().format('YYYY-MM-DD HH:mm:ss')` format date string.\n *\n * @return {String}\n */\n\n\nexports.YYYYMMDDHHmmss = function (d, options) {\n  d = d || new Date();\n\n  if (!(d instanceof Date)) {\n    d = new Date(d);\n  }\n\n  var dateSep = '-';\n  var timeSep = ':';\n\n  if (options) {\n    if (options.dateSep) {\n      dateSep = options.dateSep;\n    }\n\n    if (options.timeSep) {\n      timeSep = options.timeSep;\n    }\n  }\n\n  var date = d.getDate();\n\n  if (date < 10) {\n    date = '0' + date;\n  }\n\n  var month = d.getMonth() + 1;\n\n  if (month < 10) {\n    month = '0' + month;\n  }\n\n  var hours = d.getHours();\n\n  if (hours < 10) {\n    hours = '0' + hours;\n  }\n\n  var mintues = d.getMinutes();\n\n  if (mintues < 10) {\n    mintues = '0' + mintues;\n  }\n\n  var seconds = d.getSeconds();\n\n  if (seconds < 10) {\n    seconds = '0' + seconds;\n  }\n\n  return d.getFullYear() + dateSep + month + dateSep + date + ' ' + hours + timeSep + mintues + timeSep + seconds;\n};\n/**\n * `moment().format('YYYY-MM-DD')` format date string.\n *\n * @return {String}\n */\n\n\nexports.YYYYMMDD = function YYYYMMDD(d, sep) {\n  if (typeof d === 'string') {\n    // YYYYMMDD(sep)\n    sep = d;\n    d = new Date();\n  } else {\n    // YYYYMMDD(d, sep)\n    d = d || new Date();\n\n    if (typeof sep !== 'string') {\n      sep = '-';\n    }\n  }\n\n  var date = d.getDate();\n\n  if (date < 10) {\n    date = '0' + date;\n  }\n\n  var month = d.getMonth() + 1;\n\n  if (month < 10) {\n    month = '0' + month;\n  }\n\n  return d.getFullYear() + sep + month + sep + date;\n};\n/**\n * return datetime struct.\n *\n * @return {Object} date\n *  - {Number} YYYYMMDD, 20130401\n *  - {Number} H, 0, 1, 9, 12, 23\n */\n\n\nexports.datestruct = function (now) {\n  now = now || new Date();\n  return {\n    YYYYMMDD: now.getFullYear() * 10000 + (now.getMonth() + 1) * 100 + now.getDate(),\n    H: now.getHours()\n  };\n};\n/**\n * Get Unix's timestamp in seconds.\n * @return {Number}\n */\n\n\nexports.timestamp = function timestamp(t) {\n  if (t) {\n    var v = t;\n\n    if (typeof v === 'string') {\n      v = Number(v);\n    }\n\n    if (String(t).length === 10) {\n      v *= 1000;\n    }\n\n    return new Date(v);\n  }\n\n  return Math.round(Date.now() / 1000);\n};","map":{"version":3,"names":["MONTHS","TIMEZONE","_hourOffset","parseInt","Date","getTimezoneOffset","Math","abs","exports","accessLogDate","d","date","getDate","hours","getHours","mintues","getMinutes","seconds","getSeconds","getMonth","getFullYear","logDate","YYYYMMDDHHmmssSSS","msSep","month","milliseconds","getMilliseconds","YYYYMMDDHHmmss","options","dateSep","timeSep","YYYYMMDD","sep","datestruct","now","H","timestamp","t","v","Number","String","length","round"],"sources":["C:/Users/bryan/Desktop/myrepresentatives/frontend/node_modules/utility/lib/date.js"],"sourcesContent":["'use strict';\n\nvar MONTHS = [\n  'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'\n];\n\n// only set once.\nvar TIMEZONE = ' ';\nvar _hourOffset = parseInt(-(new Date().getTimezoneOffset()) / 60, 10);\nif (_hourOffset >= 0) {\n  TIMEZONE += '+';\n} else {\n  TIMEZONE += '-';\n}\n_hourOffset = Math.abs(_hourOffset);\nif (_hourOffset < 10) {\n  _hourOffset = '0' + _hourOffset;\n}\nTIMEZONE += _hourOffset + '00';\n\n/**\n * Access log format date. format: `moment().format('DD/MMM/YYYY:HH:mm:ss ZZ')`\n *\n * @return {String}\n */\nexports.accessLogDate = function (d) {\n  // 16/Apr/2013:16:40:09 +0800\n  d = d || new Date();\n  var date = d.getDate();\n  if (date < 10) {\n    date = '0' + date;\n  }\n  var hours = d.getHours();\n  if (hours < 10) {\n    hours = '0' + hours;\n  }\n  var mintues = d.getMinutes();\n  if (mintues < 10) {\n    mintues = '0' + mintues;\n  }\n  var seconds = d.getSeconds();\n  if (seconds < 10) {\n    seconds = '0' + seconds;\n  }\n  return date + '/' + MONTHS[d.getMonth()] + '/' + d.getFullYear() +\n    ':' + hours + ':' + mintues + ':' + seconds + TIMEZONE;\n};\n\n/**\n * Normal log format date. format: `moment().format('YYYY-MM-DD HH:mm:ss.SSS')`\n *\n * @return {String}\n */\nexports.logDate = exports.YYYYMMDDHHmmssSSS = function (d, msSep) {\n  if (typeof d === 'string') {\n    // logDate(msSep)\n    msSep = d;\n    d = new Date();\n  } else {\n    // logDate(d, msSep)\n    d = d || new Date();\n  }\n  var date = d.getDate();\n  if (date < 10) {\n    date = '0' + date;\n  }\n  var month = d.getMonth() + 1;\n  if (month < 10) {\n    month = '0' + month;\n  }\n  var hours = d.getHours();\n  if (hours < 10) {\n    hours = '0' + hours;\n  }\n  var mintues = d.getMinutes();\n  if (mintues < 10) {\n    mintues = '0' + mintues;\n  }\n  var seconds = d.getSeconds();\n  if (seconds < 10) {\n    seconds = '0' + seconds;\n  }\n  var milliseconds = d.getMilliseconds();\n  if (milliseconds < 10) {\n    milliseconds = '00' + milliseconds;\n  } else if (milliseconds < 100) {\n    milliseconds = '0' + milliseconds;\n  }\n  return d.getFullYear() + '-' + month + '-' + date + ' ' +\n    hours + ':' + mintues + ':' + seconds + (msSep || '.') + milliseconds;\n};\n\n/**\n * `moment().format('YYYY-MM-DD HH:mm:ss')` format date string.\n *\n * @return {String}\n */\nexports.YYYYMMDDHHmmss = function (d, options) {\n  d = d || new Date();\n  if (!(d instanceof Date)) {\n    d = new Date(d);\n  }\n\n  var dateSep = '-';\n  var timeSep = ':';\n  if (options) {\n    if (options.dateSep) {\n      dateSep = options.dateSep;\n    }\n    if (options.timeSep) {\n      timeSep = options.timeSep;\n    }\n  }\n  var date = d.getDate();\n  if (date < 10) {\n    date = '0' + date;\n  }\n  var month = d.getMonth() + 1;\n  if (month < 10) {\n    month = '0' + month;\n  }\n  var hours = d.getHours();\n  if (hours < 10) {\n    hours = '0' + hours;\n  }\n  var mintues = d.getMinutes();\n  if (mintues < 10) {\n    mintues = '0' + mintues;\n  }\n  var seconds = d.getSeconds();\n  if (seconds < 10) {\n    seconds = '0' + seconds;\n  }\n  return d.getFullYear() + dateSep + month + dateSep + date + ' ' +\n    hours + timeSep + mintues + timeSep + seconds;\n};\n\n/**\n * `moment().format('YYYY-MM-DD')` format date string.\n *\n * @return {String}\n */\nexports.YYYYMMDD = function YYYYMMDD(d, sep) {\n  if (typeof d === 'string') {\n    // YYYYMMDD(sep)\n    sep = d;\n    d = new Date();\n  } else {\n    // YYYYMMDD(d, sep)\n    d = d || new Date();\n    if (typeof sep !== 'string') {\n      sep = '-';\n    }\n  }\n  var date = d.getDate();\n  if (date < 10) {\n    date = '0' + date;\n  }\n  var month = d.getMonth() + 1;\n  if (month < 10) {\n    month = '0' + month;\n  }\n  return d.getFullYear() + sep + month + sep + date;\n};\n\n/**\n * return datetime struct.\n *\n * @return {Object} date\n *  - {Number} YYYYMMDD, 20130401\n *  - {Number} H, 0, 1, 9, 12, 23\n */\nexports.datestruct = function (now) {\n  now = now || new Date();\n  return {\n    YYYYMMDD: now.getFullYear() * 10000 + (now.getMonth() + 1) * 100 + now.getDate(),\n    H: now.getHours()\n  };\n};\n\n/**\n * Get Unix's timestamp in seconds.\n * @return {Number}\n */\nexports.timestamp = function timestamp(t) {\n  if (t) {\n    var v = t;\n    if (typeof v === 'string') {\n      v = Number(v);\n    }\n    if (String(t).length === 10) {\n      v *= 1000;\n    }\n    return new Date(v);\n  }\n  return Math.round(Date.now() / 1000);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}