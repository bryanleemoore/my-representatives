{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bryan\\\\Desktop\\\\myrep\\\\myreps\\\\frontend\\\\src\\\\components\\\\Startup.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport logo from '../images/logo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet autoComplete;\n\nconst loadScript = (url, callback) => {\n  let script = document.createElement(\"script\");\n  script.type = \"text/javascript\";\n\n  if (script.readyState) {\n    script.onreadystatechange = function () {\n      if (script.readyState === \"loaded\" || script.readyState === \"complete\") {\n        script.onreadystatechange = null;\n        callback();\n      }\n    };\n  } else {\n    script.onload = () => callback();\n  }\n\n  script.src = url;\n  document.getElementsByTagName(\"head\")[0].appendChild(script);\n};\n\nfunction handleScriptLoad(updateQuery, autoCompleteRef) {\n  autoComplete = new window.google.maps.places.Autocomplete(autoCompleteRef.current, {\n    types: ['address'],\n    componentRestrictions: {\n      country: \"us\"\n    }\n  });\n  autoComplete.setFields([\"address_components\", \"formatted_address\"]);\n  autoComplete.addListener(\"place_changed\", () => handlePlaceSelect(updateQuery));\n}\n\nasync function handlePlaceSelect(updateQuery) {\n  const addressObject = autoComplete.getPlace();\n  const query = addressObject.formatted_address;\n  updateQuery(query);\n  console.log(addressObject);\n}\n\nfunction Startup(props) {\n  _s();\n\n  const [query, setQuery] = useState(\"\");\n  const autoCompleteRef = useRef(null);\n\n  function handleSubmit() {\n    props.setConstituent(query);\n  }\n\n  useEffect(() => {\n    loadScript(`https://maps.googleapis.com/maps/api/js?key=AIzaSyDRZuEFP9Y9rUvs0gJsqB7KDmaHPnv8rTo&libraries=places`, () => handleScriptLoad(setQuery, autoCompleteRef));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-location-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: autoCompleteRef,\n        onChange: event => setQuery(event.target.value),\n        placeholder: \"Enter a City\",\n        value: query\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Activate Lasers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Startup, \"cw7s3e3vkyUWL/AnWpSxZTGSPcQ=\");\n\n_c = Startup;\nexport default Startup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Startup\");","map":{"version":3,"names":["React","useState","useEffect","useRef","logo","autoComplete","loadScript","url","callback","script","document","createElement","type","readyState","onreadystatechange","onload","src","getElementsByTagName","appendChild","handleScriptLoad","updateQuery","autoCompleteRef","window","google","maps","places","Autocomplete","current","types","componentRestrictions","country","setFields","addListener","handlePlaceSelect","addressObject","getPlace","query","formatted_address","console","log","Startup","props","setQuery","handleSubmit","setConstituent","event","target","value"],"sources":["C:/Users/bryan/Desktop/myrep/myreps/frontend/src/components/Startup.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport logo from '../images/logo.png'\r\nlet autoComplete;\r\n\r\nconst loadScript = (url, callback) => {\r\n  let script = document.createElement(\"script\");\r\n  script.type = \"text/javascript\";\r\n\r\n  if (script.readyState) {\r\n    script.onreadystatechange = function() {\r\n      if (script.readyState === \"loaded\" || script.readyState === \"complete\") {\r\n        script.onreadystatechange = null;\r\n        callback();\r\n      }\r\n    };\r\n  } else {\r\n    script.onload = () => callback();\r\n  }\r\n\r\n  script.src = url;\r\n  document.getElementsByTagName(\"head\")[0].appendChild(script);\r\n};\r\n\r\nfunction handleScriptLoad(updateQuery, autoCompleteRef) {\r\n  autoComplete = new window.google.maps.places.Autocomplete(\r\n    autoCompleteRef.current,\r\n    { types: ['address'], componentRestrictions: { country: \"us\" } }\r\n  );\r\n  autoComplete.setFields([\"address_components\", \"formatted_address\"]);\r\n  autoComplete.addListener(\"place_changed\", () =>\r\n    handlePlaceSelect(updateQuery)\r\n  );\r\n}\r\n\r\nasync function handlePlaceSelect(updateQuery) {\r\n  const addressObject = autoComplete.getPlace();\r\n  const query = addressObject.formatted_address;\r\n  updateQuery(query);\r\n  console.log(addressObject);\r\n}\r\n\r\n\r\nfunction Startup(props) {\r\n  const [query, setQuery] = useState(\"\");\r\n  const autoCompleteRef = useRef(null);\r\n\r\n  function handleSubmit()\r\n  {\r\n    props.setConstituent(query);\r\n  }\r\n  useEffect(() => {\r\n    loadScript(\r\n      `https://maps.googleapis.com/maps/api/js?key=AIzaSyDRZuEFP9Y9rUvs0gJsqB7KDmaHPnv8rTo&libraries=places`,\r\n      () => handleScriptLoad(setQuery, autoCompleteRef)\r\n    );\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div>\r\n      <img src ={logo}/>\r\n      <div className=\"search-location-input\">\r\n      \r\n        <input\r\n          ref={autoCompleteRef}\r\n          onChange={event => setQuery(event.target.value)}\r\n          placeholder=\"Enter a City\"\r\n          value={query}\r\n        />\r\n       <button onClick={handleSubmit}>\r\n        Activate Lasers\r\n      </button>\r\n         \r\n      </div>\r\n     \r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Startup;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;AACA,IAAIC,YAAJ;;AAEA,MAAMC,UAAU,GAAG,CAACC,GAAD,EAAMC,QAAN,KAAmB;EACpC,IAAIC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAb;EACAF,MAAM,CAACG,IAAP,GAAc,iBAAd;;EAEA,IAAIH,MAAM,CAACI,UAAX,EAAuB;IACrBJ,MAAM,CAACK,kBAAP,GAA4B,YAAW;MACrC,IAAIL,MAAM,CAACI,UAAP,KAAsB,QAAtB,IAAkCJ,MAAM,CAACI,UAAP,KAAsB,UAA5D,EAAwE;QACtEJ,MAAM,CAACK,kBAAP,GAA4B,IAA5B;QACAN,QAAQ;MACT;IACF,CALD;EAMD,CAPD,MAOO;IACLC,MAAM,CAACM,MAAP,GAAgB,MAAMP,QAAQ,EAA9B;EACD;;EAEDC,MAAM,CAACO,GAAP,GAAaT,GAAb;EACAG,QAAQ,CAACO,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,EAAyCC,WAAzC,CAAqDT,MAArD;AACD,CAjBD;;AAmBA,SAASU,gBAAT,CAA0BC,WAA1B,EAAuCC,eAAvC,EAAwD;EACtDhB,YAAY,GAAG,IAAIiB,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBC,MAAnB,CAA0BC,YAA9B,CACbL,eAAe,CAACM,OADH,EAEb;IAAEC,KAAK,EAAE,CAAC,SAAD,CAAT;IAAsBC,qBAAqB,EAAE;MAAEC,OAAO,EAAE;IAAX;EAA7C,CAFa,CAAf;EAIAzB,YAAY,CAAC0B,SAAb,CAAuB,CAAC,oBAAD,EAAuB,mBAAvB,CAAvB;EACA1B,YAAY,CAAC2B,WAAb,CAAyB,eAAzB,EAA0C,MACxCC,iBAAiB,CAACb,WAAD,CADnB;AAGD;;AAED,eAAea,iBAAf,CAAiCb,WAAjC,EAA8C;EAC5C,MAAMc,aAAa,GAAG7B,YAAY,CAAC8B,QAAb,EAAtB;EACA,MAAMC,KAAK,GAAGF,aAAa,CAACG,iBAA5B;EACAjB,WAAW,CAACgB,KAAD,CAAX;EACAE,OAAO,CAACC,GAAR,CAAYL,aAAZ;AACD;;AAGD,SAASM,OAAT,CAAiBC,KAAjB,EAAwB;EAAA;;EACtB,MAAM,CAACL,KAAD,EAAQM,QAAR,IAAoBzC,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAMoB,eAAe,GAAGlB,MAAM,CAAC,IAAD,CAA9B;;EAEA,SAASwC,YAAT,GACA;IACEF,KAAK,CAACG,cAAN,CAAqBR,KAArB;EACD;;EACDlC,SAAS,CAAC,MAAM;IACdI,UAAU,CACP,sGADO,EAER,MAAMa,gBAAgB,CAACuB,QAAD,EAAWrB,eAAX,CAFd,CAAV;EAID,CALQ,EAKN,EALM,CAAT;EAQA,oBACE;IAAA,wBACE;MAAK,GAAG,EAAGjB;IAAX;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAK,SAAS,EAAC,uBAAf;MAAA,wBAEE;QACE,GAAG,EAAEiB,eADP;QAEE,QAAQ,EAAEwB,KAAK,IAAIH,QAAQ,CAACG,KAAK,CAACC,MAAN,CAAaC,KAAd,CAF7B;QAGE,WAAW,EAAC,cAHd;QAIE,KAAK,EAAEX;MAJT;QAAA;QAAA;QAAA;MAAA,QAFF,eAQC;QAAQ,OAAO,EAAEO,YAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QARD;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAoBD;;GApCQH,O;;KAAAA,O;AAsCT,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}