{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst debug_1 = __importDefault(require(\"debug\"));\n\nconst fs_1 = require(\"fs\");\n\nconst fs_extra_1 = require(\"fs-extra\");\n\nconst file_uri_to_path_1 = __importDefault(require(\"file-uri-to-path\"));\n\nconst notfound_1 = __importDefault(require(\"./notfound\"));\n\nconst notmodified_1 = __importDefault(require(\"./notmodified\"));\n\nconst debug = debug_1.default('get-uri:file');\n/**\n * Returns a `fs.ReadStream` instance from a \"file:\" URI.\n */\n\nfunction get(_ref, opts) {\n  let {\n    href: uri\n  } = _ref;\n  return __awaiter(this, void 0, void 0, function* () {\n    const {\n      cache,\n      flags = 'r',\n      mode = 438 // =0666\n\n    } = opts;\n\n    try {\n      // Convert URI â†’ Path\n      const filepath = file_uri_to_path_1.default(uri);\n      debug('Normalized pathname: %o', filepath); // `open()` first to get a file descriptor and ensure that the file\n      // exists.\n\n      const fd = yield fs_extra_1.open(filepath, flags, mode); // Now `fstat()` to check the `mtime` and store the stat object for\n      // the cache.\n\n      const stat = yield fs_extra_1.fstat(fd); // if a `cache` was provided, check if the file has not been modified\n\n      if (cache && cache.stat && stat && isNotModified(cache.stat, stat)) {\n        throw new notmodified_1.default();\n      } // `fs.ReadStream` takes care of calling `fs.close()` on the\n      // fd after it's done reading\n      // @ts-ignore - `@types/node` doesn't allow `null` as file path :/\n\n\n      const rs = fs_1.createReadStream(null, Object.assign(Object.assign({\n        autoClose: true\n      }, opts), {\n        fd\n      }));\n      rs.stat = stat;\n      return rs;\n    } catch (err) {\n      if (err.code === 'ENOENT') {\n        throw new notfound_1.default();\n      }\n\n      throw err;\n    }\n  });\n}\n\nexports.default = get; // returns `true` if the `mtime` of the 2 stat objects are equal\n\nfunction isNotModified(prev, curr) {\n  return +prev.mtime === +curr.mtime;\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AAEA,MAAMA,KAAK,GAAGC,gBAAY,cAAZ,CAAd;AAgBA;;;;AAIA,SAA8BC,GAA9B,OAECC,IAFD,EAEkB;EAAA,IADjB;IAAEC,IAAI,EAAEC;EAAR,CACiB;;IAEjB,MAAM;MACLC,KADK;MAELC,KAAK,GAAG,GAFH;MAGLC,IAAI,GAAG,GAHF,CAGM;;IAHN,IAIFL,IAJJ;;IAMA,IAAI;MACH;MACA,MAAMM,QAAQ,GAAGC,2BAASL,GAAT,CAAjB;MACAL,KAAK,CAAC,yBAAD,EAA4BS,QAA5B,CAAL,CAHG,CAKH;MACA;;MACA,MAAME,EAAE,GAAG,MAAMC,gBAAKH,QAAL,EAAeF,KAAf,EAAsBC,IAAtB,CAAjB,CAPG,CASH;MACA;;MACA,MAAMK,IAAI,GAAG,MAAMD,iBAAMD,EAAN,CAAnB,CAXG,CAaH;;MACA,IAAIL,KAAK,IAAIA,KAAK,CAACO,IAAf,IAAuBA,IAAvB,IAA+BC,aAAa,CAACR,KAAK,CAACO,IAAP,EAAaA,IAAb,CAAhD,EAAoE;QACnE,MAAM,IAAIE,qBAAJ,EAAN;MACA,CAhBE,CAkBH;MACA;MACA;;;MACA,MAAMC,EAAE,GAAGC,sBAAiB,IAAjB,EAAqBC;QAC/BC,SAAS,EAAE;MADoB,GAE5BhB,IAF4B,GAExB;QACPQ;MADO,CAFwB,CAArB,CAAX;MAKAK,EAAE,CAACH,IAAH,GAAUA,IAAV;MACA,OAAOG,EAAP;IACA,CA5BD,CA4BE,OAAOI,GAAP,EAAY;MACb,IAAIA,GAAG,CAACC,IAAJ,KAAa,QAAjB,EAA2B;QAC1B,MAAM,IAAIC,kBAAJ,EAAN;MACA;;MACD,MAAMF,GAAN;IACA;EACD;AAAA;;AA5CDG,sB,CA8CA;;AACA,SAAST,aAAT,CAAuBU,IAAvB,EAAoCC,IAApC,EAA+C;EAC9C,OAAO,CAACD,IAAI,CAACE,KAAN,KAAgB,CAACD,IAAI,CAACC,KAA7B;AACA","names":["debug","debug_1","get","opts","href","uri","cache","flags","mode","filepath","file_uri_to_path_1","fd","fs_extra_1","stat","isNotModified","notmodified_1","rs","fs_1","Object","autoClose","err","code","notfound_1","exports","prev","curr","mtime"],"sources":["../src/file.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}