{"ast":null,"code":"'use strict';\n\nvar os = require('os');\n\nvar fs = require('fs');\n\nvar child = require('child_process');\n\nvar DEFAULT_RESOLV_FILE = '/etc/resolv.conf';\n\nfunction getInterfaceName() {\n  var val = 'eth';\n  var platform = os.platform();\n\n  if (platform === 'darwin') {\n    val = 'en';\n  } else if (platform === 'win32') {\n    val = null;\n  }\n\n  return val;\n}\n\nfunction getIfconfigCMD() {\n  if (os.platform() === 'win32') {\n    return 'ipconfig/all';\n  }\n\n  return '/sbin/ifconfig';\n} // typeof os.networkInterfaces family is a number (v18.0.0)\n// types: 'IPv4' | 'IPv6' => 4 | 6\n// @see https://github.com/nodejs/node/issues/42861\n\n\nfunction matchName(actualFamily, expectedFamily) {\n  if (expectedFamily === 'IPv4') {\n    return actualFamily === 'IPv4' || actualFamily === 4;\n  }\n\n  if (expectedFamily === 'IPv6') {\n    return actualFamily === 'IPv6' || actualFamily === 6;\n  }\n\n  return actualFamily === expectedFamily;\n}\n/**\n * Get all addresses.\n *\n * @param {String} [interfaceName] interface name, default is 'eth' on linux, 'en' on mac os.\n * @param {Function(err, addr)} callback\n *  - {Object} addr {\n *    - {String} ip\n *    - {String} ipv6\n *    - {String} mac\n *  }\n */\n\n\nfunction address(interfaceName, callback) {\n  if (typeof interfaceName === 'function') {\n    callback = interfaceName;\n    interfaceName = null;\n  }\n\n  var addr = {\n    ip: address.ip(interfaceName),\n    ipv6: address.ipv6(interfaceName),\n    mac: null\n  };\n  address.mac(interfaceName, function (err, mac) {\n    if (mac) {\n      addr.mac = mac;\n    }\n\n    callback(err, addr);\n  });\n}\n\naddress.interface = function (family, name) {\n  var interfaces = os.networkInterfaces();\n  var noName = !name;\n  name = name || getInterfaceName();\n  family = family || 'IPv4';\n\n  for (var i = -1; i < 8; i++) {\n    var interfaceName = name + (i >= 0 ? i : ''); // support 'lo' and 'lo0'\n\n    var items = interfaces[interfaceName];\n\n    if (items) {\n      for (var j = 0; j < items.length; j++) {\n        var item = items[j];\n\n        if (matchName(item.family, family)) {\n          return item;\n        }\n      }\n    }\n  }\n\n  if (noName) {\n    // filter 127.0.0.1, get the first ip\n    for (var k in interfaces) {\n      var items = interfaces[k];\n\n      for (var i = 0; i < items.length; i++) {\n        var item = items[i];\n\n        if (matchName(item.family, family) && item.address !== '127.0.0.1') {\n          return item;\n        }\n      }\n    }\n  }\n\n  return;\n};\n/**\n * Get current machine IPv4\n *\n * @param {String} [interfaceName] interface name, default is 'eth' on linux, 'en' on mac os.\n * @return {String} IP address\n */\n\n\naddress.ip = function (interfaceName) {\n  var item = address.interface('IPv4', interfaceName);\n  return item && item.address;\n};\n/**\n * Get current machine IPv6\n *\n * @param {String} [interfaceName] interface name, default is 'eth' on linux, 'en' on mac os.\n * @return {String} IP address\n */\n\n\naddress.ipv6 = function (interfaceName) {\n  var item = address.interface('IPv6', interfaceName);\n  return item && item.address;\n}; // osx start line 'en0: flags=8863<UP,BROADCAST,SMART,RUNNING,SIMPLEX,MULTICAST> mtu 1500'\n// linux start line 'eth0      Link encap:Ethernet  HWaddr 00:16:3E:00:0A:29  '\n\n\nvar MAC_OSX_START_LINE = /^(\\w+)\\:\\s+flags=/;\nvar MAC_LINUX_START_LINE = /^(\\w+)\\s{2,}link encap:\\w+/i; // ether 78:ca:39:b0:e6:7d\n// HWaddr 00:16:3E:00:0A:29\n\nvar MAC_RE = address.MAC_RE = /(?:ether|HWaddr)\\s+((?:[a-z0-9]{2}\\:){5}[a-z0-9]{2})/i; // osx: inet 192.168.2.104 netmask 0xffffff00 broadcast 192.168.2.255\n// linux: inet addr:10.125.5.202  Bcast:10.125.15.255  Mask:255.255.240.0\n\nvar MAC_IP_RE = address.MAC_IP_RE = /inet\\s(?:addr\\:)?(\\d+\\.\\d+\\.\\d+\\.\\d+)/;\n\nfunction getMAC(content, interfaceName, matchIP) {\n  var lines = content.split('\\n');\n\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i].trimRight();\n    var m = MAC_OSX_START_LINE.exec(line) || MAC_LINUX_START_LINE.exec(line);\n\n    if (!m) {\n      continue;\n    } // check interface name\n\n\n    var name = m[1];\n\n    if (name.indexOf(interfaceName) !== 0) {\n      continue;\n    }\n\n    var ip = null;\n    var mac = null;\n    var match = MAC_RE.exec(line);\n\n    if (match) {\n      mac = match[1];\n    }\n\n    i++;\n\n    while (true) {\n      line = lines[i];\n\n      if (!line || MAC_OSX_START_LINE.exec(line) || MAC_LINUX_START_LINE.exec(line)) {\n        i--;\n        break; // hit next interface, handle next interface\n      }\n\n      if (!mac) {\n        match = MAC_RE.exec(line);\n\n        if (match) {\n          mac = match[1];\n        }\n      }\n\n      if (!ip) {\n        match = MAC_IP_RE.exec(line);\n\n        if (match) {\n          ip = match[1];\n        }\n      }\n\n      i++;\n    }\n\n    if (ip === matchIP) {\n      return mac;\n    }\n  }\n}\n/**\n * Get current machine MAC address\n *\n * @param {String} [interfaceName] interface name, default is 'eth' on linux, 'en' on mac os.\n * @param {Function(err, address)} callback\n */\n\n\naddress.mac = function (interfaceName, callback) {\n  if (typeof interfaceName === 'function') {\n    callback = interfaceName;\n    interfaceName = null;\n  }\n\n  interfaceName = interfaceName || getInterfaceName();\n  var item = address.interface('IPv4', interfaceName);\n\n  if (!item) {\n    return callback();\n  } // https://github.com/nodejs/node/issues/13581\n  // bug in node 7.x and <= 8.4.0\n\n\n  if (!process.env.CI && (item.mac === 'ff:00:00:00:00:00' || item.mac === '00:00:00:00:00:00')) {\n    // wrong address, ignore it\n    item.mac = '';\n  }\n\n  if (item.mac) {\n    return callback(null, item.mac);\n  }\n\n  child.exec(getIfconfigCMD(), {\n    timeout: 5000\n  }, function (err, stdout, stderr) {\n    if (err || !stdout) {\n      return callback(err);\n    }\n\n    var mac = getMAC(stdout || '', interfaceName, item.address);\n    callback(null, mac);\n  });\n}; // nameserver 172.24.102.254\n\n\nvar DNS_SERVER_RE = /^nameserver\\s+(\\d+\\.\\d+\\.\\d+\\.\\d+)$/i;\n/**\n * Get DNS servers.\n *\n * @param {String} [filepath] resolv config file path. default is '/etc/resolv.conf'.\n * @param {Function(err, servers)} callback\n */\n\naddress.dns = function (filepath, callback) {\n  if (typeof filepath === 'function') {\n    callback = filepath;\n    filepath = null;\n  }\n\n  filepath = filepath || DEFAULT_RESOLV_FILE;\n  fs.readFile(filepath, 'utf8', function (err, content) {\n    if (err) {\n      return callback(err);\n    }\n\n    var servers = [];\n    content = content || '';\n    var lines = content.split('\\n');\n\n    for (var i = 0; i < lines.length; i++) {\n      var line = lines[i].trim();\n      var m = DNS_SERVER_RE.exec(line);\n\n      if (m) {\n        servers.push(m[1]);\n      }\n    }\n\n    callback(null, servers);\n  });\n};\n\nmodule.exports = address;","map":{"version":3,"names":["os","require","fs","child","DEFAULT_RESOLV_FILE","getInterfaceName","val","platform","getIfconfigCMD","matchName","actualFamily","expectedFamily","address","interfaceName","callback","addr","ip","ipv6","mac","err","interface","family","name","interfaces","networkInterfaces","noName","i","items","j","length","item","k","MAC_OSX_START_LINE","MAC_LINUX_START_LINE","MAC_RE","MAC_IP_RE","getMAC","content","matchIP","lines","split","line","trimRight","m","exec","indexOf","match","process","env","CI","timeout","stdout","stderr","DNS_SERVER_RE","dns","filepath","readFile","servers","trim","push","module","exports"],"sources":["C:/Users/bryan/Desktop/myrepresentatives/frontend/node_modules/address/lib/address.js"],"sourcesContent":["'use strict';\n\nvar os = require('os');\nvar fs = require('fs');\nvar child = require('child_process');\n\nvar DEFAULT_RESOLV_FILE = '/etc/resolv.conf';\n\nfunction getInterfaceName() {\n  var val = 'eth';\n  var platform = os.platform();\n  if (platform === 'darwin') {\n    val = 'en';\n  } else if (platform === 'win32') {\n    val = null;\n  }\n  return val;\n}\n\nfunction getIfconfigCMD() {\n  if (os.platform() === 'win32') {\n    return 'ipconfig/all';\n  }\n  return '/sbin/ifconfig';\n}\n\n// typeof os.networkInterfaces family is a number (v18.0.0)\n// types: 'IPv4' | 'IPv6' => 4 | 6\n// @see https://github.com/nodejs/node/issues/42861\nfunction matchName(actualFamily, expectedFamily) {\n  if (expectedFamily === 'IPv4') {\n    return actualFamily === 'IPv4' || actualFamily === 4;\n  }\n  if (expectedFamily === 'IPv6') {\n    return actualFamily === 'IPv6' || actualFamily === 6;\n  }\n  return actualFamily === expectedFamily;\n}\n\n/**\n * Get all addresses.\n *\n * @param {String} [interfaceName] interface name, default is 'eth' on linux, 'en' on mac os.\n * @param {Function(err, addr)} callback\n *  - {Object} addr {\n *    - {String} ip\n *    - {String} ipv6\n *    - {String} mac\n *  }\n */\nfunction address(interfaceName, callback) {\n  if (typeof interfaceName === 'function') {\n    callback = interfaceName;\n    interfaceName = null;\n  }\n\n  var addr = {\n    ip: address.ip(interfaceName),\n    ipv6: address.ipv6(interfaceName),\n    mac: null\n  };\n  address.mac(interfaceName, function (err, mac) {\n    if (mac) {\n      addr.mac = mac;\n    }\n    callback(err, addr);\n  });\n}\n\naddress.interface = function (family, name) {\n  var interfaces = os.networkInterfaces();\n  var noName = !name;\n  name = name || getInterfaceName();\n  family = family || 'IPv4';\n  for (var i = -1; i < 8; i++) {\n    var interfaceName = name + (i >= 0 ? i : ''); // support 'lo' and 'lo0'\n    var items = interfaces[interfaceName];\n    if (items) {\n      for (var j = 0; j < items.length; j++) {\n        var item = items[j];\n        if (matchName(item.family, family)) {\n          return item;\n        }\n      }\n    }\n  }\n\n  if (noName) {\n    // filter 127.0.0.1, get the first ip\n    for (var k in interfaces) {\n      var items = interfaces[k];\n      for (var i = 0; i < items.length; i++) {\n        var item = items[i];\n        if (matchName(item.family, family) && item.address !== '127.0.0.1') {\n          return item;\n        }\n      }\n    }\n  }\n  return;\n};\n\n/**\n * Get current machine IPv4\n *\n * @param {String} [interfaceName] interface name, default is 'eth' on linux, 'en' on mac os.\n * @return {String} IP address\n */\naddress.ip = function (interfaceName) {\n  var item = address.interface('IPv4', interfaceName);\n  return item && item.address;\n};\n\n/**\n * Get current machine IPv6\n *\n * @param {String} [interfaceName] interface name, default is 'eth' on linux, 'en' on mac os.\n * @return {String} IP address\n */\naddress.ipv6 = function (interfaceName) {\n  var item = address.interface('IPv6', interfaceName);\n  return item && item.address;\n};\n\n// osx start line 'en0: flags=8863<UP,BROADCAST,SMART,RUNNING,SIMPLEX,MULTICAST> mtu 1500'\n// linux start line 'eth0      Link encap:Ethernet  HWaddr 00:16:3E:00:0A:29  '\nvar MAC_OSX_START_LINE = /^(\\w+)\\:\\s+flags=/;\nvar MAC_LINUX_START_LINE = /^(\\w+)\\s{2,}link encap:\\w+/i;\n\n// ether 78:ca:39:b0:e6:7d\n// HWaddr 00:16:3E:00:0A:29\nvar MAC_RE = address.MAC_RE = /(?:ether|HWaddr)\\s+((?:[a-z0-9]{2}\\:){5}[a-z0-9]{2})/i;\n\n// osx: inet 192.168.2.104 netmask 0xffffff00 broadcast 192.168.2.255\n// linux: inet addr:10.125.5.202  Bcast:10.125.15.255  Mask:255.255.240.0\nvar MAC_IP_RE = address.MAC_IP_RE = /inet\\s(?:addr\\:)?(\\d+\\.\\d+\\.\\d+\\.\\d+)/;\n\nfunction getMAC(content, interfaceName, matchIP) {\n  var lines = content.split('\\n');\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i].trimRight();\n    var m = MAC_OSX_START_LINE.exec(line) || MAC_LINUX_START_LINE.exec(line);\n    if (!m) {\n      continue;\n    }\n\n    // check interface name\n    var name = m[1];\n    if (name.indexOf(interfaceName) !== 0) {\n      continue;\n    }\n\n    var ip = null;\n    var mac = null;\n    var match = MAC_RE.exec(line);\n    if (match) {\n      mac = match[1];\n    }\n\n    i++;\n    while (true) {\n      line = lines[i];\n      if (!line || MAC_OSX_START_LINE.exec(line) || MAC_LINUX_START_LINE.exec(line)) {\n        i--;\n        break; // hit next interface, handle next interface\n      }\n      if (!mac) {\n        match = MAC_RE.exec(line);\n        if (match) {\n          mac = match[1];\n        }\n      }\n\n      if (!ip) {\n        match = MAC_IP_RE.exec(line);\n        if (match) {\n          ip = match[1];\n        }\n      }\n\n      i++;\n    }\n\n    if (ip === matchIP) {\n      return mac;\n    }\n  }\n}\n\n/**\n * Get current machine MAC address\n *\n * @param {String} [interfaceName] interface name, default is 'eth' on linux, 'en' on mac os.\n * @param {Function(err, address)} callback\n */\naddress.mac = function (interfaceName, callback) {\n  if (typeof interfaceName === 'function') {\n    callback = interfaceName;\n    interfaceName = null;\n  }\n  interfaceName = interfaceName || getInterfaceName();\n  var item = address.interface('IPv4', interfaceName);\n  if (!item) {\n    return callback();\n  }\n\n  // https://github.com/nodejs/node/issues/13581\n  // bug in node 7.x and <= 8.4.0\n  if (!process.env.CI && (item.mac === 'ff:00:00:00:00:00' || item.mac === '00:00:00:00:00:00')) {\n    // wrong address, ignore it\n    item.mac = '';\n  }\n\n  if (item.mac) {\n    return callback(null, item.mac);\n  }\n\n  child.exec(getIfconfigCMD(), {timeout: 5000}, function (err, stdout, stderr) {\n    if (err || !stdout) {\n      return callback(err);\n    }\n\n    var mac = getMAC(stdout || '', interfaceName, item.address);\n    callback(null, mac);\n  });\n};\n\n// nameserver 172.24.102.254\nvar DNS_SERVER_RE = /^nameserver\\s+(\\d+\\.\\d+\\.\\d+\\.\\d+)$/i;\n\n/**\n * Get DNS servers.\n *\n * @param {String} [filepath] resolv config file path. default is '/etc/resolv.conf'.\n * @param {Function(err, servers)} callback\n */\naddress.dns = function (filepath, callback) {\n  if (typeof filepath === 'function') {\n    callback = filepath;\n    filepath = null;\n  }\n  filepath = filepath || DEFAULT_RESOLV_FILE;\n  fs.readFile(filepath, 'utf8', function (err, content) {\n    if (err) {\n      return callback(err);\n    }\n    var servers = [];\n    content = content || '';\n    var lines = content.split('\\n');\n    for (var i = 0; i < lines.length; i++) {\n      var line = lines[i].trim();\n      var m = DNS_SERVER_RE.exec(line);\n      if (m) {\n        servers.push(m[1]);\n      }\n    }\n\n    callback(null, servers);\n  });\n};\n\nmodule.exports = address;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}