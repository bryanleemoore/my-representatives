{"ast":null,"code":"var fs = require('fs'),\n    tls = require('tls'),\n    zlib = require('zlib'),\n    Socket = require('net').Socket,\n    EventEmitter = require('events').EventEmitter,\n    inherits = require('util').inherits,\n    inspect = require('util').inspect;\n\nvar Parser = require('./parser');\n\nvar XRegExp = require('xregexp').XRegExp;\n\nvar REX_TIMEVAL = XRegExp.cache('^(?<year>\\\\d{4})(?<month>\\\\d{2})(?<date>\\\\d{2})(?<hour>\\\\d{2})(?<minute>\\\\d{2})(?<second>\\\\d+)(?:.\\\\d+)?$'),\n    RE_PASV = /([\\d]+),([\\d]+),([\\d]+),([\\d]+),([-\\d]+),([-\\d]+)/,\n    RE_EOL = /\\r?\\n/g,\n    RE_WD = /\"(.+)\"(?: |$)/,\n    RE_SYST = /^([^ ]+)(?: |$)/;\nvar\n/*TYPE = {\n  SYNTAX: 0,\n  INFO: 1,\n  SOCKETS: 2,\n  AUTH: 3,\n  UNSPEC: 4,\n  FILESYS: 5\n},*/\nRETVAL = {\n  PRELIM: 1,\n  OK: 2,\n  WAITING: 3,\n  ERR_TEMP: 4,\n  ERR_PERM: 5\n},\n\n/*ERRORS = {\n  421: 'Service not available, closing control connection',\n  425: 'Can\\'t open data connection',\n  426: 'Connection closed; transfer aborted',\n  450: 'Requested file action not taken / File unavailable (e.g., file busy)',\n  451: 'Requested action aborted: local error in processing',\n  452: 'Requested action not taken / Insufficient storage space in system',\n  500: 'Syntax error / Command unrecognized',\n  501: 'Syntax error in parameters or arguments',\n  502: 'Command not implemented',\n  503: 'Bad sequence of commands',\n  504: 'Command not implemented for that parameter',\n  530: 'Not logged in',\n  532: 'Need account for storing files',\n  550: 'Requested action not taken / File unavailable (e.g., file not found, no access)',\n  551: 'Requested action aborted: page type unknown',\n  552: 'Requested file action aborted / Exceeded storage allocation (for current directory or dataset)',\n  553: 'Requested action not taken / File name not allowed'\n},*/\nbytesNOOP = new Buffer('NOOP\\r\\n');\n\nvar FTP = module.exports = function () {\n  if (!(this instanceof FTP)) return new FTP();\n  this._socket = undefined;\n  this._pasvSock = undefined;\n  this._feat = undefined;\n  this._curReq = undefined;\n  this._queue = [];\n  this._secstate = undefined;\n  this._debug = undefined;\n  this._keepalive = undefined;\n  this._ending = false;\n  this._parser = undefined;\n  this.options = {\n    host: undefined,\n    port: undefined,\n    user: undefined,\n    password: undefined,\n    secure: false,\n    secureOptions: undefined,\n    connTimeout: undefined,\n    pasvTimeout: undefined,\n    aliveTimeout: undefined\n  };\n  this.connected = false;\n};\n\ninherits(FTP, EventEmitter);\n\nFTP.prototype.connect = function (options) {\n  var self = this;\n  if (typeof options !== 'object') options = {};\n  this.connected = false;\n  this.options.host = options.host || 'localhost';\n  this.options.port = options.port || 21;\n  this.options.user = options.user || 'anonymous';\n  this.options.password = options.password || 'anonymous@';\n  this.options.secure = options.secure || false;\n  this.options.secureOptions = options.secureOptions;\n  this.options.connTimeout = options.connTimeout || 10000;\n  this.options.pasvTimeout = options.pasvTimeout || 10000;\n  this.options.aliveTimeout = options.keepalive || 10000;\n  if (typeof options.debug === 'function') this._debug = options.debug;\n  var secureOptions,\n      debug = this._debug,\n      socket = new Socket();\n  socket.setTimeout(0);\n  socket.setKeepAlive(true);\n  this._parser = new Parser({\n    debug: debug\n  });\n\n  this._parser.on('response', function (code, text) {\n    var retval = code / 100 >> 0;\n\n    if (retval === RETVAL.ERR_TEMP || retval === RETVAL.ERR_PERM) {\n      if (self._curReq) self._curReq.cb(makeError(code, text), undefined, code);else self.emit('error', makeError(code, text));\n    } else if (self._curReq) self._curReq.cb(undefined, text, code); // a hack to signal we're waiting for a PASV data connection to complete\n    // first before executing any more queued requests ...\n    //\n    // also: don't forget our current request if we're expecting another\n    // terminating response ....\n\n\n    if (self._curReq && retval !== RETVAL.PRELIM) {\n      self._curReq = undefined;\n\n      self._send();\n    }\n\n    noopreq.cb();\n  });\n\n  if (this.options.secure) {\n    secureOptions = {};\n    secureOptions.host = this.options.host;\n\n    for (var k in this.options.secureOptions) secureOptions[k] = this.options.secureOptions[k];\n\n    secureOptions.socket = socket;\n    this.options.secureOptions = secureOptions;\n  }\n\n  if (this.options.secure === 'implicit') this._socket = tls.connect(secureOptions, onconnect);else {\n    socket.once('connect', onconnect);\n    this._socket = socket;\n  }\n  var noopreq = {\n    cmd: 'NOOP',\n    cb: function () {\n      clearTimeout(self._keepalive);\n      self._keepalive = setTimeout(donoop, self.options.aliveTimeout);\n    }\n  };\n\n  function donoop() {\n    if (!self._socket || !self._socket.writable) clearTimeout(self._keepalive);else if (!self._curReq && self._queue.length === 0) {\n      self._curReq = noopreq;\n      debug && debug('[connection] > NOOP');\n\n      self._socket.write(bytesNOOP);\n    } else noopreq.cb();\n  }\n\n  function onconnect() {\n    clearTimeout(timer);\n    clearTimeout(self._keepalive);\n    self.connected = true;\n    self._socket = socket; // re-assign for implicit secure connections\n\n    var cmd;\n\n    if (self._secstate) {\n      if (self._secstate === 'upgraded-tls' && self.options.secure === true) {\n        cmd = 'PBSZ';\n\n        self._send('PBSZ 0', reentry, true);\n      } else {\n        cmd = 'USER';\n\n        self._send('USER ' + self.options.user, reentry, true);\n      }\n    } else {\n      self._curReq = {\n        cmd: '',\n        cb: reentry\n      };\n    }\n\n    function reentry(err, text, code) {\n      if (err && (!cmd || cmd === 'USER' || cmd === 'PASS' || cmd === 'TYPE')) {\n        self.emit('error', err);\n        return self._socket && self._socket.end();\n      }\n\n      if (cmd === 'AUTH TLS' && code !== 234 && self.options.secure !== true || cmd === 'AUTH SSL' && code !== 334 || cmd === 'PBSZ' && code !== 200 || cmd === 'PROT' && code !== 200) {\n        self.emit('error', makeError(code, 'Unable to secure connection(s)'));\n        return self._socket && self._socket.end();\n      }\n\n      if (!cmd) {\n        // sometimes the initial greeting can contain useful information\n        // about authorized use, other limits, etc.\n        self.emit('greeting', text);\n\n        if (self.options.secure && self.options.secure !== 'implicit') {\n          cmd = 'AUTH TLS';\n\n          self._send(cmd, reentry, true);\n        } else {\n          cmd = 'USER';\n\n          self._send('USER ' + self.options.user, reentry, true);\n        }\n      } else if (cmd === 'USER') {\n        if (code !== 230) {\n          // password required\n          if (!self.options.password) {\n            self.emit('error', makeError(code, 'Password required'));\n            return self._socket && self._socket.end();\n          }\n\n          cmd = 'PASS';\n\n          self._send('PASS ' + self.options.password, reentry, true);\n        } else {\n          // no password required\n          cmd = 'PASS';\n          reentry(undefined, text, code);\n        }\n      } else if (cmd === 'PASS') {\n        cmd = 'FEAT';\n\n        self._send(cmd, reentry, true);\n      } else if (cmd === 'FEAT') {\n        if (!err) self._feat = Parser.parseFeat(text);\n        cmd = 'TYPE';\n\n        self._send('TYPE I', reentry, true);\n      } else if (cmd === 'TYPE') self.emit('ready');else if (cmd === 'PBSZ') {\n        cmd = 'PROT';\n\n        self._send('PROT P', reentry, true);\n      } else if (cmd === 'PROT') {\n        cmd = 'USER';\n\n        self._send('USER ' + self.options.user, reentry, true);\n      } else if (cmd.substr(0, 4) === 'AUTH') {\n        if (cmd === 'AUTH TLS' && code !== 234) {\n          cmd = 'AUTH SSL';\n          return self._send(cmd, reentry, true);\n        } else if (cmd === 'AUTH TLS') self._secstate = 'upgraded-tls';else if (cmd === 'AUTH SSL') self._secstate = 'upgraded-ssl';\n\n        socket.removeAllListeners('data');\n        socket.removeAllListeners('error');\n        socket._decoder = null;\n        self._curReq = null; // prevent queue from being processed during\n        // TLS/SSL negotiation\n\n        secureOptions.socket = self._socket;\n        secureOptions.session = undefined;\n        socket = tls.connect(secureOptions, onconnect);\n        socket.setEncoding('binary');\n        socket.on('data', ondata);\n        socket.once('end', onend);\n        socket.on('error', onerror);\n      }\n    }\n  }\n\n  socket.on('data', ondata);\n\n  function ondata(chunk) {\n    debug && debug('[connection] < ' + inspect(chunk.toString('binary')));\n    if (self._parser) self._parser.write(chunk);\n  }\n\n  socket.on('error', onerror);\n\n  function onerror(err) {\n    clearTimeout(timer);\n    clearTimeout(self._keepalive);\n    self.emit('error', err);\n  }\n\n  socket.once('end', onend);\n\n  function onend() {\n    ondone();\n    self.emit('end');\n  }\n\n  socket.once('close', function (had_err) {\n    ondone();\n    self.emit('close', had_err);\n  });\n  var hasReset = false;\n\n  function ondone() {\n    if (!hasReset) {\n      hasReset = true;\n      clearTimeout(timer);\n\n      self._reset();\n    }\n  }\n\n  var timer = setTimeout(function () {\n    self.emit('error', new Error('Timeout while connecting to server'));\n    self._socket && self._socket.destroy();\n\n    self._reset();\n  }, this.options.connTimeout);\n\n  this._socket.connect(this.options.port, this.options.host);\n};\n\nFTP.prototype.end = function () {\n  if (this._queue.length) this._ending = true;else this._reset();\n};\n\nFTP.prototype.destroy = function () {\n  this._reset();\n}; // \"Standard\" (RFC 959) commands\n\n\nFTP.prototype.ascii = function (cb) {\n  return this._send('TYPE A', cb);\n};\n\nFTP.prototype.binary = function (cb) {\n  return this._send('TYPE I', cb);\n};\n\nFTP.prototype.abort = function (immediate, cb) {\n  if (typeof immediate === 'function') {\n    cb = immediate;\n    immediate = true;\n  }\n\n  if (immediate) this._send('ABOR', cb, true);else this._send('ABOR', cb);\n};\n\nFTP.prototype.cwd = function (path, cb, promote) {\n  this._send('CWD ' + path, function (err, text, code) {\n    if (err) return cb(err);\n    var m = RE_WD.exec(text);\n    cb(undefined, m ? m[1] : undefined);\n  }, promote);\n};\n\nFTP.prototype.delete = function (path, cb) {\n  this._send('DELE ' + path, cb);\n};\n\nFTP.prototype.site = function (cmd, cb) {\n  this._send('SITE ' + cmd, cb);\n};\n\nFTP.prototype.status = function (cb) {\n  this._send('STAT', cb);\n};\n\nFTP.prototype.rename = function (from, to, cb) {\n  var self = this;\n\n  this._send('RNFR ' + from, function (err) {\n    if (err) return cb(err);\n\n    self._send('RNTO ' + to, cb, true);\n  });\n};\n\nFTP.prototype.logout = function (cb) {\n  this._send('QUIT', cb);\n};\n\nFTP.prototype.listSafe = function (path, zcomp, cb) {\n  if (typeof path === 'string') {\n    var self = this; // store current path\n\n    this.pwd(function (err, origpath) {\n      if (err) return cb(err); // change to destination path\n\n      self.cwd(path, function (err) {\n        if (err) return cb(err); // get dir listing\n\n        self.list(zcomp || false, function (err, list) {\n          // change back to original path\n          if (err) return self.cwd(origpath, cb);\n          self.cwd(origpath, function (err) {\n            if (err) return cb(err);\n            cb(err, list);\n          });\n        });\n      });\n    });\n  } else this.list(path, zcomp, cb);\n};\n\nFTP.prototype.list = function (path, zcomp, cb) {\n  var self = this,\n      cmd;\n\n  if (typeof path === 'function') {\n    // list(function() {})\n    cb = path;\n    path = undefined;\n    cmd = 'LIST';\n    zcomp = false;\n  } else if (typeof path === 'boolean') {\n    // list(true, function() {})\n    cb = zcomp;\n    zcomp = path;\n    path = undefined;\n    cmd = 'LIST';\n  } else if (typeof zcomp === 'function') {\n    // list('/foo', function() {})\n    cb = zcomp;\n    cmd = 'LIST ' + path;\n    zcomp = false;\n  } else cmd = 'LIST ' + path;\n\n  this._pasv(function (err, sock) {\n    if (err) return cb(err);\n\n    if (self._queue[0] && self._queue[0].cmd === 'ABOR') {\n      sock.destroy();\n      return cb();\n    }\n\n    var sockerr,\n        done = false,\n        replies = 0,\n        entries,\n        buffer = '',\n        source = sock;\n\n    if (zcomp) {\n      source = zlib.createInflate();\n      sock.pipe(source);\n    }\n\n    source.on('data', function (chunk) {\n      buffer += chunk.toString('binary');\n    });\n    source.once('error', function (err) {\n      if (!sock.aborting) sockerr = err;\n    });\n    source.once('end', ondone);\n    source.once('close', ondone);\n\n    function ondone() {\n      done = true;\n      final();\n    }\n\n    function final() {\n      if (done && replies === 2) {\n        replies = 3;\n        if (sockerr) return cb(new Error('Unexpected data connection error: ' + sockerr));\n        if (sock.aborting) return cb(); // process received data\n\n        entries = buffer.split(RE_EOL);\n        entries.pop(); // ending EOL\n\n        var parsed = [];\n\n        for (var i = 0, len = entries.length; i < len; ++i) {\n          var parsedVal = Parser.parseListEntry(entries[i]);\n          if (parsedVal !== null) parsed.push(parsedVal);\n        }\n\n        if (zcomp) {\n          self._send('MODE S', function () {\n            cb(undefined, parsed);\n          }, true);\n        } else cb(undefined, parsed);\n      }\n    }\n\n    if (zcomp) {\n      self._send('MODE Z', function (err, text, code) {\n        if (err) {\n          sock.destroy();\n          return cb(makeError(code, 'Compression not supported'));\n        }\n\n        sendList();\n      }, true);\n    } else sendList();\n\n    function sendList() {\n      // this callback will be executed multiple times, the first is when server\n      // replies with 150 and then a final reply to indicate whether the\n      // transfer was actually a success or not\n      self._send(cmd, function (err, text, code) {\n        if (err) {\n          sock.destroy();\n\n          if (zcomp) {\n            self._send('MODE S', function () {\n              cb(err);\n            }, true);\n          } else cb(err);\n\n          return;\n        } // some servers may not open a data connection for empty directories\n\n\n        if (++replies === 1 && code === 226) {\n          replies = 2;\n          sock.destroy();\n          final();\n        } else if (replies === 2) final();\n      }, true);\n    }\n  });\n};\n\nFTP.prototype.get = function (path, zcomp, cb) {\n  var self = this;\n\n  if (typeof zcomp === 'function') {\n    cb = zcomp;\n    zcomp = false;\n  }\n\n  this._pasv(function (err, sock) {\n    if (err) return cb(err);\n\n    if (self._queue[0] && self._queue[0].cmd === 'ABOR') {\n      sock.destroy();\n      return cb();\n    } // modify behavior of socket events so that we can emit 'error' once for\n    // either a TCP-level error OR an FTP-level error response that we get when\n    // the socket is closed (e.g. the server ran out of space).\n\n\n    var sockerr,\n        started = false,\n        lastreply = false,\n        done = false,\n        source = sock;\n\n    if (zcomp) {\n      source = zlib.createInflate();\n      sock.pipe(source);\n      sock._emit = sock.emit;\n\n      sock.emit = function (ev, arg1) {\n        if (ev === 'error') {\n          if (!sockerr) sockerr = arg1;\n          return;\n        }\n\n        sock._emit.apply(sock, Array.prototype.slice.call(arguments));\n      };\n    }\n\n    source._emit = source.emit;\n\n    source.emit = function (ev, arg1) {\n      if (ev === 'error') {\n        if (!sockerr) sockerr = arg1;\n        return;\n      } else if (ev === 'end' || ev === 'close') {\n        if (!done) {\n          done = true;\n          ondone();\n        }\n\n        return;\n      }\n\n      source._emit.apply(source, Array.prototype.slice.call(arguments));\n    };\n\n    function ondone() {\n      if (done && lastreply) {\n        self._send('MODE S', function () {\n          source._emit('end');\n\n          source._emit('close');\n        }, true);\n      }\n    }\n\n    sock.pause();\n\n    if (zcomp) {\n      self._send('MODE Z', function (err, text, code) {\n        if (err) {\n          sock.destroy();\n          return cb(makeError(code, 'Compression not supported'));\n        }\n\n        sendRetr();\n      }, true);\n    } else sendRetr();\n\n    function sendRetr() {\n      // this callback will be executed multiple times, the first is when server\n      // replies with 150, then a final reply after the data connection closes\n      // to indicate whether the transfer was actually a success or not\n      self._send('RETR ' + path, function (err, text, code) {\n        if (sockerr || err) {\n          sock.destroy();\n\n          if (!started) {\n            if (zcomp) {\n              self._send('MODE S', function () {\n                cb(sockerr || err);\n              }, true);\n            } else cb(sockerr || err);\n          } else {\n            source._emit('error', sockerr || err);\n\n            source._emit('close', true);\n          }\n\n          return;\n        } // server returns 125 when data connection is already open; we treat it\n        // just like a 150\n\n\n        if (code === 150 || code === 125) {\n          started = true;\n          cb(undefined, source);\n          sock.resume();\n        } else {\n          lastreply = true;\n          ondone();\n        }\n      }, true);\n    }\n  });\n};\n\nFTP.prototype.put = function (input, path, zcomp, cb) {\n  this._store('STOR ' + path, input, zcomp, cb);\n};\n\nFTP.prototype.append = function (input, path, zcomp, cb) {\n  this._store('APPE ' + path, input, zcomp, cb);\n};\n\nFTP.prototype.pwd = function (cb) {\n  // PWD is optional\n  var self = this;\n\n  this._send('PWD', function (err, text, code) {\n    if (code === 502) {\n      return self.cwd('.', function (cwderr, cwd) {\n        if (cwderr) return cb(cwderr);\n        if (cwd === undefined) cb(err);else cb(undefined, cwd);\n      }, true);\n    } else if (err) return cb(err);\n\n    cb(undefined, RE_WD.exec(text)[1]);\n  });\n};\n\nFTP.prototype.cdup = function (cb) {\n  // CDUP is optional\n  var self = this;\n\n  this._send('CDUP', function (err, text, code) {\n    if (code === 502) self.cwd('..', cb, true);else cb(err);\n  });\n};\n\nFTP.prototype.mkdir = function (path, recursive, cb) {\n  // MKD is optional\n  if (typeof recursive === 'function') {\n    cb = recursive;\n    recursive = false;\n  }\n\n  if (!recursive) this._send('MKD ' + path, cb);else {\n    var self = this,\n        owd,\n        abs,\n        dirs,\n        dirslen,\n        i = -1,\n        searching = true;\n    abs = path[0] === '/';\n\n    var nextDir = function () {\n      if (++i === dirslen) {\n        // return to original working directory\n        return self._send('CWD ' + owd, cb, true);\n      }\n\n      if (searching) {\n        self._send('CWD ' + dirs[i], function (err, text, code) {\n          if (code === 550) {\n            searching = false;\n            --i;\n          } else if (err) {\n            // return to original working directory\n            return self._send('CWD ' + owd, function () {\n              cb(err);\n            }, true);\n          }\n\n          nextDir();\n        }, true);\n      } else {\n        self._send('MKD ' + dirs[i], function (err, text, code) {\n          if (err) {\n            // return to original working directory\n            return self._send('CWD ' + owd, function () {\n              cb(err);\n            }, true);\n          }\n\n          self._send('CWD ' + dirs[i], nextDir, true);\n        }, true);\n      }\n    };\n\n    this.pwd(function (err, cwd) {\n      if (err) return cb(err);\n      owd = cwd;\n      if (abs) path = path.substr(1);\n      if (path[path.length - 1] === '/') path = path.substring(0, path.length - 1);\n      dirs = path.split('/');\n      dirslen = dirs.length;\n      if (abs) self._send('CWD /', function (err) {\n        if (err) return cb(err);\n        nextDir();\n      }, true);else nextDir();\n    });\n  }\n};\n\nFTP.prototype.rmdir = function (path, recursive, cb) {\n  // RMD is optional\n  if (typeof recursive === 'function') {\n    cb = recursive;\n    recursive = false;\n  }\n\n  if (!recursive) {\n    return this._send('RMD ' + path, cb);\n  }\n\n  var self = this;\n  this.list(path, function (err, list) {\n    if (err) return cb(err);\n    var idx = 0; // this function will be called once per listing entry\n\n    var deleteNextEntry;\n\n    deleteNextEntry = function (err) {\n      if (err) return cb(err);\n\n      if (idx >= list.length) {\n        if (list[0] && list[0].name === path) {\n          return cb(null);\n        } else {\n          return self.rmdir(path, cb);\n        }\n      }\n\n      var entry = list[idx++]; // get the path to the file\n\n      var subpath = null;\n\n      if (entry.name[0] === '/') {\n        // this will be the case when you call deleteRecursively() and pass\n        // the path to a plain file\n        subpath = entry.name;\n      } else {\n        if (path[path.length - 1] == '/') {\n          subpath = path + entry.name;\n        } else {\n          subpath = path + '/' + entry.name;\n        }\n      } // delete the entry (recursively) according to its type\n\n\n      if (entry.type === 'd') {\n        if (entry.name === \".\" || entry.name === \"..\") {\n          return deleteNextEntry();\n        }\n\n        self.rmdir(subpath, true, deleteNextEntry);\n      } else {\n        self.delete(subpath, deleteNextEntry);\n      }\n    };\n\n    deleteNextEntry();\n  });\n};\n\nFTP.prototype.system = function (cb) {\n  // SYST is optional\n  this._send('SYST', function (err, text) {\n    if (err) return cb(err);\n    cb(undefined, RE_SYST.exec(text)[1]);\n  });\n}; // \"Extended\" (RFC 3659) commands\n\n\nFTP.prototype.size = function (path, cb) {\n  var self = this;\n\n  this._send('SIZE ' + path, function (err, text, code) {\n    if (code === 502) {\n      // Note: this may cause a problem as list() is _appended_ to the queue\n      return self.list(path, function (err, list) {\n        if (err) return cb(err);\n        if (list.length === 1) cb(undefined, list[0].size);else {\n          // path could have been a directory and we got a listing of its\n          // contents, but here we echo the behavior of the real SIZE and\n          // return 'File not found' for directories\n          cb(new Error('File not found'));\n        }\n      }, true);\n    } else if (err) return cb(err);\n\n    cb(undefined, parseInt(text, 10));\n  });\n};\n\nFTP.prototype.lastMod = function (path, cb) {\n  var self = this;\n\n  this._send('MDTM ' + path, function (err, text, code) {\n    if (code === 502) {\n      return self.list(path, function (err, list) {\n        if (err) return cb(err);\n        if (list.length === 1) cb(undefined, list[0].date);else cb(new Error('File not found'));\n      }, true);\n    } else if (err) return cb(err);\n\n    var val = XRegExp.exec(text, REX_TIMEVAL),\n        ret;\n    if (!val) return cb(new Error('Invalid date/time format from server'));\n    ret = new Date(val.year + '-' + val.month + '-' + val.date + 'T' + val.hour + ':' + val.minute + ':' + val.second);\n    cb(undefined, ret);\n  });\n};\n\nFTP.prototype.restart = function (offset, cb) {\n  this._send('REST ' + offset, cb);\n}; // Private/Internal methods\n\n\nFTP.prototype._pasv = function (cb) {\n  var self = this,\n      first = true,\n      ip,\n      port;\n\n  this._send('PASV', function reentry(err, text) {\n    if (err) return cb(err);\n    self._curReq = undefined;\n\n    if (first) {\n      var m = RE_PASV.exec(text);\n      if (!m) return cb(new Error('Unable to parse PASV server response'));\n      ip = m[1];\n      ip += '.';\n      ip += m[2];\n      ip += '.';\n      ip += m[3];\n      ip += '.';\n      ip += m[4];\n      port = parseInt(m[5], 10) * 256 + parseInt(m[6], 10);\n      first = false;\n    }\n\n    self._pasvConnect(ip, port, function (err, sock) {\n      if (err) {\n        // try the IP of the control connection if the server was somehow\n        // misconfigured and gave for example a LAN IP instead of WAN IP over\n        // the Internet\n        if (self._socket && ip !== self._socket.remoteAddress) {\n          ip = self._socket.remoteAddress;\n          return reentry();\n        } // automatically abort PASV mode\n\n\n        self._send('ABOR', function () {\n          cb(err);\n\n          self._send();\n        }, true);\n\n        return;\n      }\n\n      cb(undefined, sock);\n\n      self._send();\n    });\n  });\n};\n\nFTP.prototype._pasvConnect = function (ip, port, cb) {\n  var self = this,\n      socket = new Socket(),\n      sockerr,\n      timedOut = false,\n      timer = setTimeout(function () {\n    timedOut = true;\n    socket.destroy();\n    cb(new Error('Timed out while making data connection'));\n  }, this.options.pasvTimeout);\n  socket.setTimeout(0);\n  socket.once('connect', function () {\n    self._debug && self._debug('[connection] PASV socket connected');\n\n    if (self.options.secure === true) {\n      self.options.secureOptions.socket = socket;\n      self.options.secureOptions.session = self._socket.getSession(); //socket.removeAllListeners('error');\n\n      socket = tls.connect(self.options.secureOptions); //socket.once('error', onerror);\n\n      socket.setTimeout(0);\n    }\n\n    clearTimeout(timer);\n    self._pasvSocket = socket;\n    cb(undefined, socket);\n  });\n  socket.once('error', onerror);\n\n  function onerror(err) {\n    sockerr = err;\n  }\n\n  socket.once('end', function () {\n    clearTimeout(timer);\n  });\n  socket.once('close', function (had_err) {\n    clearTimeout(timer);\n\n    if (!self._pasvSocket && !timedOut) {\n      var errmsg = 'Unable to make data connection';\n\n      if (sockerr) {\n        errmsg += '( ' + sockerr + ')';\n        sockerr = undefined;\n      }\n\n      cb(new Error(errmsg));\n    }\n\n    self._pasvSocket = undefined;\n  });\n  socket.connect(port, ip);\n};\n\nFTP.prototype._store = function (cmd, input, zcomp, cb) {\n  var isBuffer = Buffer.isBuffer(input);\n  if (!isBuffer && input.pause !== undefined) input.pause();\n\n  if (typeof zcomp === 'function') {\n    cb = zcomp;\n    zcomp = false;\n  }\n\n  var self = this;\n\n  this._pasv(function (err, sock) {\n    if (err) return cb(err);\n\n    if (self._queue[0] && self._queue[0].cmd === 'ABOR') {\n      sock.destroy();\n      return cb();\n    }\n\n    var sockerr,\n        dest = sock;\n    sock.once('error', function (err) {\n      sockerr = err;\n    });\n\n    if (zcomp) {\n      self._send('MODE Z', function (err, text, code) {\n        if (err) {\n          sock.destroy();\n          return cb(makeError(code, 'Compression not supported'));\n        } // draft-preston-ftpext-deflate-04 says min of 8 should be supported\n\n\n        dest = zlib.createDeflate({\n          level: 8\n        });\n        dest.pipe(sock);\n        sendStore();\n      }, true);\n    } else sendStore();\n\n    function sendStore() {\n      // this callback will be executed multiple times, the first is when server\n      // replies with 150, then a final reply after the data connection closes\n      // to indicate whether the transfer was actually a success or not\n      self._send(cmd, function (err, text, code) {\n        if (sockerr || err) {\n          if (zcomp) {\n            self._send('MODE S', function () {\n              cb(sockerr || err);\n            }, true);\n          } else cb(sockerr || err);\n\n          return;\n        }\n\n        if (code === 150 || code === 125) {\n          if (isBuffer) dest.end(input);else if (typeof input === 'string') {\n            // check if input is a file path or just string data to store\n            fs.stat(input, function (err, stats) {\n              if (err) dest.end(input);else fs.createReadStream(input).pipe(dest);\n            });\n          } else {\n            input.pipe(dest);\n            input.resume();\n          }\n        } else {\n          if (zcomp) self._send('MODE S', cb, true);else cb();\n        }\n      }, true);\n    }\n  });\n};\n\nFTP.prototype._send = function (cmd, cb, promote) {\n  clearTimeout(this._keepalive);\n\n  if (cmd !== undefined) {\n    if (promote) this._queue.unshift({\n      cmd: cmd,\n      cb: cb\n    });else this._queue.push({\n      cmd: cmd,\n      cb: cb\n    });\n  }\n\n  var queueLen = this._queue.length;\n\n  if (!this._curReq && queueLen && this._socket && this._socket.readable) {\n    this._curReq = this._queue.shift();\n    if (this._curReq.cmd === 'ABOR' && this._pasvSocket) this._pasvSocket.aborting = true;\n    this._debug && this._debug('[connection] > ' + inspect(this._curReq.cmd));\n\n    this._socket.write(this._curReq.cmd + '\\r\\n');\n  } else if (!this._curReq && !queueLen && this._ending) this._reset();\n};\n\nFTP.prototype._reset = function () {\n  if (this._pasvSock && this._pasvSock.writable) this._pasvSock.end();\n  if (this._socket && this._socket.writable) this._socket.end();\n  this._socket = undefined;\n  this._pasvSock = undefined;\n  this._feat = undefined;\n  this._curReq = undefined;\n  this._secstate = undefined;\n  clearTimeout(this._keepalive);\n  this._keepalive = undefined;\n  this._queue = [];\n  this._ending = false;\n  this._parser = undefined;\n  this.options.host = this.options.port = this.options.user = this.options.password = this.options.secure = this.options.connTimeout = this.options.pasvTimeout = this.options.keepalive = this._debug = undefined;\n  this.connected = false;\n}; // Utility functions\n\n\nfunction makeError(code, text) {\n  var err = new Error(text);\n  err.code = code;\n  return err;\n}","map":{"version":3,"names":["fs","require","tls","zlib","Socket","EventEmitter","inherits","inspect","Parser","XRegExp","REX_TIMEVAL","cache","RE_PASV","RE_EOL","RE_WD","RE_SYST","RETVAL","PRELIM","OK","WAITING","ERR_TEMP","ERR_PERM","bytesNOOP","Buffer","FTP","module","exports","_socket","undefined","_pasvSock","_feat","_curReq","_queue","_secstate","_debug","_keepalive","_ending","_parser","options","host","port","user","password","secure","secureOptions","connTimeout","pasvTimeout","aliveTimeout","connected","prototype","connect","self","keepalive","debug","socket","setTimeout","setKeepAlive","on","code","text","retval","cb","makeError","emit","_send","noopreq","k","onconnect","once","cmd","clearTimeout","donoop","writable","length","write","timer","reentry","err","end","parseFeat","substr","removeAllListeners","_decoder","session","setEncoding","ondata","onend","onerror","chunk","toString","ondone","had_err","hasReset","_reset","Error","destroy","ascii","binary","abort","immediate","cwd","path","promote","m","exec","delete","site","status","rename","from","to","logout","listSafe","zcomp","pwd","origpath","list","_pasv","sock","sockerr","done","replies","entries","buffer","source","createInflate","pipe","aborting","final","split","pop","parsed","i","len","parsedVal","parseListEntry","push","sendList","get","started","lastreply","_emit","ev","arg1","apply","Array","slice","call","arguments","pause","sendRetr","resume","put","input","_store","append","cwderr","cdup","mkdir","recursive","owd","abs","dirs","dirslen","searching","nextDir","substring","rmdir","idx","deleteNextEntry","name","entry","subpath","type","system","size","parseInt","lastMod","date","val","ret","Date","year","month","hour","minute","second","restart","offset","first","ip","_pasvConnect","remoteAddress","timedOut","getSession","_pasvSocket","errmsg","isBuffer","dest","createDeflate","level","sendStore","stat","stats","createReadStream","unshift","queueLen","readable","shift"],"sources":["C:/Users/bryan/Desktop/myrepresentatives/frontend/node_modules/ftp/lib/connection.js"],"sourcesContent":["var fs = require('fs'),\n    tls = require('tls'),\n    zlib = require('zlib'),\n    Socket = require('net').Socket,\n    EventEmitter = require('events').EventEmitter,\n    inherits = require('util').inherits,\n    inspect = require('util').inspect;\n\nvar Parser = require('./parser');\nvar XRegExp = require('xregexp').XRegExp;\n\nvar REX_TIMEVAL = XRegExp.cache('^(?<year>\\\\d{4})(?<month>\\\\d{2})(?<date>\\\\d{2})(?<hour>\\\\d{2})(?<minute>\\\\d{2})(?<second>\\\\d+)(?:.\\\\d+)?$'),\n    RE_PASV = /([\\d]+),([\\d]+),([\\d]+),([\\d]+),([-\\d]+),([-\\d]+)/,\n    RE_EOL = /\\r?\\n/g,\n    RE_WD = /\"(.+)\"(?: |$)/,\n    RE_SYST = /^([^ ]+)(?: |$)/;\n\nvar /*TYPE = {\n      SYNTAX: 0,\n      INFO: 1,\n      SOCKETS: 2,\n      AUTH: 3,\n      UNSPEC: 4,\n      FILESYS: 5\n    },*/\n    RETVAL = {\n      PRELIM: 1,\n      OK: 2,\n      WAITING: 3,\n      ERR_TEMP: 4,\n      ERR_PERM: 5\n    },\n    /*ERRORS = {\n      421: 'Service not available, closing control connection',\n      425: 'Can\\'t open data connection',\n      426: 'Connection closed; transfer aborted',\n      450: 'Requested file action not taken / File unavailable (e.g., file busy)',\n      451: 'Requested action aborted: local error in processing',\n      452: 'Requested action not taken / Insufficient storage space in system',\n      500: 'Syntax error / Command unrecognized',\n      501: 'Syntax error in parameters or arguments',\n      502: 'Command not implemented',\n      503: 'Bad sequence of commands',\n      504: 'Command not implemented for that parameter',\n      530: 'Not logged in',\n      532: 'Need account for storing files',\n      550: 'Requested action not taken / File unavailable (e.g., file not found, no access)',\n      551: 'Requested action aborted: page type unknown',\n      552: 'Requested file action aborted / Exceeded storage allocation (for current directory or dataset)',\n      553: 'Requested action not taken / File name not allowed'\n    },*/\n    bytesNOOP = new Buffer('NOOP\\r\\n');\n\nvar FTP = module.exports = function() {\n  if (!(this instanceof FTP))\n    return new FTP();\n\n  this._socket = undefined;\n  this._pasvSock = undefined;\n  this._feat = undefined;\n  this._curReq = undefined;\n  this._queue = [];\n  this._secstate = undefined;\n  this._debug = undefined;\n  this._keepalive = undefined;\n  this._ending = false;\n  this._parser = undefined;\n  this.options = {\n    host: undefined,\n    port: undefined,\n    user: undefined,\n    password: undefined,\n    secure: false,\n    secureOptions: undefined,\n    connTimeout: undefined,\n    pasvTimeout: undefined,\n    aliveTimeout: undefined\n  };\n  this.connected = false;\n};\ninherits(FTP, EventEmitter);\n\nFTP.prototype.connect = function(options) {\n  var self = this;\n  if (typeof options !== 'object')\n    options = {};\n  this.connected = false;\n  this.options.host = options.host || 'localhost';\n  this.options.port = options.port || 21;\n  this.options.user = options.user || 'anonymous';\n  this.options.password = options.password || 'anonymous@';\n  this.options.secure = options.secure || false;\n  this.options.secureOptions = options.secureOptions;\n  this.options.connTimeout = options.connTimeout || 10000;\n  this.options.pasvTimeout = options.pasvTimeout || 10000;\n  this.options.aliveTimeout = options.keepalive || 10000;\n\n  if (typeof options.debug === 'function')\n    this._debug = options.debug;\n\n  var secureOptions,\n      debug = this._debug,\n      socket = new Socket();\n\n  socket.setTimeout(0);\n  socket.setKeepAlive(true);\n\n  this._parser = new Parser({ debug: debug });\n  this._parser.on('response', function(code, text) {\n    var retval = code / 100 >> 0;\n    if (retval === RETVAL.ERR_TEMP || retval === RETVAL.ERR_PERM) {\n      if (self._curReq)\n        self._curReq.cb(makeError(code, text), undefined, code);\n      else\n        self.emit('error', makeError(code, text));\n    } else if (self._curReq)\n      self._curReq.cb(undefined, text, code);\n\n    // a hack to signal we're waiting for a PASV data connection to complete\n    // first before executing any more queued requests ...\n    //\n    // also: don't forget our current request if we're expecting another\n    // terminating response ....\n    if (self._curReq && retval !== RETVAL.PRELIM) {\n      self._curReq = undefined;\n      self._send();\n    }\n\n    noopreq.cb();\n  });\n\n  if (this.options.secure) {\n    secureOptions = {};\n    secureOptions.host = this.options.host;\n    for (var k in this.options.secureOptions)\n      secureOptions[k] = this.options.secureOptions[k];\n    secureOptions.socket = socket;\n    this.options.secureOptions = secureOptions;\n  }\n\n  if (this.options.secure === 'implicit')\n    this._socket = tls.connect(secureOptions, onconnect);\n  else {\n    socket.once('connect', onconnect);\n    this._socket = socket;\n  }\n\n  var noopreq = {\n        cmd: 'NOOP',\n        cb: function() {\n          clearTimeout(self._keepalive);\n          self._keepalive = setTimeout(donoop, self.options.aliveTimeout);\n        }\n      };\n\n  function donoop() {\n    if (!self._socket || !self._socket.writable)\n      clearTimeout(self._keepalive);\n    else if (!self._curReq && self._queue.length === 0) {\n      self._curReq = noopreq;\n      debug&&debug('[connection] > NOOP');\n      self._socket.write(bytesNOOP);\n    } else\n      noopreq.cb();\n  }\n\n  function onconnect() {\n    clearTimeout(timer);\n    clearTimeout(self._keepalive);\n    self.connected = true;\n    self._socket = socket; // re-assign for implicit secure connections\n\n    var cmd;\n\n    if (self._secstate) {\n      if (self._secstate === 'upgraded-tls' && self.options.secure === true) {\n        cmd = 'PBSZ';\n        self._send('PBSZ 0', reentry, true);\n      } else {\n        cmd = 'USER';\n        self._send('USER ' + self.options.user, reentry, true);\n      }\n    } else {\n      self._curReq = {\n        cmd: '',\n        cb: reentry\n      };\n    }\n\n    function reentry(err, text, code) {\n      if (err && (!cmd || cmd === 'USER' || cmd === 'PASS' || cmd === 'TYPE')) {\n        self.emit('error', err);\n        return self._socket && self._socket.end();\n      }\n      if ((cmd === 'AUTH TLS' && code !== 234 && self.options.secure !== true)\n          || (cmd === 'AUTH SSL' && code !== 334)\n          || (cmd === 'PBSZ' && code !== 200)\n          || (cmd === 'PROT' && code !== 200)) {\n        self.emit('error', makeError(code, 'Unable to secure connection(s)'));\n        return self._socket && self._socket.end();\n      }\n\n      if (!cmd) {\n        // sometimes the initial greeting can contain useful information\n        // about authorized use, other limits, etc.\n        self.emit('greeting', text);\n\n        if (self.options.secure && self.options.secure !== 'implicit') {\n          cmd = 'AUTH TLS';\n          self._send(cmd, reentry, true);\n        } else {\n          cmd = 'USER';\n          self._send('USER ' + self.options.user, reentry, true);\n        }\n      } else if (cmd === 'USER') {\n        if (code !== 230) {\n          // password required\n          if (!self.options.password) {\n            self.emit('error', makeError(code, 'Password required'));\n            return self._socket && self._socket.end();\n          }\n          cmd = 'PASS';\n          self._send('PASS ' + self.options.password, reentry, true);\n        } else {\n          // no password required\n          cmd = 'PASS';\n          reentry(undefined, text, code);\n        }\n      } else if (cmd === 'PASS') {\n        cmd = 'FEAT';\n        self._send(cmd, reentry, true);\n      } else if (cmd === 'FEAT') {\n        if (!err)\n          self._feat = Parser.parseFeat(text);\n        cmd = 'TYPE';\n        self._send('TYPE I', reentry, true);\n      } else if (cmd === 'TYPE')\n        self.emit('ready');\n      else if (cmd === 'PBSZ') {\n        cmd = 'PROT';\n        self._send('PROT P', reentry, true);\n      } else if (cmd === 'PROT') {\n        cmd = 'USER';\n        self._send('USER ' + self.options.user, reentry, true);\n      } else if (cmd.substr(0, 4) === 'AUTH') {\n        if (cmd === 'AUTH TLS' && code !== 234) {\n          cmd = 'AUTH SSL';\n          return self._send(cmd, reentry, true);\n        } else if (cmd === 'AUTH TLS')\n          self._secstate = 'upgraded-tls';\n        else if (cmd === 'AUTH SSL')\n          self._secstate = 'upgraded-ssl';\n        socket.removeAllListeners('data');\n        socket.removeAllListeners('error');\n        socket._decoder = null;\n        self._curReq = null; // prevent queue from being processed during\n                             // TLS/SSL negotiation\n        secureOptions.socket = self._socket;\n        secureOptions.session = undefined;\n        socket = tls.connect(secureOptions, onconnect);\n        socket.setEncoding('binary');\n        socket.on('data', ondata);\n        socket.once('end', onend);\n        socket.on('error', onerror);\n      }\n    }\n  }\n\n  socket.on('data', ondata);\n  function ondata(chunk) {\n    debug&&debug('[connection] < ' + inspect(chunk.toString('binary')));\n    if (self._parser)\n      self._parser.write(chunk);\n  }\n\n  socket.on('error', onerror);\n  function onerror(err) {\n    clearTimeout(timer);\n    clearTimeout(self._keepalive);\n    self.emit('error', err);\n  }\n\n  socket.once('end', onend);\n  function onend() {\n    ondone();\n    self.emit('end');\n  }\n\n  socket.once('close', function(had_err) {\n    ondone();\n    self.emit('close', had_err);\n  });\n\n  var hasReset = false;\n  function ondone() {\n    if (!hasReset) {\n      hasReset = true;\n      clearTimeout(timer);\n      self._reset();\n    }\n  }\n\n  var timer = setTimeout(function() {\n    self.emit('error', new Error('Timeout while connecting to server'));\n    self._socket && self._socket.destroy();\n    self._reset();\n  }, this.options.connTimeout);\n\n  this._socket.connect(this.options.port, this.options.host);\n};\n\nFTP.prototype.end = function() {\n  if (this._queue.length)\n    this._ending = true;\n  else\n    this._reset();\n};\n\nFTP.prototype.destroy = function() {\n  this._reset();\n};\n\n// \"Standard\" (RFC 959) commands\nFTP.prototype.ascii = function(cb) {\n  return this._send('TYPE A', cb);\n};\n\nFTP.prototype.binary = function(cb) {\n  return this._send('TYPE I', cb);\n};\n\nFTP.prototype.abort = function(immediate, cb) {\n  if (typeof immediate === 'function') {\n    cb = immediate;\n    immediate = true;\n  }\n  if (immediate)\n    this._send('ABOR', cb, true);\n  else\n    this._send('ABOR', cb);\n};\n\nFTP.prototype.cwd = function(path, cb, promote) {\n  this._send('CWD ' + path, function(err, text, code) {\n    if (err)\n      return cb(err);\n    var m = RE_WD.exec(text);\n    cb(undefined, m ? m[1] : undefined);\n  }, promote);\n};\n\nFTP.prototype.delete = function(path, cb) {\n  this._send('DELE ' + path, cb);\n};\n\nFTP.prototype.site = function(cmd, cb) {\n  this._send('SITE ' + cmd, cb);\n};\n\nFTP.prototype.status = function(cb) {\n  this._send('STAT', cb);\n};\n\nFTP.prototype.rename = function(from, to, cb) {\n  var self = this;\n  this._send('RNFR ' + from, function(err) {\n    if (err)\n      return cb(err);\n\n    self._send('RNTO ' + to, cb, true);\n  });\n};\n\nFTP.prototype.logout = function(cb) {\n  this._send('QUIT', cb);\n};\n\nFTP.prototype.listSafe = function(path, zcomp, cb) {\n  if (typeof path === 'string') {\n    var self = this;\n    // store current path\n    this.pwd(function(err, origpath) {\n      if (err) return cb(err);\n      // change to destination path\n      self.cwd(path, function(err) {\n        if (err) return cb(err);\n        // get dir listing\n        self.list(zcomp || false, function(err, list) {\n          // change back to original path\n          if (err) return self.cwd(origpath, cb);\n          self.cwd(origpath, function(err) {\n            if (err) return cb(err);\n            cb(err, list);\n          });\n        });\n      });\n    });\n  } else\n    this.list(path, zcomp, cb);\n};\n\nFTP.prototype.list = function(path, zcomp, cb) {\n  var self = this, cmd;\n\n  if (typeof path === 'function') {\n    // list(function() {})\n    cb = path;\n    path = undefined;\n    cmd = 'LIST';\n    zcomp = false;\n  } else if (typeof path === 'boolean') {\n    // list(true, function() {})\n    cb = zcomp;\n    zcomp = path;\n    path = undefined;\n    cmd = 'LIST';\n  } else if (typeof zcomp === 'function') {\n    // list('/foo', function() {})\n    cb = zcomp;\n    cmd = 'LIST ' + path;\n    zcomp = false;\n  } else\n    cmd = 'LIST ' + path;\n\n  this._pasv(function(err, sock) {\n    if (err)\n      return cb(err);\n\n    if (self._queue[0] && self._queue[0].cmd === 'ABOR') {\n      sock.destroy();\n      return cb();\n    }\n\n    var sockerr, done = false, replies = 0, entries, buffer = '', source = sock;\n\n    if (zcomp) {\n      source = zlib.createInflate();\n      sock.pipe(source);\n    }\n\n    source.on('data', function(chunk) { buffer += chunk.toString('binary'); });\n    source.once('error', function(err) {\n      if (!sock.aborting)\n        sockerr = err;\n    });\n    source.once('end', ondone);\n    source.once('close', ondone);\n\n    function ondone() {\n      done = true;\n      final();\n    }\n    function final() {\n      if (done && replies === 2) {\n        replies = 3;\n        if (sockerr)\n          return cb(new Error('Unexpected data connection error: ' + sockerr));\n        if (sock.aborting)\n          return cb();\n\n        // process received data\n        entries = buffer.split(RE_EOL);\n        entries.pop(); // ending EOL\n        var parsed = [];\n        for (var i = 0, len = entries.length; i < len; ++i) {\n          var parsedVal = Parser.parseListEntry(entries[i]);\n          if (parsedVal !== null)\n            parsed.push(parsedVal);\n        }\n\n        if (zcomp) {\n          self._send('MODE S', function() {\n            cb(undefined, parsed);\n          }, true);\n        } else\n          cb(undefined, parsed);\n      }\n    }\n\n    if (zcomp) {\n      self._send('MODE Z', function(err, text, code) {\n        if (err) {\n          sock.destroy();\n          return cb(makeError(code, 'Compression not supported'));\n        }\n        sendList();\n      }, true);\n    } else\n      sendList();\n\n    function sendList() {\n      // this callback will be executed multiple times, the first is when server\n      // replies with 150 and then a final reply to indicate whether the\n      // transfer was actually a success or not\n      self._send(cmd, function(err, text, code) {\n        if (err) {\n          sock.destroy();\n          if (zcomp) {\n            self._send('MODE S', function() {\n              cb(err);\n            }, true);\n          } else\n            cb(err);\n          return;\n        }\n\n        // some servers may not open a data connection for empty directories\n        if (++replies === 1 && code === 226) {\n          replies = 2;\n          sock.destroy();\n          final();\n        } else if (replies === 2)\n          final();\n      }, true);\n    }\n  });\n};\n\nFTP.prototype.get = function(path, zcomp, cb) {\n  var self = this;\n  if (typeof zcomp === 'function') {\n    cb = zcomp;\n    zcomp = false;\n  }\n\n  this._pasv(function(err, sock) {\n    if (err)\n      return cb(err);\n\n    if (self._queue[0] && self._queue[0].cmd === 'ABOR') {\n      sock.destroy();\n      return cb();\n    }\n\n    // modify behavior of socket events so that we can emit 'error' once for\n    // either a TCP-level error OR an FTP-level error response that we get when\n    // the socket is closed (e.g. the server ran out of space).\n    var sockerr, started = false, lastreply = false, done = false,\n        source = sock;\n\n    if (zcomp) {\n      source = zlib.createInflate();\n      sock.pipe(source);\n      sock._emit = sock.emit;\n      sock.emit = function(ev, arg1) {\n        if (ev === 'error') {\n          if (!sockerr)\n            sockerr = arg1;\n          return;\n        }\n        sock._emit.apply(sock, Array.prototype.slice.call(arguments));\n      };\n    }\n\n    source._emit = source.emit;\n    source.emit = function(ev, arg1) {\n      if (ev === 'error') {\n        if (!sockerr)\n          sockerr = arg1;\n        return;\n      } else if (ev === 'end' || ev === 'close') {\n        if (!done) {\n          done = true;\n          ondone();\n        }\n        return;\n      }\n      source._emit.apply(source, Array.prototype.slice.call(arguments));\n    };\n\n    function ondone() {\n      if (done && lastreply) {\n        self._send('MODE S', function() {\n          source._emit('end');\n          source._emit('close');\n        }, true);\n      }\n    }\n\n    sock.pause();\n\n    if (zcomp) {\n      self._send('MODE Z', function(err, text, code) {\n        if (err) {\n          sock.destroy();\n          return cb(makeError(code, 'Compression not supported'));\n        }\n        sendRetr();\n      }, true);\n    } else\n      sendRetr();\n\n    function sendRetr() {\n      // this callback will be executed multiple times, the first is when server\n      // replies with 150, then a final reply after the data connection closes\n      // to indicate whether the transfer was actually a success or not\n      self._send('RETR ' + path, function(err, text, code) {\n        if (sockerr || err) {\n          sock.destroy();\n          if (!started) {\n            if (zcomp) {\n              self._send('MODE S', function() {\n                cb(sockerr || err);\n              }, true);\n            } else\n              cb(sockerr || err);\n          } else {\n            source._emit('error', sockerr || err);\n            source._emit('close', true);\n          }\n          return;\n        }\n        // server returns 125 when data connection is already open; we treat it\n        // just like a 150\n        if (code === 150 || code === 125) {\n          started = true;\n          cb(undefined, source);\n          sock.resume();\n        } else {\n          lastreply = true;\n          ondone();\n        }\n      }, true);\n    }\n  });\n};\n\nFTP.prototype.put = function(input, path, zcomp, cb) {\n  this._store('STOR ' + path, input, zcomp, cb);\n};\n\nFTP.prototype.append = function(input, path, zcomp, cb) {\n  this._store('APPE ' + path, input, zcomp, cb);\n};\n\nFTP.prototype.pwd = function(cb) { // PWD is optional\n  var self = this;\n  this._send('PWD', function(err, text, code) {\n    if (code === 502) {\n      return self.cwd('.', function(cwderr, cwd) {\n        if (cwderr)\n          return cb(cwderr);\n        if (cwd === undefined)\n          cb(err);\n        else\n          cb(undefined, cwd);\n      }, true);\n    } else if (err)\n      return cb(err);\n    cb(undefined, RE_WD.exec(text)[1]);\n  });\n};\n\nFTP.prototype.cdup = function(cb) { // CDUP is optional\n  var self = this;\n  this._send('CDUP', function(err, text, code) {\n    if (code === 502)\n      self.cwd('..', cb, true);\n    else\n      cb(err);\n  });\n};\n\nFTP.prototype.mkdir = function(path, recursive, cb) { // MKD is optional\n  if (typeof recursive === 'function') {\n    cb = recursive;\n    recursive = false;\n  }\n  if (!recursive)\n    this._send('MKD ' + path, cb);\n  else {\n    var self = this, owd, abs, dirs, dirslen, i = -1, searching = true;\n\n    abs = (path[0] === '/');\n\n    var nextDir = function() {\n      if (++i === dirslen) {\n        // return to original working directory\n        return self._send('CWD ' + owd, cb, true);\n      }\n      if (searching) {\n        self._send('CWD ' + dirs[i], function(err, text, code) {\n          if (code === 550) {\n            searching = false;\n            --i;\n          } else if (err) {\n            // return to original working directory\n            return self._send('CWD ' + owd, function() {\n              cb(err);\n            }, true);\n          }\n          nextDir();\n        }, true);\n      } else {\n        self._send('MKD ' + dirs[i], function(err, text, code) {\n          if (err) {\n            // return to original working directory\n            return self._send('CWD ' + owd, function() {\n              cb(err);\n            }, true);\n          }\n          self._send('CWD ' + dirs[i], nextDir, true);\n        }, true);\n      }\n    };\n    this.pwd(function(err, cwd) {\n      if (err)\n        return cb(err);\n      owd = cwd;\n      if (abs)\n        path = path.substr(1);\n      if (path[path.length - 1] === '/')\n        path = path.substring(0, path.length - 1);\n      dirs = path.split('/');\n      dirslen = dirs.length;\n      if (abs)\n        self._send('CWD /', function(err) {\n          if (err)\n            return cb(err);\n          nextDir();\n        }, true);\n      else\n        nextDir();\n    });\n  }\n};\n\nFTP.prototype.rmdir = function(path, recursive, cb) { // RMD is optional\n  if (typeof recursive === 'function') {\n    cb = recursive;\n    recursive = false;\n  }\n  if (!recursive) {\n    return this._send('RMD ' + path, cb);\n  }\n  \n  var self = this;\n  this.list(path, function(err, list) {\n    if (err) return cb(err);\n    var idx = 0;\n    \n    // this function will be called once per listing entry\n    var deleteNextEntry;\n    deleteNextEntry = function(err) {\n      if (err) return cb(err);\n      if (idx >= list.length) {\n        if (list[0] && list[0].name === path) {\n          return cb(null);\n        } else {\n          return self.rmdir(path, cb);\n        }\n      }\n      \n      var entry = list[idx++];\n      \n      // get the path to the file\n      var subpath = null;\n      if (entry.name[0] === '/') {\n        // this will be the case when you call deleteRecursively() and pass\n        // the path to a plain file\n        subpath = entry.name;\n      } else {\n        if (path[path.length - 1] == '/') {\n          subpath = path + entry.name;\n        } else {\n          subpath = path + '/' + entry.name\n        }\n      }\n      \n      // delete the entry (recursively) according to its type\n      if (entry.type === 'd') {\n        if (entry.name === \".\" || entry.name === \"..\") {\n          return deleteNextEntry();\n        }\n        self.rmdir(subpath, true, deleteNextEntry);\n      } else {\n        self.delete(subpath, deleteNextEntry);\n      }\n    }\n    deleteNextEntry();\n  });\n};\n\nFTP.prototype.system = function(cb) { // SYST is optional\n  this._send('SYST', function(err, text) {\n    if (err)\n      return cb(err);\n    cb(undefined, RE_SYST.exec(text)[1]);\n  });\n};\n\n// \"Extended\" (RFC 3659) commands\nFTP.prototype.size = function(path, cb) {\n  var self = this;\n  this._send('SIZE ' + path, function(err, text, code) {\n    if (code === 502) {\n      // Note: this may cause a problem as list() is _appended_ to the queue\n      return self.list(path, function(err, list) {\n        if (err)\n          return cb(err);\n        if (list.length === 1)\n          cb(undefined, list[0].size);\n        else {\n          // path could have been a directory and we got a listing of its\n          // contents, but here we echo the behavior of the real SIZE and\n          // return 'File not found' for directories\n          cb(new Error('File not found'));\n        }\n      }, true);\n    } else if (err)\n      return cb(err);\n    cb(undefined, parseInt(text, 10));\n  });\n};\n\nFTP.prototype.lastMod = function(path, cb) {\n  var self = this;\n  this._send('MDTM ' + path, function(err, text, code) {\n    if (code === 502) {\n      return self.list(path, function(err, list) {\n        if (err)\n          return cb(err);\n        if (list.length === 1)\n          cb(undefined, list[0].date);\n        else\n          cb(new Error('File not found'));\n      }, true);\n    } else if (err)\n      return cb(err);\n    var val = XRegExp.exec(text, REX_TIMEVAL), ret;\n    if (!val)\n      return cb(new Error('Invalid date/time format from server'));\n    ret = new Date(val.year + '-' + val.month + '-' + val.date + 'T' + val.hour\n                   + ':' + val.minute + ':' + val.second);\n    cb(undefined, ret);\n  });\n};\n\nFTP.prototype.restart = function(offset, cb) {\n  this._send('REST ' + offset, cb);\n};\n\n\n\n// Private/Internal methods\nFTP.prototype._pasv = function(cb) {\n  var self = this, first = true, ip, port;\n  this._send('PASV', function reentry(err, text) {\n    if (err)\n      return cb(err);\n\n    self._curReq = undefined;\n\n    if (first) {\n      var m = RE_PASV.exec(text);\n      if (!m)\n        return cb(new Error('Unable to parse PASV server response'));\n      ip = m[1];\n      ip += '.';\n      ip += m[2];\n      ip += '.';\n      ip += m[3];\n      ip += '.';\n      ip += m[4];\n      port = (parseInt(m[5], 10) * 256) + parseInt(m[6], 10);\n\n      first = false;\n    }\n    self._pasvConnect(ip, port, function(err, sock) {\n      if (err) {\n        // try the IP of the control connection if the server was somehow\n        // misconfigured and gave for example a LAN IP instead of WAN IP over\n        // the Internet\n        if (self._socket && ip !== self._socket.remoteAddress) {\n          ip = self._socket.remoteAddress;\n          return reentry();\n        }\n\n        // automatically abort PASV mode\n        self._send('ABOR', function() {\n          cb(err);\n          self._send();\n        }, true);\n\n        return;\n      }\n      cb(undefined, sock);\n      self._send();\n    });\n  });\n};\n\nFTP.prototype._pasvConnect = function(ip, port, cb) {\n  var self = this,\n      socket = new Socket(),\n      sockerr,\n      timedOut = false,\n      timer = setTimeout(function() {\n        timedOut = true;\n        socket.destroy();\n        cb(new Error('Timed out while making data connection'));\n      }, this.options.pasvTimeout);\n\n  socket.setTimeout(0);\n\n  socket.once('connect', function() {\n    self._debug&&self._debug('[connection] PASV socket connected');\n    if (self.options.secure === true) {\n      self.options.secureOptions.socket = socket;\n      self.options.secureOptions.session = self._socket.getSession();\n      //socket.removeAllListeners('error');\n      socket = tls.connect(self.options.secureOptions);\n      //socket.once('error', onerror);\n      socket.setTimeout(0);\n    }\n    clearTimeout(timer);\n    self._pasvSocket = socket;\n    cb(undefined, socket);\n  });\n  socket.once('error', onerror);\n  function onerror(err) {\n    sockerr = err;\n  }\n  socket.once('end', function() {\n    clearTimeout(timer);\n  });\n  socket.once('close', function(had_err) {\n    clearTimeout(timer);\n    if (!self._pasvSocket && !timedOut) {\n      var errmsg = 'Unable to make data connection';\n      if (sockerr) {\n        errmsg += '( ' + sockerr + ')';\n        sockerr = undefined;\n      }\n      cb(new Error(errmsg));\n    }\n    self._pasvSocket = undefined;\n  });\n\n  socket.connect(port, ip);\n};\n\nFTP.prototype._store = function(cmd, input, zcomp, cb) {\n  var isBuffer = Buffer.isBuffer(input);\n\n  if (!isBuffer && input.pause !== undefined)\n    input.pause();\n\n  if (typeof zcomp === 'function') {\n    cb = zcomp;\n    zcomp = false;\n  }\n\n  var self = this;\n  this._pasv(function(err, sock) {\n    if (err)\n      return cb(err);\n\n    if (self._queue[0] && self._queue[0].cmd === 'ABOR') {\n      sock.destroy();\n      return cb();\n    }\n\n    var sockerr, dest = sock;\n    sock.once('error', function(err) {\n      sockerr = err;\n    });\n\n    if (zcomp) {\n      self._send('MODE Z', function(err, text, code) {\n        if (err) {\n          sock.destroy();\n          return cb(makeError(code, 'Compression not supported'));\n        }\n        // draft-preston-ftpext-deflate-04 says min of 8 should be supported\n        dest = zlib.createDeflate({ level: 8 });\n        dest.pipe(sock);\n        sendStore();\n      }, true);\n    } else\n      sendStore();\n\n    function sendStore() {\n      // this callback will be executed multiple times, the first is when server\n      // replies with 150, then a final reply after the data connection closes\n      // to indicate whether the transfer was actually a success or not\n      self._send(cmd, function(err, text, code) {\n        if (sockerr || err) {\n          if (zcomp) {\n            self._send('MODE S', function() {\n              cb(sockerr || err);\n            }, true);\n          } else\n            cb(sockerr || err);\n          return;\n        }\n\n        if (code === 150 || code === 125) {\n          if (isBuffer)\n            dest.end(input);\n          else if (typeof input === 'string') {\n            // check if input is a file path or just string data to store\n            fs.stat(input, function(err, stats) {\n              if (err)\n                dest.end(input);\n              else\n                fs.createReadStream(input).pipe(dest);\n            });\n          } else {\n            input.pipe(dest);\n            input.resume();\n          }\n        } else {\n          if (zcomp)\n            self._send('MODE S', cb, true);\n          else\n            cb();\n        }\n      }, true);\n    }\n  });\n};\n\nFTP.prototype._send = function(cmd, cb, promote) {\n  clearTimeout(this._keepalive);\n  if (cmd !== undefined) {\n    if (promote)\n      this._queue.unshift({ cmd: cmd, cb: cb });\n    else\n      this._queue.push({ cmd: cmd, cb: cb });\n  }\n  var queueLen = this._queue.length;\n  if (!this._curReq && queueLen && this._socket && this._socket.readable) {\n    this._curReq = this._queue.shift();\n    if (this._curReq.cmd === 'ABOR' && this._pasvSocket)\n      this._pasvSocket.aborting = true;\n    this._debug&&this._debug('[connection] > ' + inspect(this._curReq.cmd));\n    this._socket.write(this._curReq.cmd + '\\r\\n');\n  } else if (!this._curReq && !queueLen && this._ending)\n    this._reset();\n};\n\nFTP.prototype._reset = function() {\n  if (this._pasvSock && this._pasvSock.writable)\n    this._pasvSock.end();\n  if (this._socket && this._socket.writable)\n    this._socket.end();\n  this._socket = undefined;\n  this._pasvSock = undefined;\n  this._feat = undefined;\n  this._curReq = undefined;\n  this._secstate = undefined;\n  clearTimeout(this._keepalive);\n  this._keepalive = undefined;\n  this._queue = [];\n  this._ending = false;\n  this._parser = undefined;\n  this.options.host = this.options.port = this.options.user\n                    = this.options.password = this.options.secure\n                    = this.options.connTimeout = this.options.pasvTimeout\n                    = this.options.keepalive = this._debug = undefined;\n  this.connected = false;\n};\n\n// Utility functions\nfunction makeError(code, text) {\n  var err = new Error(text);\n  err.code = code;\n  return err;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}