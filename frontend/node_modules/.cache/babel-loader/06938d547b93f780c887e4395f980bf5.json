{"ast":null,"code":"/**\n * Data format:\n *\n\n--FormStreamBoundary1349886663601\\r\\n\nContent-Disposition: form-data; name=\"foo\"\\r\\n\n\\r\\n\n<FIELD-CONTENT>\\r\\n\n--FormStreamBoundary1349886663601\\r\\n\nContent-Disposition: form-data; name=\"file\"; filename=\"formstream.test.js\"\\r\\n\nContent-Type: application/javascript\\r\\n\n\\r\\n\n<FILE-CONTENT>\\r\\n\n--FormStreamBoundary1349886663601\\r\\n\nContent-Disposition: form-data; name=\"pic\"; filename=\"fawave.png\"\\r\\n\nContent-Type: image/png\\r\\n\n\\r\\n\n<IMAGE-CONTENT>\\r\\n\n--FormStreamBoundary1349886663601--\n\n *\n */\n'use strict';\n\nvar Stream = require('stream');\n\nvar parseStream = require('pause-stream');\n\nvar util = require('util');\n\nvar mime = require('mime');\n\nvar path = require('path');\n\nvar fs = require('fs');\n\nvar destroy = require('destroy');\n\nvar PADDING = '--';\nvar NEW_LINE = '\\r\\n';\nvar NEW_LINE_BUFFER = new Buffer(NEW_LINE);\n\nfunction FormStream() {\n  if (!(this instanceof FormStream)) {\n    return new FormStream();\n  }\n\n  FormStream.super_.call(this);\n  this._boundary = this._generateBoundary();\n  this._streams = [];\n  this._buffers = [];\n  this._endData = new Buffer(PADDING + this._boundary + PADDING + NEW_LINE);\n  this._contentLength = 0;\n  this._isAllStreamSizeKnown = true;\n  this._knownStreamSize = 0;\n}\n\nutil.inherits(FormStream, Stream);\nmodule.exports = FormStream;\n\nFormStream.prototype._generateBoundary = function () {\n  // https://github.com/felixge/node-form-data/blob/master/lib/form_data.js#L162\n  // This generates a 50 character boundary similar to those used by Firefox.\n  // They are optimized for boyer-moore parsing.\n  var boundary = '--------------------------';\n\n  for (var i = 0; i < 24; i++) {\n    boundary += Math.floor(Math.random() * 10).toString(16);\n  }\n\n  return boundary;\n};\n\nFormStream.prototype.setTotalStreamSize = function (size) {\n  // this method should not make any sense if the length of each stream is known.\n  if (this._isAllStreamSizeKnown) {\n    return this;\n  }\n\n  size = size || 0;\n\n  for (var i = 0; i < this._streams.length; i++) {\n    size += this._streams[i][0].length;\n    size += NEW_LINE_BUFFER.length; // stream field end pedding size\n  }\n\n  this._knownStreamSize = size;\n  this._isAllStreamSizeKnown = true;\n  return this;\n};\n\nFormStream.prototype.headers = function (options) {\n  var headers = {\n    'Content-Type': 'multipart/form-data; boundary=' + this._boundary\n  }; // calculate total stream size\n\n  this._contentLength += this._knownStreamSize; // calculate length of end padding\n\n  this._contentLength += this._endData.length;\n\n  if (this._isAllStreamSizeKnown) {\n    headers['Content-Length'] = String(this._contentLength);\n  }\n\n  if (options) {\n    for (var k in options) {\n      headers[k] = options[k];\n    }\n  }\n\n  return headers;\n};\n\nFormStream.prototype.file = function (name, filepath, filename, filesize) {\n  var mimeType = mime.getType(filepath);\n\n  if (typeof filename === 'number' && !filesize) {\n    filesize = filename;\n    filename = path.basename(filepath);\n  } else if (!filename) {\n    filename = path.basename(filepath);\n  }\n\n  var stream = fs.createReadStream(filepath);\n  return this.stream(name, stream, filename, mimeType, filesize);\n};\n/**\n * Add a form field\n * @param  {String} name field name\n * @param  {String|Buffer} value field value\n * @return {this}\n */\n\n\nFormStream.prototype.field = function (name, value) {\n  if (!Buffer.isBuffer(value)) {\n    // field(String, Number)\n    // https://github.com/qiniu/nodejs-sdk/issues/123\n    if (typeof value === 'number') {\n      value = String(value);\n    }\n\n    value = new Buffer(value);\n  }\n\n  return this.buffer(name, value);\n};\n\nFormStream.prototype.stream = function (name, stream, filename, mimeType, size) {\n  if (typeof mimeType === 'number' && !size) {\n    size = mimeType;\n    mimeType = mime.getType(filename);\n  } else if (!mimeType) {\n    mimeType = mime.getType(filename);\n  }\n\n  stream.once('error', this.emit.bind(this, 'error')); // if form stream destroy, also destroy the source stream\n\n  this.once('destroy', function () {\n    destroy(stream);\n  });\n\n  var leading = this._leading({\n    name: name,\n    filename: filename\n  }, mimeType);\n\n  var ps = parseStream().pause();\n  stream.pipe(ps);\n\n  this._streams.push([leading, ps]); // if the size of this stream is known, plus the total content-length;\n  // otherwise, content-length is unknown.\n\n\n  if (typeof size === 'number') {\n    this._knownStreamSize += leading.length;\n    this._knownStreamSize += size;\n    this._knownStreamSize += NEW_LINE_BUFFER.length;\n  } else {\n    this._isAllStreamSizeKnown = false;\n  }\n\n  process.nextTick(this.resume.bind(this));\n  return this;\n};\n\nFormStream.prototype.buffer = function (name, buffer, filename, mimeType) {\n  if (filename && !mimeType) {\n    mimeType = mime.getType(filename);\n  }\n\n  var disposition = {\n    name: name\n  };\n\n  if (filename) {\n    disposition.filename = filename;\n  }\n\n  var leading = this._leading(disposition, mimeType);\n\n  this._buffers.push([leading, buffer]); // plus buffer length to total content-length\n\n\n  this._contentLength += leading.length;\n  this._contentLength += buffer.length;\n  this._contentLength += NEW_LINE_BUFFER.length;\n  process.nextTick(this.resume.bind(this));\n  return this;\n};\n\nFormStream.prototype._leading = function (disposition, type) {\n  var leading = [PADDING + this._boundary];\n  var disps = [];\n\n  if (disposition) {\n    for (var k in disposition) {\n      disps.push(k + '=\"' + disposition[k] + '\"');\n    }\n  }\n\n  leading.push('Content-Disposition: form-data; ' + disps.join('; '));\n\n  if (type) {\n    leading.push('Content-Type: ' + type);\n  }\n\n  leading.push('');\n  leading.push('');\n  return new Buffer(leading.join(NEW_LINE));\n};\n\nFormStream.prototype._emitBuffers = function () {\n  if (!this._buffers.length) {\n    return;\n  }\n\n  for (var i = 0; i < this._buffers.length; i++) {\n    var item = this._buffers[i];\n    this.emit('data', item[0]); // part leading\n\n    this.emit('data', item[1]); // part content\n\n    this.emit('data', NEW_LINE_BUFFER);\n  }\n\n  this._buffers = [];\n};\n\nFormStream.prototype._emitStream = function (item) {\n  var self = this; // item: [ fieldData, stream ]\n\n  self.emit('data', item[0]);\n  var stream = item[1];\n  stream.on('data', function (data) {\n    self.emit('data', data);\n  });\n  stream.on('end', function () {\n    self.emit('data', NEW_LINE_BUFFER);\n    return process.nextTick(self.drain.bind(self));\n  });\n  stream.resume();\n};\n\nFormStream.prototype._emitEnd = function () {\n  // ending format:\n  //\n  // --{boundary}--\\r\\n\n  this.emit('data', this._endData);\n  this.emit('end');\n};\n\nFormStream.prototype.drain = function () {\n  this._emitBuffers();\n\n  var item = this._streams.shift();\n\n  if (item) {\n    this._emitStream(item);\n  } else {\n    this._emitEnd();\n  }\n\n  return this;\n};\n\nFormStream.prototype.resume = function () {\n  this.paused = false;\n\n  if (!this._draining) {\n    this._draining = true;\n    this.drain();\n  }\n\n  return this;\n};\n\nFormStream.prototype.close = FormStream.prototype.destroy = function () {\n  this.emit('destroy');\n};","map":{"version":3,"names":["Stream","require","parseStream","util","mime","path","fs","destroy","PADDING","NEW_LINE","NEW_LINE_BUFFER","Buffer","FormStream","super_","call","_boundary","_generateBoundary","_streams","_buffers","_endData","_contentLength","_isAllStreamSizeKnown","_knownStreamSize","inherits","module","exports","prototype","boundary","i","Math","floor","random","toString","setTotalStreamSize","size","length","headers","options","String","k","file","name","filepath","filename","filesize","mimeType","getType","basename","stream","createReadStream","field","value","isBuffer","buffer","once","emit","bind","leading","_leading","ps","pause","pipe","push","process","nextTick","resume","disposition","type","disps","join","_emitBuffers","item","_emitStream","self","on","data","drain","_emitEnd","shift","paused","_draining","close"],"sources":["C:/Users/bryan/Desktop/myrepresentatives/frontend/node_modules/formstream/lib/formstream.js"],"sourcesContent":["/**\n * Data format:\n *\n\n--FormStreamBoundary1349886663601\\r\\n\nContent-Disposition: form-data; name=\"foo\"\\r\\n\n\\r\\n\n<FIELD-CONTENT>\\r\\n\n--FormStreamBoundary1349886663601\\r\\n\nContent-Disposition: form-data; name=\"file\"; filename=\"formstream.test.js\"\\r\\n\nContent-Type: application/javascript\\r\\n\n\\r\\n\n<FILE-CONTENT>\\r\\n\n--FormStreamBoundary1349886663601\\r\\n\nContent-Disposition: form-data; name=\"pic\"; filename=\"fawave.png\"\\r\\n\nContent-Type: image/png\\r\\n\n\\r\\n\n<IMAGE-CONTENT>\\r\\n\n--FormStreamBoundary1349886663601--\n\n *\n */\n\n'use strict';\n\nvar Stream = require('stream');\nvar parseStream = require('pause-stream');\nvar util = require('util');\nvar mime = require('mime');\nvar path = require('path');\nvar fs = require('fs');\nvar destroy = require('destroy');\n\nvar PADDING = '--';\nvar NEW_LINE = '\\r\\n';\nvar NEW_LINE_BUFFER = new Buffer(NEW_LINE);\n\nfunction FormStream() {\n  if (!(this instanceof FormStream)) {\n    return new FormStream();\n  }\n\n  FormStream.super_.call(this);\n\n  this._boundary = this._generateBoundary();\n  this._streams = [];\n  this._buffers = [];\n  this._endData = new Buffer(PADDING + this._boundary + PADDING + NEW_LINE);\n  this._contentLength = 0;\n  this._isAllStreamSizeKnown = true;\n  this._knownStreamSize = 0;\n}\n\nutil.inherits(FormStream, Stream);\nmodule.exports = FormStream;\n\nFormStream.prototype._generateBoundary = function() {\n  // https://github.com/felixge/node-form-data/blob/master/lib/form_data.js#L162\n  // This generates a 50 character boundary similar to those used by Firefox.\n  // They are optimized for boyer-moore parsing.\n  var boundary = '--------------------------';\n  for (var i = 0; i < 24; i++) {\n    boundary += Math.floor(Math.random() * 10).toString(16);\n  }\n\n  return boundary;\n};\n\nFormStream.prototype.setTotalStreamSize = function (size) {\n  // this method should not make any sense if the length of each stream is known.\n  if (this._isAllStreamSizeKnown) {\n    return this;\n  }\n\n  size = size || 0;\n\n  for (var i = 0; i < this._streams.length; i++) {\n    size += this._streams[i][0].length;\n    size += NEW_LINE_BUFFER.length; // stream field end pedding size\n  }\n\n  this._knownStreamSize = size;\n  this._isAllStreamSizeKnown = true;\n\n  return this;\n};\n\nFormStream.prototype.headers = function (options) {\n  var headers = {\n    'Content-Type': 'multipart/form-data; boundary=' + this._boundary\n  };\n\n  // calculate total stream size\n  this._contentLength += this._knownStreamSize;\n\n  // calculate length of end padding\n  this._contentLength += this._endData.length;\n\n  if (this._isAllStreamSizeKnown) {\n    headers['Content-Length'] = String(this._contentLength);\n  }\n\n  if (options) {\n    for (var k in options) {\n      headers[k] = options[k];\n    }\n  }\n\n  return headers;\n};\n\nFormStream.prototype.file = function (name, filepath, filename, filesize) {\n  var mimeType = mime.getType(filepath);\n\n  if (typeof filename === 'number' && !filesize) {\n    filesize = filename;\n    filename = path.basename(filepath);\n  } else if (!filename) {\n    filename = path.basename(filepath);\n  }\n\n  var stream = fs.createReadStream(filepath);\n\n  return this.stream(name, stream, filename, mimeType, filesize);\n};\n\n/**\n * Add a form field\n * @param  {String} name field name\n * @param  {String|Buffer} value field value\n * @return {this}\n */\nFormStream.prototype.field = function (name, value) {\n  if (!Buffer.isBuffer(value)) {\n    // field(String, Number)\n    // https://github.com/qiniu/nodejs-sdk/issues/123\n    if (typeof value === 'number') {\n      value = String(value);\n    }\n    value = new Buffer(value);\n  }\n  return this.buffer(name, value);\n};\n\nFormStream.prototype.stream = function (name, stream, filename, mimeType, size) {\n  if (typeof mimeType === 'number' && !size) {\n    size = mimeType;\n    mimeType = mime.getType(filename);\n  } else if (!mimeType) {\n    mimeType = mime.getType(filename);\n  }\n\n  stream.once('error', this.emit.bind(this, 'error'));\n  // if form stream destroy, also destroy the source stream\n  this.once('destroy', function () {\n    destroy(stream);\n  });\n\n  var leading = this._leading({ name: name, filename: filename }, mimeType);\n\n  var ps = parseStream().pause();\n  stream.pipe(ps);\n\n  this._streams.push([leading, ps]);\n\n  // if the size of this stream is known, plus the total content-length;\n  // otherwise, content-length is unknown.\n  if (typeof size === 'number') {\n    this._knownStreamSize += leading.length;\n    this._knownStreamSize += size;\n    this._knownStreamSize += NEW_LINE_BUFFER.length;\n  } else {\n    this._isAllStreamSizeKnown = false;\n  }\n\n  process.nextTick(this.resume.bind(this));\n\n  return this;\n};\n\nFormStream.prototype.buffer = function (name, buffer, filename, mimeType) {\n  if (filename && !mimeType) {\n    mimeType = mime.getType(filename);\n  }\n\n  var disposition = { name: name };\n  if (filename) {\n    disposition.filename = filename;\n  }\n\n  var leading = this._leading(disposition, mimeType);\n\n  this._buffers.push([leading, buffer]);\n\n  // plus buffer length to total content-length\n  this._contentLength += leading.length;\n  this._contentLength += buffer.length;\n  this._contentLength += NEW_LINE_BUFFER.length;\n\n  process.nextTick(this.resume.bind(this));\n\n  return this;\n};\n\nFormStream.prototype._leading = function (disposition, type) {\n  var leading = [PADDING + this._boundary];\n\n  var disps = [];\n\n  if (disposition) {\n    for (var k in disposition) {\n      disps.push(k + '=\"' + disposition[k] + '\"');\n    }\n  }\n\n  leading.push('Content-Disposition: form-data; ' + disps.join('; '));\n\n  if (type) {\n    leading.push('Content-Type: ' + type);\n  }\n\n  leading.push('');\n  leading.push('');\n\n  return new Buffer(leading.join(NEW_LINE));\n};\n\nFormStream.prototype._emitBuffers = function () {\n  if (!this._buffers.length) {\n    return;\n  }\n\n  for (var i = 0; i < this._buffers.length; i++) {\n    var item = this._buffers[i];\n    this.emit('data', item[0]); // part leading\n    this.emit('data', item[1]); // part content\n    this.emit('data', NEW_LINE_BUFFER);\n  }\n\n  this._buffers = [];\n};\n\nFormStream.prototype._emitStream = function (item) {\n  var self = this;\n  // item: [ fieldData, stream ]\n  self.emit('data', item[0]);\n\n  var stream = item[1];\n  stream.on('data', function (data) {\n    self.emit('data', data);\n  });\n  stream.on('end', function () {\n    self.emit('data', NEW_LINE_BUFFER);\n    return process.nextTick(self.drain.bind(self));\n  });\n  stream.resume();\n};\n\nFormStream.prototype._emitEnd = function () {\n  // ending format:\n  //\n  // --{boundary}--\\r\\n\n  this.emit('data', this._endData);\n  this.emit('end');\n};\n\nFormStream.prototype.drain = function () {\n  this._emitBuffers();\n\n  var item = this._streams.shift();\n  if (item) {\n    this._emitStream(item);\n  } else {\n    this._emitEnd();\n  }\n\n  return this;\n};\n\nFormStream.prototype.resume = function () {\n  this.paused = false;\n\n  if (!this._draining) {\n    this._draining = true;\n    this.drain();\n  }\n\n  return this;\n};\n\nFormStream.prototype.close = FormStream.prototype.destroy = function () {\n  this.emit('destroy');\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}