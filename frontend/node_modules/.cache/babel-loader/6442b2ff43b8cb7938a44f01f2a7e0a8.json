{"ast":null,"code":"'use strict';\n\nvar extend = require('extend-shallow');\n\nvar regexCache = {};\nvar all;\nvar charSets = {\n  default: {\n    '&quot;': '\"',\n    '&#34;': '\"',\n    '&apos;': '\\'',\n    '&#39;': '\\'',\n    '&amp;': '&',\n    '&#38;': '&',\n    '&gt;': '>',\n    '&#62;': '>',\n    '&lt;': '<',\n    '&#60;': '<'\n  },\n  extras: {\n    '&cent;': '¢',\n    '&#162;': '¢',\n    '&copy;': '©',\n    '&#169;': '©',\n    '&euro;': '€',\n    '&#8364;': '€',\n    '&pound;': '£',\n    '&#163;': '£',\n    '&reg;': '®',\n    '&#174;': '®',\n    '&yen;': '¥',\n    '&#165;': '¥'\n  }\n}; // don't merge char sets unless \"all\" is explicitly called\n\nObject.defineProperty(charSets, 'all', {\n  get: function () {\n    return all || (all = extend({}, charSets.default, charSets.extras));\n  }\n});\n/**\n * Convert HTML entities to HTML characters.\n *\n * @param  {String} `str` String with HTML entities to un-escape.\n * @return {String}\n */\n\nfunction unescape(str, type) {\n  if (!isString(str)) return '';\n  var chars = charSets[type || 'default'];\n  var regex = toRegex(type, chars);\n  return str.replace(regex, function (m) {\n    return chars[m];\n  });\n}\n\nfunction toRegex(type, chars) {\n  if (regexCache[type]) {\n    return regexCache[type];\n  }\n\n  var keys = Object.keys(chars).join('|');\n  var regex = new RegExp('(?=(' + keys + '))\\\\1', 'g');\n  regexCache[type] = regex;\n  return regex;\n}\n/**\n * Returns true if str is a non-empty string\n */\n\n\nfunction isString(str) {\n  return str && typeof str === 'string';\n}\n/**\n * Expose charSets\n */\n\n\nunescape.chars = charSets.default;\nunescape.extras = charSets.extras; // don't trip the \"charSets\" getter unless it's explicitly called\n\nObject.defineProperty(unescape, 'all', {\n  get: function () {\n    return charSets.all;\n  }\n});\n/**\n * Expose `unescape`\n */\n\nmodule.exports = unescape;","map":{"version":3,"names":["extend","require","regexCache","all","charSets","default","extras","Object","defineProperty","get","unescape","str","type","isString","chars","regex","toRegex","replace","m","keys","join","RegExp","module","exports"],"sources":["C:/Users/bryan/Desktop/myrepresentatives/frontend/node_modules/unescape/index.js"],"sourcesContent":["'use strict';\n\nvar extend = require('extend-shallow');\nvar regexCache = {};\nvar all;\n\nvar charSets = {\n  default: {\n    '&quot;': '\"',\n    '&#34;': '\"',\n\n    '&apos;': '\\'',\n    '&#39;': '\\'',\n\n    '&amp;': '&',\n    '&#38;': '&',\n\n    '&gt;': '>',\n    '&#62;': '>',\n\n    '&lt;': '<',\n    '&#60;': '<'\n  },\n  extras: {\n    '&cent;': '¢',\n    '&#162;': '¢',\n\n    '&copy;': '©',\n    '&#169;': '©',\n\n    '&euro;': '€',\n    '&#8364;': '€',\n\n    '&pound;': '£',\n    '&#163;': '£',\n\n    '&reg;': '®',\n    '&#174;': '®',\n\n    '&yen;': '¥',\n    '&#165;': '¥'\n  }\n};\n\n// don't merge char sets unless \"all\" is explicitly called\nObject.defineProperty(charSets, 'all', {\n  get: function() {\n    return all || (all = extend({}, charSets.default, charSets.extras));\n  }\n});\n\n/**\n * Convert HTML entities to HTML characters.\n *\n * @param  {String} `str` String with HTML entities to un-escape.\n * @return {String}\n */\n\nfunction unescape(str, type) {\n  if (!isString(str)) return '';\n  var chars = charSets[type || 'default'];\n  var regex = toRegex(type, chars);\n  return str.replace(regex, function(m) {\n    return chars[m];\n  });\n}\n\nfunction toRegex(type, chars) {\n  if (regexCache[type]) {\n    return regexCache[type];\n  }\n  var keys = Object.keys(chars).join('|');\n  var regex = new RegExp('(?=(' + keys + '))\\\\1', 'g');\n  regexCache[type] = regex;\n  return regex;\n}\n\n/**\n * Returns true if str is a non-empty string\n */\n\nfunction isString(str) {\n  return str && typeof str === 'string';\n}\n\n/**\n * Expose charSets\n */\n\nunescape.chars = charSets.default;\nunescape.extras = charSets.extras;\n// don't trip the \"charSets\" getter unless it's explicitly called\nObject.defineProperty(unescape, 'all', {\n  get: function() {\n    return charSets.all;\n  }\n});\n\n/**\n * Expose `unescape`\n */\n\nmodule.exports = unescape;\n"],"mappings":"AAAA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,gBAAD,CAApB;;AACA,IAAIC,UAAU,GAAG,EAAjB;AACA,IAAIC,GAAJ;AAEA,IAAIC,QAAQ,GAAG;EACbC,OAAO,EAAE;IACP,UAAU,GADH;IAEP,SAAS,GAFF;IAIP,UAAU,IAJH;IAKP,SAAS,IALF;IAOP,SAAS,GAPF;IAQP,SAAS,GARF;IAUP,QAAQ,GAVD;IAWP,SAAS,GAXF;IAaP,QAAQ,GAbD;IAcP,SAAS;EAdF,CADI;EAiBbC,MAAM,EAAE;IACN,UAAU,GADJ;IAEN,UAAU,GAFJ;IAIN,UAAU,GAJJ;IAKN,UAAU,GALJ;IAON,UAAU,GAPJ;IAQN,WAAW,GARL;IAUN,WAAW,GAVL;IAWN,UAAU,GAXJ;IAaN,SAAS,GAbH;IAcN,UAAU,GAdJ;IAgBN,SAAS,GAhBH;IAiBN,UAAU;EAjBJ;AAjBK,CAAf,C,CAsCA;;AACAC,MAAM,CAACC,cAAP,CAAsBJ,QAAtB,EAAgC,KAAhC,EAAuC;EACrCK,GAAG,EAAE,YAAW;IACd,OAAON,GAAG,KAAKA,GAAG,GAAGH,MAAM,CAAC,EAAD,EAAKI,QAAQ,CAACC,OAAd,EAAuBD,QAAQ,CAACE,MAAhC,CAAjB,CAAV;EACD;AAHoC,CAAvC;AAMA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASI,QAAT,CAAkBC,GAAlB,EAAuBC,IAAvB,EAA6B;EAC3B,IAAI,CAACC,QAAQ,CAACF,GAAD,CAAb,EAAoB,OAAO,EAAP;EACpB,IAAIG,KAAK,GAAGV,QAAQ,CAACQ,IAAI,IAAI,SAAT,CAApB;EACA,IAAIG,KAAK,GAAGC,OAAO,CAACJ,IAAD,EAAOE,KAAP,CAAnB;EACA,OAAOH,GAAG,CAACM,OAAJ,CAAYF,KAAZ,EAAmB,UAASG,CAAT,EAAY;IACpC,OAAOJ,KAAK,CAACI,CAAD,CAAZ;EACD,CAFM,CAAP;AAGD;;AAED,SAASF,OAAT,CAAiBJ,IAAjB,EAAuBE,KAAvB,EAA8B;EAC5B,IAAIZ,UAAU,CAACU,IAAD,CAAd,EAAsB;IACpB,OAAOV,UAAU,CAACU,IAAD,CAAjB;EACD;;EACD,IAAIO,IAAI,GAAGZ,MAAM,CAACY,IAAP,CAAYL,KAAZ,EAAmBM,IAAnB,CAAwB,GAAxB,CAAX;EACA,IAAIL,KAAK,GAAG,IAAIM,MAAJ,CAAW,SAASF,IAAT,GAAgB,OAA3B,EAAoC,GAApC,CAAZ;EACAjB,UAAU,CAACU,IAAD,CAAV,GAAmBG,KAAnB;EACA,OAAOA,KAAP;AACD;AAED;AACA;AACA;;;AAEA,SAASF,QAAT,CAAkBF,GAAlB,EAAuB;EACrB,OAAOA,GAAG,IAAI,OAAOA,GAAP,KAAe,QAA7B;AACD;AAED;AACA;AACA;;;AAEAD,QAAQ,CAACI,KAAT,GAAiBV,QAAQ,CAACC,OAA1B;AACAK,QAAQ,CAACJ,MAAT,GAAkBF,QAAQ,CAACE,MAA3B,C,CACA;;AACAC,MAAM,CAACC,cAAP,CAAsBE,QAAtB,EAAgC,KAAhC,EAAuC;EACrCD,GAAG,EAAE,YAAW;IACd,OAAOL,QAAQ,CAACD,GAAhB;EACD;AAHoC,CAAvC;AAMA;AACA;AACA;;AAEAmB,MAAM,CAACC,OAAP,GAAiBb,QAAjB"},"metadata":{},"sourceType":"script"}